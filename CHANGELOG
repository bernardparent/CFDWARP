
_____________________________________________________________________________________________________


                                       CFDWARP CHANGELOG

_____________________________________________________________________________________________________


2023 DEC 24b
  * in model/chem/_C2H4_Air_23s/zettervall2017b.c
    - some third body efficiencies were missing in 1 reaction
    

2023 DEC 24a
  * in model/chem/_C2H4_Air_23s/konnovzettervall.c
    - reaction 12 was erroneously commented and is now uncommented
    - some third body efficiencies were missing in 2 reactions
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023e.c
    - some third body efficiencies were missing in 2 reactions
    

2023 DEC 22a
  * in model/share/fluid_share.c
    - in _etat_from_rho_eta_k_psitilde(), fixed a misimplementation of the turbulence viscosity
      in the SST 1994 model (should be function of the vorticity magnitude, not the shear stress
      magnitude)
  * in model/fluid/doc/Transport_Equations/report.tex
    - added Menter 1994 SST model to the 2 k-omega models
    - improved the section on zetae (electron loss coefficient)
    

2023 DEC 20a
  * in cycle/share/cycle_share.c
    - in update_linked_nodes(), increased the buffer size 
      from (zone.ie-zone.is)*(zone.je-zone.js)if3DL(*(zone.ke-zone.ks)
      to (zone.ie-zone.is+1)*(zone.je-zone.js+1)if3DL(*(zone.ke-zone.ks+1))
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward()
      increased the buffer size 
      from (zone.ie-zone.is)*(zone.je-zone.js)if3DL(*(zone.ke-zone.ks)
      to (zone.ie-zone.is+1)*(zone.je-zone.js+1)if3DL(*(zone.ke-zone.ks+1))
  * in src/main.c
    - at the beginning of main(), increased the stack size to 16 MB
    

2023 DEC 15a
  * in model/chem/_NH3_Plasma_10s
    - made improvements to the Rodriguez model
    

2023 DEC 08a
  * in  model/chem/_NH3_Plasma_10s/rodriguez2023.c
    - made improvements
    

2023 DEC 07a
  * in model/chem/_NH3_Plasma_10s
    - made changes to rodriguez2023.c and its documentation

  
2023 DEC 06b
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - made minor updates
  * in model/chem/_NH3_Plasma_10s/doc/
    - added documentation of the rodriguez2023.c solver
    

2023 DEC 06a
  * in cycle/share/res_share.c
    - in find_Fstar_interface_FDS_muscl_without_CDF() added call to 
      find_conditioned_Lambda_absolute_restrained_from_jacvars
  * in cycle/share/ts_share.c
    - in void find_Aabs_restrained_from_jacvars(), now calls find_Lambda_restrained_from_jacvars()
      and find_conditioned_Lambda_absolute_restrained_from_jacvars()
  * in model/chem/_NH3_Plasma_10s
    - improved rodriguez2023.c (reaction 17) 
    - improved the documentation of omprakas2023.c
  * in model/fluid/_Favre-Reynolds_Tv/fluid.c, model/fluid/_Favre-Reynolds_plasma/fluid.c
    model/fluid/_Navier-Stokes_plasma/fluid.c
    - added gl->model.fluid.wminN2
  * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
    - in update_bdry_inflow_injection(), set wwall[specN2]=gl->model.fluid.wminN2
  * in model/share/fluid_share.c
    - changed find_L_restrained_from_jacvars() and find_Linv_restrained_from_jacvars() so that they
      use the eigenset1 eigenvectors and so that they use the thermodynamic speed of sound (not the
      speed of sound derived from the Jacobian matrix)
    - added find_Lambda_restrained_from_jacvars() 
    - added find_conditioned_Lambda_absolute_restrained_from_jacvars()
   

2023 DEC 05e
  * in model/chem/_NH3_Plasma_10s/rodriguez2023.c
    - in _kf1() and _kf2(), made sure theta is at least -50 -- needed to prevent an underflow
    - turned off reaction 17 (issues with it)
    
    
2023 DEC 05d
  * in model/chem/_NH3_Plasma_10s/chem.hh
    - fixed a bug with the species ordering
    

2023 DEC 05c
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c and model/chem/_NH3_Plasma_10s/rodriguez2023.c
    - changed the type to static double of the functions _kf*()
    

2023 DEC 05b
  * in model/chem/_NH3_Plasma_10s/chem.c
    - made changes to incorporate the rodriguez2023.c module
  * in model/chem/_NH3_Plasma_10s
    - added rodriguez2023.c
    

2023 DEC 05a
  * in various files, added argument np_t np to find_Qei()
  * in various files, added argument np_t np to find_dQei_dx()
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - added _kf1(), _kf2(), _kf3(), etc to avoid repeating these reaction rate coefficients
    - added find_Qchemave_bavafa2008()
  * in model/share/chem_share.c
    - added add_to_Q_2r3p()
    - added add_to_Q_2r4p()

  
2023 DEC 04a
  * in model/fluid/_Favre-Reynolds_Tv/fluid_conv.c
    - added eigenset1
  * in model/fluid/_Favre-Reynolds_plasma/fluid_conv.c
    - added eigenset1
  * in cycle/resconv/_MUSCL/resconv.c
    - in read_disc_resconv_actions(), when gl->cycle.resconv.FLUX==FLUX_FDSR
      now sets gl->cycle.resconv.CONVJACOBIAN=CONVJACOBIAN_FDSR
  * in cycle/share/ts_share.c
    - added find_Aabs_restrained_from_jacvars()
    - added find_dFstar_dUstar_FDSR_interface()
    - in add_dFstar_dUstar_to_TDMA(), added call to find_dFstar_dUstar_FDSR_interface()
    - in find_TDMA_jacobians_conservative(), added call to find_dFstar_dUstar_FDSR_interface()
    

2023 DEC 03a
  * in cycle/resconv/_MUSCL/resconv.c
    - added FLUX_FDSR flux
  * in cycle/share/res_share.c
    - added find_Fstar_interface_FDSR_muscl()
    - in find_Fstar_interface_FDS_muscl_without_CDF() added calls to find_L_restrained_from_jacvars
      and find_Linv_restrained_from_jacvars
    - in find_Fstar_interface_FDS_muscl_with_CDF() added calls to find_L_restrained_from_jacvars
      and find_Linv_restrained_from_jacvars
  * in model/share/fluid_share.c
    - added find_L_restrained_from_jacvars()
    - added find_Linv_restrained_from_jacvars()


2023 DEC 01a
  * in tools/chemkin2cfdwarp.c
    - fixed a bug which prevented the last chemkin reaction from being read 
  * in tools/obliqueshock.c
    - added Pstag2/Pstag1 as an additional output
    

2023 NOV 30b
  * renamed
    - timelevelcnt to timelevel
    

2023 NOV 30a
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - changed the rates for reaction 2
    - set all Qei terms to 0
  * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c and model/fluid/_Favre-Reynolds_plasma/fluid.c
    - added code for N2VIBMODEL_TEQUILIBRIUM
    
     
2023 NOV 26c
  * in model/chem/_Air_Plasma_11s/chem.c
    - deleted the constants ADDITIONALREACTION
    - replaced them with gl->model.chem.ADDITIONALREACTION[]
  

2023 NOV 26b
  * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
    - added BDRY_INFLOWINJECTIONCHOKED1 to the list of boundary conditions  


2023 NOV 26a
  * renamed
    - TMIN_LINDEMANN to TMIN_PROBLEMREACTIONS
  * in model/chem/_C2H4_Air_23s/konnovzettervall.c
    - added TMIN_PROBLEMREACTIONS clipping to reactions 49 and 67
  * in model/chem/_C2H4_Air_23s/zettervall2017.c
    - added TMIN_PROBLEMREACTIONS clipping to reactions 46 and 62
  * in model/chem/_C2H4_Air_23s/zettervall2017b.c
    - added TMIN_PROBLEMREACTIONS clipping to reactions 37 and 55
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023e.c
    - added TMIN_PROBLEMREACTIONS clipping to reactions 101 and 119
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - added the user-specified constant TMIN_PROBLEMREACTIONS to read_model_chem_actions()
  * in model/chem/_NH3_Plasma_10s/doc/report.tex
    - changed the rate of reaction #1 in the omprakas2023 model
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - changed the rate of reaction #1 in the omprakas2023 model
  * in model/fluid/_Favre-Reynolds/fluid_bdry.c
    - added BDRY_INFLOWINJECTIONCHOKED1 to the list of boundary conditions  


2023 NOV 22a
  * in model/chem/_C2H4_Air_23s/chem.c
    - added the user defined LINDEMANNREACTIONS
  * in model/chem/_C2H4_Air_23s/doc/report.tex
    - fixed a mistake related to the 3rd body efficiencies of various reactions
  * in model/chem/_C2H4_Air_23s/konnovzettervall.c
    - added missing reaction 78
  * in model/chem/_C2H4_Air_23s/zettervall2017.c
    - fixed a mistake related to the 3rd body efficiencies of various reactions
  * in model/chem/_C2H4_Air_23s/zettervall2017b.c
    - added missing reaction 66
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023e.c
    - added missing reaction 130
  * in model/chem/_NH3_Plasma_10s/chem.c
    - added a user define constant called TOWNSENDFROMTE
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - added code so that when TOWNSENDFROMTE is set to TRUE, then the townsend ionization rates
      use electron temperature instead of E/N
      

2023 NOV 17c
  * in src/data.c
    - in read_data_file_binary_ascii(), fixed a bug related to tmp_double which should have been
      tmp_long
      
  
2023 NOV 17b
  * in src/common.h
    - declared a variable timelevelcnt as a long integer
  * src/main.c
    - initialized timelevelcnt = 0 in #if defined(UNSTEADY)
  * in cycle/share/cycle_share.c
    - added timelevelcnt++ under increase_time_level()
    - added add_int_to_codex(codex,"timelevelcnt",gl->timelevelcnt) under update_runtime_codex_vars_except_xi_from_gl()
  * in src/data.c
    - added wfprintf for timelevelcnt under write_data_file_binary_ascii()
    - added fscanf for timelevelcnt under read_data_file_binary_ascii()


2023 NOV 17a
  * in model/chem/_C2H4_Air_23s
    - moved reactions from chem.c to zettervall2017.c
    - created a new solver zettervall2017b.c obtained from a CHEMKIN file
    - created a new solver konnovzettervall.c obtained from a CHEMKIN file
    

2023 NOV 14a
  * in lib/exm/exm.c
    - added the functions is_file_writable() and is_file_readable()
  * in model/chem/_NH3_Plasma_10s/doc
    - improved the report.tex
  * in src/control.c
    - in write_control(), added a call to is_file_writable
  * in src/data.c
    - in write_data_file(), added a call to is_file_writable
  * in src/post.c
    - in write_post_file(), added a call to is_file_writable
    

2023 NOV 13a
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - changed reactions 1 and 2 to be function of Te instead of E/N
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Se(), now averages EDOTJE and not EDOTJEOVERMUENE within averaged_rates() 


2023 NOV 06a
  * in model/chem/_NH3_Plasma_10s/chem.c
    - in write_model_chem_template() and read_model_chem_actions(), added code to handle 
      kf1averagedmax and kf2averagedmax
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - in find_W_omprakas2023() and find_dW_dx_omprakas2023 now calls 
      _averaged_rate_limited() for reactions 1 and 2    
  * in model/fluid/_Navier-Stokes_plasma/fluid.hh
    - changed EDOTOVERNEMUE to EDOTJ
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Semfield(), S[fluxet] is now computed with an averaged rate of EDOTJ not EDOTOVERNEMUE
  * in model/share/model_share.c
    - added _averaged_rate_limited()
    

2023 NOV 01b
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Semfield(), changed the averaged rate from EDOTJ to EDOTJOVERNEMUE
    - in find_Se(), changed the averaged rate from EDOTJE to EDOTJEOVERNEMUE
    

2023 NOV 01a
  * in model/share/model_share.c
    - fixed a bug in the parameters of _averaged_rate()
    

2023 OCT 31d
  * in model/chem/_NH3_Plasma_34s/Li2012.c
    - in find_W_li2012() fixed again mistakes related to units
    - in find_dW_li2012(), fixed dkfdT mistakes
    

2023 OCT 31c
  * in model/fluid/_Navier-Stokes_plasma/fluid.hh
    - fixed a bug: EDOTJEOVERMUENE should be EDOTJE
  * in model/share/model_share.c
    - in _averaged_rate(), added better error messages when the id can not be found
    

2023 OCT 31b
  * in src/common.h
    - added typedef char averagedrates_id_type[100];
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c and model/chem/_NH3_Plasma_10s/omprakas2023.c
    - changed the calls to _averaged_rate() with a id string instead of a id number
  * in model/chem/_NH3_Plasma_10s/chem.hh
    - changed the type of averagedrates_chem_id to averagedrates_id_type from long
  * in model/fluid/_Navier-Stokes_plasma/fluid.hh
    - changed the type of averagedrates_fluid_id to averagedrates_id_type from long
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_name_fluid(), now outputs the id string of the averaged rate
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - changed the calls to _averaged_rate() with a id string instead of a id number
    - in find_Se(), now averages EdotJe not EdotjeovermueNe
  * in src/common.h
    - added typedef char averagedrates_id_type[100]
    
 
2023 OCT 31a
  * in model/chem/_NH3_Plasma_10s/omprakas2023.c
    - turned off reactions 3 and 4
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Se(), added an _averagedrate() call for _Eemag_smoothed and for _E_dot_Je_over_mueNe
    

2023 OCT 28a
  * in model/chem/_NH3_Plasma_10s
    - added omprakas2023.c
  * in model/chem/_NH3_Plasma_10s/chem.c
    - modified functions to include CHEMMODEL_OMPRAKAS2023
  * in model/chem/_NH3_Plasma_10s/doc/report.tex
    - added omprakas2023 model documentation
    

2023 OCT 25a
  * in src/data.c
    - in read_data_file_binary_ascii() and write_data_file_binary_ascii(), added code to 
      read and write the averagedrates to the data file
      

2023 OCT 20b
  * in  model/thermo/_generic/thermo.c
    - in _ionizationpot(), added ionization energy for SMAP_H2P


2023 OCT 20a
  * in model/chem/_NH3_Plasma_34s/
    - fixed issues with the units of several reactions
    

2023 OCT 18a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_value_fluid(), fixed a bug for EdotJe post variable
    

2023 OCT 15a
  * in model/share/fluid_share.c
    - in find_Stnorm(), turned off the Qk limiter for TURBMODEL_SST1994
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - in find_dW_dx_bavafa2008(), turned off the implicit treatment of reactions 1-4
    

2023 OCT 13b
  * in model/fluid/_*/fluid_bdry.c
    - in update_bdry_back_pressure() and update_bdry_outflow_Mach(), now reads the pressure
      and Mach number from a given param instead of from the last properties at the bdry node 
  * in tools
    - deleted inletgeom.c
    

2023 OCT 13a
  * in model/chem/_NH3_Plasma_34s/Li2012.c
    - various modifications due to wrong units listed in Li's paper
  * in model/fluid/_Favre-Reynolds/fluid_bdry.c
    - in update_bdry_back_pressure() and update_bdry_outflow_Mach(), now reads the pressure
      and Mach number from a given param instead of from the last properties at the bdry node 
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_*_fluid(), made modifications so that the averagedrates are added to
      the post variables
      

2023 OCT 11b
  * in model/fluid/_*/fluid_source.c
    - in find_dSchem_dU(), renamed dSchemdU to dS_dU


2023 OCT 11a
  * in model/chem/_C2H4_Air_23s/chem.c
    - in reaction [26], made sure the temperature does not fall below 500 K
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023e.c
    - in reaction [130], made sure the temperature does not fall below 500 K
  * in model/fluid/_*/fluid_source.c
    - in find_dSchem_dU(), added code at the end to make sure the diagonal elements of the
      Jacobian are not positive
  * in model/share/chem_share.c
    - in add_to_dW_*_*_Lindemann(), updated the "Updated Equations"
      

2023 OCT 08a
  * in src/common.h
    - added a fake omp_lock_t when OPENMPTHREADS is not defined
  * in src/control.c
    - in reduce_wall_distance_given_wallxyz(), added calls to omp lock and unlock
      before writing the wall distance at one node
    - in find_wall_distance(), added omp_init_lock(), initialized nodelock and passed it as a
      parameter to reduce_wall_distance_given_wallxyz()


2023 OCT 06a
  * in cycle/share/cycle_share.c
    - in add_to_averaged_rates(), now calls find_Sstar() instead of find_Schem()
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - made reactions 1-4 implicit again
  * renamed:
    - _AVERAGEDRATES to _AVERAGEDRATES_CHEM
    - numaveragedrates to numaveragedrates_chem
    - averagedrates_react to averagedrates_chem_id
  * in model/fluid/_Navier-Stokes_plasma/fluid.hh
    - added _AVERAGEDRATES section
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Semfield(), now calls _averaged_rate() when calculating S[fluxet]
  * in model/share/chem_share.c
    - removed _averaged_rate()
  * in model/share/model_share.c
    - added _averaged_rate() with modifications to handle the fluid (not only the chem) averaged
      rates
  * in src/common.h
    - added #define numaveragedrates (numaveragedrates_chem+numaveragedrates_fluid)
    

2023 OCT 05c
  * in model/chem/_NH3_Plasma_10s/chem.hh
    - added missing 3 and 4 to averagedrates_react


2023 OCT 05b
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - added _average_rates() calls to reactions 3 and 4
    - removed the implicit treatment of reactions 1-4
    

2023 OCT 05a
  * in cycle/share/cycle_share.c
    - in setup_multizone(), set ks and ke to 0 when in 2D mode (to avoid a valgrind complaint)
  * in src/common.c
    - in find_subzones_in_zone_given_zonelength(), set ks and ke to 0 when in 2D mode 
      (to avoid a valgrind complaint)
    

2023 OCT 04a
  * in model/chem/
    - added _NH3_Plasma_34s/
  * in model/share/chem_share.c
    - added functions add_to_W_fw_2r4p() and add_to_dW_fw_2r4p()
  * in model/thermo/_generic/enthalpy.c and model/thermo/_generic/thermo.c and
    model/transport/_Dixon-Lewis/transport.c
    - added species NNH, N2H2, N2H3, N2H4, H-, H3+, N3+, N4+, NH2-, NH+, NNH+, H2P, H2C1Pi, N2D,
      H3, N4, N3


2023 OCT 03a
  * in model/fluid/_Favre*/fluid.c
    - in read_model_fluid_actions() added TURBMODEL_SST1994
  * in model/share/fluid_share.c
    - in _ktilde(), _eps(), _omega(), _etat_from_rho_eta_k_psitilde(), _etakstar(), _etapsistar(),
      find_k_psi_bdry_wall(),  _factepsilon(), find_Stnorm(), find_dStnorm_dU(), find_dStcomp_dU()
      added code for TURBMODEL_SST1994
    - added function _F1() needed for TURBMODEL_SST1994
    - in _etat_from_rho_eta_k_psitilde(), fixed a bug with KOMEGA2008 model: sum was set to zero
      after being computed while it shouldn't be
  * in src/control.c
    - in find_wall_distance(), removed the calls to OMP threading (will lead to problems because
      there is no nodelock implemented here)
  * in bin
    - added shearlayer.wrp
    

2023 OCT 02b
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - removed unused variables
  * in model/chem/_NH3_Plasma_10s/bavafa2008.h
    - added np parameter to find_W_bavafa2008 and to find_dW_dx_bavafa2008
  * in model/chem/_NH3_Plasma_10s/chem.c
    - added np parameter to find_W_bavafa2008 and to find_dW_dx_bavafa2008 calls
  * in src/main.c
    - changed gl.AVERAGEDRATES=AVERAGEDRATES_SET to gl.AVERAGEDRATES=AVERAGEDRATES_OFF
    

2023 OCT 02a
  * in cycle/_standard/cycle.c and cycle/share/cycle_share.c and model/share/chem_share.c
    - renamed SetAveragedRates to SetAveragedRatesToZero
  * in cycle/share/cycle_share.c
    - rewrote the function SetAveragedRatesToZero()


2023 OCT 01a
  * in model/fluid/_Favre*/fluid.hh
    - added #define _FLUID_WALLDISTANCE
  * in model/fluid/_Favre*/fluid_bdry.c
    - added is_node_bdry_wall_fluid()
  * in model/fluid/*/fluid_bdry.c
    - fixed a bug in is_node_bdry_symmetry_plane_fluid(): double RET should be bool RET
  * in model/fluid/_Favre-Reynolds/fluid_post.c
    - in find_post_variable_*_fluid(), added the variable "wall distance"
  * in src/common.h
    - in npbs_t, added walldistance2
  * in src/control.c
    - added reduce_wall_distance_given_wallxyz()
    - added find_wall_distance()
    - in readcontrol_actions(), added call to find_wall_distance()
    

2023 SEP 29a
  * in cycle/*/cycle.c (except _standard)
    - in init_cycle(), added gl->AVERAGEDRATES=AVERAGEDRATES_OFF
  * in cycle/_standard/cycle.c
    - in runtime_actions_cycle_specific(), added AVERAGEDRATES passed as the last argument
      of UpdateFluid()
    - in runtime_actions_cycle_specific(), added calls to SetAveragedRates() and AddToAveragedRates()
  * in cycle/share/cycle_share.c
    - in update_runtime_codex_vars_except_xi_from_gl(), added AVERAGEDRATES_OFF and 
      AVERAGEDRATES_ON
    - added set_averaged_rates()
    - added add_to_averaged_rates()
  * in model/chem/*/chem.c
    - added parameter np to functions find_W() and find_dW_dx()
  * in model/chem/_NH3_Plasma_10s/bavafa2008.c
    - added _averaged_rate() call to reactions 1 and 2
  * in model/chem/_NH3_Plasma_10s/chem.hh
    - added definition of _AVERAGEDRATES, numaveragedrates, and averagedrates_react
  * in model/fluid/_*/fluid_source.c
    - in find_Schem() and find_dSchem_dU(), added parameter np[l] to find_W() and find_dW_dx()
    - in test_dSchem_dU(), added parameter np[l] to test_dW_dx()
  * in model/share/chem_share.c
    - added np to test_dW_dx()
    - added _averaged_rate()
  * in src/common.h
    - added definitions of AVERAGEDRATES_ADD, AVERAGEDRATES_SET, AVERAGEDRATES_ON, AVERAGEDRATES_OFF
    - in  gl_t, added averagedrates_time and AVERAGEDRATES
    - in npbs_t, added averagedrates[numaveragedrates]
    

2023 SEP 08a
  * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
    - added boundary condition BDRY_INFLOWINJECTION1
  * in model/thermo/_generic/enthalpy.c
    - added more info on how enthalpy data for species NH4 was obtained


2023 JUL 31a
  * in model/fluid/_Navier-Stokes/fluid_bdry.c
    - added BDRY_INFLOWINJECTION1, and update_bdry_inflow_injection()
    

2023 JUL 27a
  * in lib/exm/exm.c
    - added find_words_from_string()
  * in src/common.h
    - added the type initvarname_t
  * in src/data.c
    - added find_interpolation_map()
    - added _map_interpolation_var()
    - in read_data_file_interpolation() made changes to deal with mapping of interpolation
      variables
    - in write_data_file_interpolation() added the names of the variables to the interpolation
      file
  * in src/data.h
    - in input_t, added *interpolationvarsmap and INTERPOLATIONMAP variables
  * in src/main.c
    - in write_options(), added the option -imap
    - in main(), added code for the -imap option
  * in model/_model.h
    - added find_default_initvar_name() and find_default_initvar_name_emfield()
  * in model/emfield/*/emfield.c
    - added find_default_initvar_name_emfield()
  * in model/fluid/_*/fluid_init.c and model/fluid/_drift-diffusion/fluid.c
    - added find_default_initvar_name()
  

2023 JUL 20a
  * in model/share/chem_share.c
    - Added functions add_to_W_2r4p, and add_to_dW_2r4p
  * in model/share/chem_share.h
    - Listed functions add_to_W_2r4p, and add_to_dW_2r4p
  * in model/transport/_Dixon-Lewis/transport.c
    - added species NH3, NH2, NH4+, NH3+, NH2+, and NH4
  * in model/thermo/_generic/thermo.c
    - added species NH3, NH2, NH4+, NH3+, NH2+, and NH4
  * in model/thermo/_generic/thermo.c
    - added ionizationenergy for NH3 under _ionizationpot()
  * in model/thermo/_generic/thermo.hh
    - added species NH3, NH2, NH4+, NH3+, NH2+, and NH4
  * in model/thermo/_generic/enthalpy.c
    - added species NH3, NH2, NH4+, NH3+, NH2+, and NH4
  * in model/chem/
    - added _NH3_Plasma_10s/
  
  
2023 JUL 17a
  * in model/share/chem_share.c
    - in add_to_dW_fw_2r3p_Lindemann() and add_to_dW_fw_3r2p_Lindemann(), rewrote dkfdX2
      and dkfdT so that they can be used at very low temperatures; note that they lead to NaNs at
      temperatures less than 300K because the terms on the denominator went beyond the IEEE double
      precision limit for small numbers
      

2023 JUN 30a
  * in model/chem/_C2H4_Air_23s/chem.hh and model/chem/_C2H4_Air_Plasma_36s/chem.hh
    - mapped SMAP_CHO to SMAP_HCO
    - mapped SMAP_CH2O to SMAP_HCHO
  * in model/thermo/_generic/enthalpy.c and model/thermo/_generic/thermo.c and 
    model/transport/_Dixon-Lewis/transport.c, model/thermo/_generic/thermo.hh
    - renamed species CHO to HCO
    - renamed species CH2O to HCHO
    - got rid of the second species HCO (redundant)


2023 JUN 29a
  * in model/emfield/_test/emfield.c
    - in find_linearization_coefficients_inner_node_emfield(), fixed a bug: a "-=" operator
      should rather be a "+=" operator


2023 JUN 28a
  * in model/emfield/_Epotential/emfield.c
    - changed the function find_linearization_coefficients_inner_node_emfield() so that it uses
      _sigma_interface() instead of calculating it from the mobilities; this fixes a bug when
      the emfield cut is not at the same location as the fluid cut
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_linearization_coefficients_inner_node_emfield_DELTAVK(), fixed a bug: a "-=" operator
      should rather be a "+=" operator
       

2023 JUN 27a
  * in cycle/tsemf/_GS/tsemf.c
    - renamed np->bs->tsemfcoeff used by SOR2 to np->bs->tsemfcoeff2 because tsemfcoeff is used 
      by SOR
  * in model/emfield/_Epotential*/emfield.hh
    - added #define EMFIELD_SHARE
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in write_bdry_fluid_template(), added gammaeminus to the All(BDRY_WALLTFIXED1) template
  * in model/share/emfield_share.c
    - changed #ifdef EMFIELD to #ifdef EMFIELD_SHARE
  * in model/emfield
    - added _test emfield method that can be used with the non-plasma fluid modules
    

2023 JUN 26b
  * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
    - in update_bdry_wall(), fixed a bug with illegal memory space reading:
      now calls find_U_2() only when BDRYDIRECFOUND is TRUE; otherwise,
      calls update_bdry_outflow; 
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in write_bdry_fluid_template(), added param BDRY_WALLADIABATIC1 to BDRY_WALLADIABATIC1
    - in update_bdry_wall(), fixed an issue with BDRY_WALLADIABATIC1 which has only 1 parameter
      (not 2)
    - in update_bdry_wall() fixed a bug with illegal memory space reading: 
      now calls find_U_2() only when BDRYDIRECFOUND is TRUE; otherwise,
      calls update_bdry_outflow


2023 JUN 26a
  * in model/share/emfield_share.h
    - added missing function _Jdispstar_interface()
  * in model/emfield/_Epotential/emfield.c
    - in find_linearization_coefficients_inner_node_emfield(), added unsteady terms
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_linearization_coefficients_inner_node_emfield_*(), added unsteady terms
    

2023 JUN 23a
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_SOR_node(), added a condition that checks if the node is valid
      before summing the neighbor nodes values
    - in update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward(), modified 
      the MPI exchange of data using exlap so that it is valid when the linearization coefficients 
      cover more than a 3x3x3 subdomain


2023 JUN 22a
  * in src/common.h
    - in np_t, changed fluxemfield_t tsemfcoeff[27] to fluxemfield_t tsemfcoeff[125]
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - added find_DeltaVk_not_phi()
    - added find_DeltaVk_phi()
    - added find_Jstar_emf_interface_DELTAVK()
    - renamed find_Jstar_emf_interface() to find_Jstar_emf_interface_STANDARD()
    - rewrote find_Jstar_emf_interface() so it calls either find_Jstar_emf_interface_DELTAVK()
      or find_Jstar_emf_interface_STANDARD()
    - added find_linearization_coefficients_inner_node_emfield_DELTAVK()
    - renamed find_linearization_coefficients_inner_node_emfield() to
      find_linearization_coefficients_inner_node_emfield_STANDARD()
    - rewrote find_linearization_coefficients_inner_node_emfield() so that it calls either 
      find_linearization_coefficients_inner_node_emfield_DELTAVK() 
      or find_linearization_coefficients_inner_node_emfield_STANDARD()


2023 JUN 17a
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_SOR_node(), fixed a bug related to koffset 
    - in  update_dUstar_emfield_SOR_istation(), fixed a bug related to koffset
  * in src/common.c
    - in _al(), changed assert(theta<nd) to a more appropriate if (theta>=nd && offset!=0) fatal_error()
    - in _node_rank(), added assert(is_node_in_zone(i,j,k,domainlim));
    

2023 JUN 15b
  * in model/emfield/_Epotential*/emfield.c
    - in find_linearization_coefficients_inner_node_emfield(), made coeffgl->ke and coeffgl->ks
      equal to 0 when in 2D
  * in src/common.h
    - in gl_t, added EXM_gl3D_t tsemfcoeffzone
    - in np_t, added tsemfcoeff[27]
  * in cycle/share/cycle_share.c
    - in update_prim_emfield_mem_in_zone_4(), added a call to 
      find_linearization_coefficients_inner_node_emfield() and store them in tsemfcoeff 
      and tsemfcoeffzone
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_SOR_node(), now uses tsemfcoeff instead of coeffp1 and coeffm1
    - in update_dUstar_emfield_SOR_istation(), now uses tsemfcoeff instead of coeffp1 and coeffm1
    

2023 JUN 15a
  * renamed find_linearization_coefficients_inner_node_emfield() 
    to find_linearization_coefficients_inner_node_emfield_interface()
  * in cycle/share/tsemf_share.c
    - added  update_dUstar_emfield_Newton_ij_3() which calls the new function
      find_linearization_coefficients_inner_node_emfield()
    - in update_dUstar_emfield_Newton_ij(), now calls update_dUstar_emfield_Newton_ij_3()
  * in lib/exm/exm.c
    - added EXM_al3() and EXM_all3()
    - rewrote EXM_ai3()
  * in model/emfield
    - copied _Epotential-Bfixed to _Epotential-Bfixed_old
  * in model/emfield/_Epotential/emfield.c
    - in find_linearization_coefficients_bdry_node_emfield(), got rid of the DIREC_FOUND condition
      when finding the linearization coefficients for BDRYEMF_EXTRAPOLATED1 and BDRYEMF_DIELECTRIC
    - added find_linearization_coefficients_inner_node_emfield()
    - in update_bdry_emfield(), changed the BC from ACCURACY_SECONDORDER to ACCURACY_FIRSTORDER
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_linearization_coefficients_bdry_node_emfield(), got rid of the DIREC_FOUND condition
      when finding the linearization coefficients for BDRYEMF_EXTRAPOLATED1 and BDRYEMF_DIELECTRIC
    - added find_linearization_coefficients_inner_node_emfield()
    - in update_bdry_emfield(), changed the BC from ACCURACY_SECONDORDER to ACCURACY_FIRSTORDER
    - added find_Jstar_emf_interface()
    - added _Jstar_interface_local()
    - added _Jtstar_interface_local()
    - in find_J(), find_Fstar_interface_emfield(), find_prim_emfield_mem_3()
      now calls _Jtstar_interface_local() instead of _Jtstar_interface()
    - in read_disc_emfield_actions(), added new variable CURRENTEMFSTENCIL
  * in tools/atten.c
    - made improvements
    

2023 JUN 03a
  * in tools
    - added atten.c
  * in model/share/transport_share.c
    - in _mue_from_Nn_Ni_Te_rhok(), changed how the electron temperature is clipped at 300K; in
      the past, the clipping applied to both the electron-ion and electron-neutral collisions; now
      it applies only to the electron-neutral collisions


2023 JUN 01a
  * in bin
    - added MHD_generator_ebeam.wrp
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_ADI(), added some asserts
  * in cycle/tsemf/_AF/tsemf.c
    - in update_dUstar_emfield_DDADI(), added some asserts
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_linearization_coefficients_bdry_node_emfield(), added one assert
  * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
    - in find_Semfield(), now calls _zetav_from_Te_Aleksandrov() instead of _zetav_from_Te()
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - removed emfieldworkheatfact and added emfieldworkfact and emfieldheatfact
    - added N2VIBJOULEHEATINGMODEL
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Semfield(), added N2VIBJOULEHEATINGMODEL
    - in find_Semfield(), now calls _E_dot_J_recast() instead of _E_dot_J()
  * in model/share/emfield_share.c
    - in _E_dot_J_recast(), added parameters heatfact and workfact
  * in model/thermo/_generic/thermo.c
    - in _zetav_from_Te(), now make Te at least 300K instead of at least 0K.
    

2023 MAY 25a
  * in model/fluid/_*_plasma/fluid.c
    - in _mu(), added the E field adjustment everytime _mu is called even when starting from mumem
    - in find_prim_fluid_mem(), took away the E field adjustment to mumem
  * in model/chem/_N2_Plasma_4s
    - added parent2023.c
  * in model/chem/_N2_Plasma_4s/chem.c
    - added modifications to call parent2023 scheme
  * in model/beam/.config
    - changed ebeam_fixed from experimental to non-experimental
    

2023 MAY 24b
  * in model/chem/_N2_Plasma_4s/chem.c and model/chem/_N2_Plasma_4s/doc/report.tex
    - added the chemical solver PARENT2023B
  * in model/chem/_N2_Plasma_4s
    - added parent2023b.c and parent2023b.h
    

2023 MAY 24a
  * in src/init.c
    - in reorder_initvar_species() and read_init_actions_fluid(), fixed a bug related 
      to the default species treatment. Also improved code so that the default species can be
      located anywhere within the species list, not just at the end of the species list.
       

2023 MAY 23a
  * in model/thermo/_generic/thermo.c
    - in _a_from_w_T_equilibrium(), added some debug info when (Rmix*cpmix*T/(cpmix-Rmix)<0
  * deleted model/chem/_N2_Plasma_3s_3r
  * added model/chem/_N2_Plasma_4s/
  * in model/share/fluid_share.c
    - in _w_product_at_catalytic_wall(), fixed a bug: when coeffwA==0, should return w at node lB
      thus added  "if (coeffwA==0.0) return(_w(np[lB],specP));"     
  * in tools/chemkin2cfdwarp.c
    - fixed a few bugs
    

2023 APR 27a
  * in tools/chemkin2cfdwarp.c
    - added capability to find electron excitation energy when not specified using the _exci_*() 
      functions
  * in model/chem/_Air_Plasma_11s/thoguluva2023.c
    - fixed some bugs related to the backward rates not being determined properly when setting 
      the BOLSIGREACTIONS flag to TRUE
      
    
2023 APR 25a
  * in model/thermo/_generic/enthalpy.c
    - fixed a mistake in the C2H4+ polynomial for the enthalpy
  * in model/share/chem_share.c
    - added functions _exci_2r2p(), _exci_2r3p(), _exci_2r4p()
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023e.c
    - changed find_dQei_dx_Adamovich2023e() and find_Qei_Adamovich2023e() so that they obtain
      the excitation energy from _exci_2r2p(), _exci_2r3p(), _exci_2r4p()
      

2023 APR 21a
  * in model/chem/_C2H4_Air_Plasma_36s/
    - added adamovich2023e.c
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - added calls to adamovich2023e
    

2023 APR 07a
  * in model/chem/_Air_Plasma_11s/parent2023.c
    - reverted to 23apr02a version
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - reverted to 23apr02a version
    

2023 APR 04a
  * in model/chem/_Air_Plasma_11s/parent2023.c
    - deleted reactions 26-28
    - changed reactions 24-25 to Park (1990) instead of BOLSIG
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - in Parent (2023) model, deleted reactions 26-28 and changed reactions 24-25 to Park (1990)
    

2023 APR 02a
  * changed C2H4AirPlasma30s to C2H4AirPlasma36s


2023 MAR 25a
  * in src/control.c
    - in readcontrol_actions(), added a call to find_metrics_on_all_nodes() after the Bdry()
      module is read to update the metrics of the symmetry nodes
  * in src/init.c
    - in reorder_initvar_species(), fixed bug related to the special case where "default" is the 
      last species specified in Init() and the number of species listed in Init() is equal to the
      number of species in the chemical solver
  

2023 MAR 22a
  * in model/emfield/_Epotential*/emfield.c
    - in write_bdry_emfield_template(), deleted the call to Faces() within the template (obsolete)
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template() and read_model_fluid_actions(), added variable emissivity
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - added functions find_Srad() and find_dSrad_dU()
    - in find_Sstar(), added call to find_Srad()
    - in find_dSstar_dUstar(), added call to find_dSrad_dU()
  * in tools/equilairplasma.c
    - git rid of the option filename
    - now outputs to the screen, not to a file
    - when Tbegin=Tend, changed the output format for better readability
    

2023 MAR 07c
  * in model/thermo/_generic/thermo.c
    - fixed a small error in the molecular weight of C2H
    

2023 MAR 07b
  * renamed
    - _a_from_w_T() to _a_from_w_T_equilibrium()
    - _cp_from_w_T() to _cp_from_w_T_equilibrium()
  * in model/fluid/_*_plasma/fluid.c
    - in _kappan(), call _cp_from_w_T_neutrals_equilibrium() instead of _cp_from_w_T()
    - in find_prim_fluid_mem(), call _cp_from_w_T_neutrals_equilibrium() instead of _cp_from_w_T()
  * in model/thermo/_generic/thermo.c
    - added _cp_from_w_T_equilibrium() and _cp_from_w_T_neutrals_equilibrium()
    - in _a_from_w_T_equilibrium(), changed the call from _cp_from_w_T() to _cp_from_w_T_equilibrium()
      

2023 MAR 07a
  * in model/fluid/_*_plasma/fluid.c
    - renamed kappamem by kappanmem
  * in model/thermo/_thermo.h
    - deleted _cpk_from_T(long spec, double T)
  * in model/transport/_Dixon-Lewis/transport.c
    - in _kappak_from_T(), now calls _cpk_from_T_equilibrium() instead of _cpk_from_T()
  * in src/common.h
    - in npwk_t, added kappanmem
  * in model/thermo/_generic/
    - added enthalpy_sai.c (temporary file which is used to isolate a bug)
    

2023 MAR 02a
  * in src/post.c
    - in read_post_actions(), uncommented the code below (not yet tested sufficiently)
      (this fixes memory allocation issues when calling Xstation in the Post() module
      

2023 FEB 24a
  * in tools/chemkin2cfdwarp.c
    - some improvements
    

2023 FEB 22a
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - added the CHEMMODEL_TEST1 option
  * in model/chem/_C2H4_Air_Plasma_36s/
    - added test1.c and test1.h which were obtained from thermal_ignition_test1.chemkin given
      by Adamovich


2023 FEB 21a
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023c.c
    - fixed bugs in 1r1p reactions
  * in model/chem/_C2H4_Air_Plasma_36s/adamovich2023d.c
    - updated all reactions using latest chemkin2cfdwarp program
  * in model/share/emfield_share.c
    - in _E_dot_J(), now calls find_E(np[l],gl,E); instead of find_E_smoothed(np, gl, l, E);
      --> find_E_smoothed() lead to sanitizer complaining when using MPI
  * in tools/chemkin2cfdwarp.c
    - fixed a bug related to calA and reactions with 1 or 3 reactants
    

2023 FEB 16b
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - added CHEMMODEL_ADAMOVICH2023C
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template(), read_model_fluid_actions(), added QENSOURCETERMS
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport() added code to remove Qen when QENSOURCETERMS is set
      to FALSE
  

2023 FEB 16a
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - found a bug in find_dQei_dx(): !gl->model.chem.ADJUSTED_* should be gl->model.chem.ADJUSTED_*
  * in tools/chemkin2cfdwarp.c
    - fixed two bugs related to the Lindeman reactions
    

2023 FEB 15a
  * in model/chem/_C2H4_Air_Plasma_36s/
    - rearranged the files significantly so that the combustion model is not
      separated from the plasma model anymore; all the reactions are now rather stored in
      one file: adamovich2023d.c
    - fixed a bug related to the Lindeman reactions which were not implemented correctly in
      the 4th version of the Adamovich model 
  

2023 FEB 14b
  * in bin
    - fixed several wrp files so that the Faces() call is replaced by Plane() calls
    

2023 FEB 14a
  * in src/bdry.c
    - in read_bdry_actions(), got rid of the action Faces() which should be replaced in the 
      control files by the Plane() commands
      

2023 FEB 13a
  * in cycle/tsemf/_AF/tsemf.c
    - in update_dUstar_emfield_IMAF(), added a is_node_bdry() before
      calling find_bdry_direc()
  * in model/emfield/_Epotential/emfield.c
    - in find_linearization_coefficients_bdry_node_emfield(), added 
      assert(is_node_bdry(np[lA],TYPELEVEL_EMFIELD))
  * in src/bdry.c
    - in read_bdry_actions(), in calling Faces(), zone should be set first to zone=gl->domain_lim
      instead of zone=gl->domain_all
      

2023 FEB 12a
  * in model/metrics/_generic/metrics.c
    - in find_unit_vector_normal_to_boundary_plane(), now uses is_node_bdry_with_single_direc()
      to determine valid nearby bdry nodes instead of probing for bdry nodes with the same
      bdry node type as given by _node_type(np[lA], TYPELEVEL)
  * in src/bdry.c
    - added is_node_bdry_with_single_direc()
    - in is_multiple_bdry_direc() and in find_bdry_direc(), added 
      assert(is_node_bdry(np[l_A],TYPELEVEL));
  

2023 FEB 10a
  * in src/bdry.c
    - in update_node_type(), fixed a bug: need to call is_zone_intersecting_zone() before
      calling _zone_intersection()
      

2023 FEB 09a
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - fixed bug IONIZATIONREACTION[67] is now IONIZATIONREACTION[79]
  * in src/bdry.c
    - in read_block(), improved the error messages
  

2023 FEB 03b
  * in src/bdry.c
    - in write_block_template() and read_block_actions(), changed the name of _EMFIELD_ACTIONNAME
      to EMField and the name of _FLUID_ACTIONNAME to Fluid
  * in bin/*wrp
    - fixed the wrp files so they can be read with the latest src/bdry.c Block() action
    

2023 FEB 03a
  * in lib/gridg/2Dbase.c
    - in GRIDG_read_grid_2D_from_file(), GRIDG_read_grid_2D_from_argum(), uncommented calls to
      find_xy_on_ghost_nodes -> needed to do the x station cuts within Post() module
  * in lib/gridg/3Dbase.c
    - in GRIDG_read_grid_3D_from_file(), GRIDG_read_grid_3D_from_argum(), uncommented calls to
      find_xyz_on_ghost_nodes -> needed to do the x station cuts within Post() module
  * in model/chem/_Air_Plasma_11s/thoguluva2023.c
    - changed EXPON_TTV from 0.75 to 0.8
  * in model/fluid/doc/Transport_Equations/report.tex
    - In the section "Electron Energy Loss Function", fixed a mistake in the first equation: the
      electron thermal diffusion term should not be there because this term is included within the
      convection term when the convection velocity includes diffusion
      

2023 JAN 23a
  * in bin/Keller-Kloker.wrp, bin/Leblanc.wrp, bin/Noh2D.wrp, bin/Noh3D.wrp, bin/OREX.wrp, bin/RAM-C-II.wrp,
    bin/Ringleb.wrp, bin/Schulein.wrp, bin/Sedov.wrp, bin/Sod.wrp, bin/Starikovskii.wrp, bin/Taylor-Green.wrp
    bin/Titarev-Toro.wrp, bin/Woodward-Colella_blast_wave.wrp, bin/Woodward-Colella_forward_step.wrp, 
    bin/cylindercrossflow2D.wrp, bin/cylinderinnerflow2D.wrp, bin/pipeflow3D.wrp
    - made modifications to the control files so that they can be run with the latest CFDWARP
  * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
    - added a missing #define EIGENSET14 14 at the beginning of the file that was preventing
      compilation
  * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
    - in find_Sstar(), got rid of unneeded long dim;
    

2023 JAN 22c 
  * in src/bdry.c
    - made various changes so that read_bdrymod is now read_bdry and read_bdry is now read_block
    - added write_block_template() which includes templates for Cut() and Link()
  * in src/control.c
    - in write_control(), added call to write_block_template()
    - in readcontrol_actions(), made changes to accomodate the change read_bdrymod->read_bdry
      and read_bdry->read_block
  * in model/fluid/_*/fluid_bdry.c
    - in write_bdry_fluid_template(), removed Cut() and Link() templates
    - in write_bdry_fluid_template(), changed the All() BC to BDRY_WALLTFIXED1 and added Twall=300;
      on the preceding line
  * in model/emfield/_Epotential/emfield.c
    - in write_bdry_emfield_template(), removed Cut() and Link() templates


2023 JAN 22b
  * in src/control.c
    - in integrate_area_on_bdry(), added the parameter AreaMag and code needed to compute AreaMag
    - in read_control_functions(), added function _AreaMag()
  * in src/post.c
    - in read_post_functions(), changed call to integrate_area_on_bdry() to include AreaMag
    

2023 JAN 22a
  * in src/control.c
    - in readcontrol_actions(), added the action BdryMod
  * in src/bdry.c
    - added read_bdrymod_actions() and read_bdrymod()
    

2023 JAN 21a
  * in src/post.c
    - removed integrate_area_on_bdry() and find_surface_area_given_metrics()
  * in src/control.c
    - added find_surface_area_given_metrics() and integrate_area_on_bdry()
    - in read_control_functions(), added function "_Area()"
    - in find_metrics_on_all_nodes(), added MPI code to broadcast the metrics
    - in readcontrol_actions(), removed MPI code broadcasting the metrics and moved it to 
      find_metrics_on_all_nodes()
      

2023 JAN 20a
  * in tools/chemkin2cfdwarp.c
    - fixed some realloc bugs
  * in model/share/fluid_share.c
    - in find_init_mass_fraction_templates(), fixed a bug related to strcpy which should be strcat
  * in src/bdry.c
    - added function unlink_nodes_in_zone() taken from the Unlink() command
    - in read_bdry_actions(), now calls unlink_nodes_in_zone() when the Cut() command is called
  * in model/chem/_Air_Plasma_11s/thoguluva2023.c
    - changed EXPON_TTV from 0.5 to 0.75
  * in model/fluid/_Favre-Reynolds/fluid_bdry.c
    - added BDRY_INFLOWINJECTION1, and update_bdry_inflow_injection()


2023 JAN 10a
  * in model/chem/_Air_Plasma_11s/
    - added option to use reaction rates based on BOLSIG+ data in thoguluva2023.c
    - fixed a typo in find_dW_dx_Kim2021() for reaction 12 in kim2021.c and removed redundant lines of code
    
    
2023 JAN 09a
  * in model/share/fluid_share.c
    - changed parameters to update_w_V_at_injection_wall() to include nukA and nukB and not Twall
      and Tewall
  * in model/fluid/_Favre-Reynolds/fluid_bdry.c
    - added BDRY_WALLTFIXEDINJECTION1
  * in model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c, model/fluid/_Navier-Stokes/fluid_bdry.c, 
    model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), updated call to update_w_V_at_injection_wall() so that it is function
      of nukA and nukB
      

2023 JAN 06a
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_zetaA2(), commented out special treatment for the charged species
      fluxes; now deals with charged species fluxes as other fluxes
    - in find_init_mass_fraction_templates(), fixed a bug related to writing the default control
      file (using the -w flag) when both the O2 and N2 species are present in the chemical solver
      

2023 JAN 05a
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Harten(), condition_Lambda_plus_minus_Peclet(), 
      condition_Lambda_plus_minus_Pascal(), condition_Lambda_plus_minus_Parent(), 
      condition_Lambda_plus_minus_Gnoffo(), removed the eigenvalue conditioning related to zeta2
    - added function condition_Lambda_plus_minus_zetaA2() which conditions the eigenvalues
      to ensure that the eigenvalues of the waves are within same order of magnitude as the 
      spectral radius and, if not, blend them with Steger-Warming Eigenvalues
    - in condition_Lambda_plus_minus(), added a call to condition_Lambda_plus_minus_zetaA2()
  * in tools/chemkin2cfdwarp.c
    - improved the coding related to pointers, reallocs, and mallocs 
      

2023 JAN 02b
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - implemented version 4 of the Adamovich model


2023 JAN 02a
  * in model/fluid/_Favre-Reynolds/fluid_conv.c
    - changed some comments related to EIGENSET
  * in model/fluid/_Navier-Stokes/fluid_conv.c
    - added find_Linv_from_jacvars_eigenset1(), find_L_from_jacvars_eigenset1()
  * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
    - renamed eigenset 1 to 0, 2 to 1, and 3 to 2
    - deleted rearrange_metrics_EIGENSET_3(); now calls rearrange_metrics_eigenset2() instead
  * in src/common.c
    - added subtract_two_matrices()
    - in invert_matrix(), now calls invert_matrix_partial_pivoting() instead of 
      invert_matrix_gaussian_elimination()
    - in write_license(), changed the copyright years
  * in src/test.c
    - in test_L(), added comparison between L analytical and L numerical obtained from Linv
  

2022 DEC 16a
  * in model/chem/_Air_Plasma_11s/
    - added thoguluva2023.c and thoguluva2023.h
  * in model/chem/_Air_Plasma_11s/chem.c and model/chem/_Air_Plasma_11s/chem.hh
    - incorporated the thoguluva2023 model
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added the thoguluva2023 model documentation
  * in model/chem/_C2H4_Air_Plasma_36s/
    - added from_Igor_v4.txt
  

2022 NOV 26a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid(), added the electron
      and ion mobilities
  * in model/fluid/_Navier-Stokes_plasma/fluid.hh
    - added ncs to totalpostvarfluid
  * in tools/chemkin2cfdwarp.c
    - made improvements
    

2022 NOV 20a
  * in cycle/tsemf/_GS/tsemf.c
    - in update_dUstar_emfield_SOR2_node(), added "long i,j,k;" when NDEBUG is not defined
  * in model/fluid/doc/Transport_Equations/report.tex
    - Started improving the section on the electron energy loss function
  * in tools/chemkin2cfdwarp.c
    - made various improvements so that the species names are stored in RAM and not in a file


2022 NOV 04a
  * in src/control.c
    - in read_control_functions(), removed calls to _x_DISTMPI_local(), _y_DISTMPI_local(),
      _z_DISTMPI_local() and replaced them by calls to _x_DISTMPI_global()
    - calls to _x_global() in the control file are now deprecated. Use _x() instead
     

2022 NOV 03b
  * in src/bdry.c
    - in read_bdry(), fixed a bug related to the call of the functions _x(), _y(),
      _x_global(), _y_global() in the module Bdry() when using MPI.
      

2022 NOV 03a
  * in lib/exm/exm.c
    - in EXM_angle_between_vectors(), now calls EXM_normalize_vector()
    - added EXM_normalize_vector()
    - added EXM_find_rotation_matrix()
    - added EXM_multiply_matrix_vector()
  * in lib/gridg/3Dbase.c
    - added function _distance()
    - rewrote entirely the function Plane() in general form using the rotation matrix; fixes
      issues we had previously with this function
  * in lib/gridg/share.c
    - added GRIDG_al3()
    - added GRIDG_find_ijk_from_l()
    

2022 OCT 28a
  * in cycle/share/cycle_share.c
    - in update_linked_nodes(), fixed a bug that occurred when using MPI and nodes linked together
      through the Bdry(Link()) command: when the linked inner nodes were not aligned with the linked
      boundary nodes along the same axis (either i, j, of k), the function update_linked_nodes()
      did not link the proper nodes together
    - in update_runtime_codex_xi_from_gl(), added 1 to flux_ximax before sending it to the codex
      variables so that flux_ximax of 1 corresponds to the 1st component of the vector not the 2nd
  * in bin
    - added pipeflow3D.wrp
    - renamed circle.wrp to cylinderinnerflow2D.wrp 
    - renamed cylinder_in_freestream.wrp to cylindercrossflow2D.wrp
    

2022 OCT 25a
  * in cycle/_*/cycle.c
    - in write_runtime_template(), added the parameter flux_ximax
  * in cycle/res/_generic/res.c
    - in update_residual(), calls find_xi() instead of _xi()
  * in cycle/share/cycle_share.c
    - in update_runtime_codex_xi_from_gl(), made modifications for flux_ximax
    - renamed function _xi() to find_xi() 
    - in find_xi(), added flux_xi as a parameter
  * in model/share/fluid_share.c
    - in find_init_mass_fraction_templates() and find_init_molar_fraction_templates()
      added code so that w_default or chi_default is not added when the species are limited
      to O2 and N2
  * in src/common.c
    - in resume_node(), added initialization of flux_xi to -1
  * in src/common.h
    - in gl_t added flux_ximax
    - in npwk_t added flux_xi
  * in src/main.c
    - in main(), added gl.flux_ximax to the output when OUTPUTRESIDUAL is called
    

2022 OCT 24a
  * in lib/gridg/2Dbase.c 
    - in GRIDG_read_grid_2D_from_argum and GRIDG_read_grid_2D_from_file, removed call to
      find_xy_on_ghost_nodes(). This is not needed anymore and leads to an assert error when 
      building certain types of meshes.
  * in lib/gridg/3Dbase.c 
    - in GRIDG_read_grid_3D_from_argum and GRIDG_read_grid_3D_from_file, removed call to
      find_xyz_on_ghost_nodes(). This is not needed anymore and leads to an assert error when 
      building certain types of meshes.


2022 OCT 23a
  * in tools/inlet.c
    - added stagnation temperatures to the output 
    

2022 OCT 21d
  * in model/fluid/_Favre-Reynolds_plasma/fluid.c
    - in find_Kstar_interface(), fixed a bug: the turbulence contribution to kappa was not included
  

2022 OCT 21c
  * in model/fluid/_Favre-Reynolds_plasma
    - modified fluid.c, fluid.hh, fluid_source.c to add heat addition Qadd and Fbody forces


2022 OCT 21b
  * in model/chem
    - added _C2H4_Air_3s_0r
  * in model/fluid/_Favre-Reynolds_Tv
    - modified fluid.c, fluid.hh, fluid_source.c to add heat addition Qadd and Fbody forces
  * in model/share/fluid_share.c
    - in find_Sheatforces(), fixed a bug that was introduced in 22oct20b: the body forces and heat
      addition should not be multiplied by Omega
      

2022 OCT 21a
  * in model/chem/_C2H4_Air_Plasma_36s/chem.c
    - added COMBUSTIONMODEL_ZETTERVALL2017B
  * in model/chem/_C2H4_Air_Plasma_36s/
    - added zettervall2017b.c
  

2022 OCT 20b
  * in model/fluid/_Favre-Reynolds/fluid_source.c, model/fluid/_Navier-Stokes/fluid_source.c,
    model/fluid/_Navier-Stokes_perfect/fluid_source.c, model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Sstar(), added call to find_Sheatforces() and modified function accordingly
  * in model/share/fluid_share.c
    - added function find_Sheatforces()
    - in read_model_fluid_actions_Fbody_Qadd(), added (*np)[_ai(gl,i,j,k)].bs->QADD=TRUE
      and (*np)[_ai(gl,i,j,k)].bs->FBODY=TRUE; for all nodes where the body forces and
      heat added is initialized
  * in src/common.c
    - in create_node(), added np->bs->FBODY=FALSE; and np->bs->QADD=FALSE;
  * in src/common.h
    - in npbs_t, added bool FBODY,QADD
    

2022 OCT 20a
  * moved model/chem/_C2H4_Air_Plasma_30s/ to model/chem/_C2H4_Air_Plasma_36s/
  * in model/thermo/_generic/enthalpy.c, model/thermo/_generic/thermo.c, and
    model/transport/_Dixon-Lewis/transport.c
    - removed species CH2CHO
    - renamed species C3H6 to C3H6p
    - renamed species C3H7 to C3H7n
    - added species CH2(S), CH3CO, C3H4p, C3H3p1
    

2022 OCT 17a
  * in tools/chemkin2cfdwarp.c
    - fixed a few bugs and added code to read in the species from the CHEMKIN file
    
    
2022 OCT 14b
  * in src/common.c
    - in find_zone_intersection() and find_zone_from_argum() made sure ks,ke are given a value 
      even in 2D. This should not make any difference when running the code but eliminates a
      warning in valgrind


2022 OCT 14a
  * in cycle/share/cycle_share.c
    - in process_code_runtime(), set Runtimearg.CFLinit to -1.0
  * in src/control.c
    - in readcontrol_actions(), set readcontrolarg.CFLinit=CFLinit
  * in src/control.h
    - in read_control(), added CFLinit to the list of arguments
  * in src/main.c
    - in write_options(), added the option -CFL to reset the CFL number
    - in  main(), process the flag -CFL and read in CFLinit, and then add CFLinit to the 
      arguments of read_control()
      

2022 OCT 13a
  * in tools/inlet.c
    - added output of turning angle and shock angle for every shock
    

2022 OCT 12a
  * in lib/exm/exm.c
    - added function process_flag_long
  * in tools/inlet.c
    - complete rewrite so that it can be used specifying any number of shocks 


2022 OCT 06b
  * in bin/*wrp
    - updated files with NavierStokesPlasma() module to include recent constants added to the model
      

2022 OCT 06a
  * in model/share/chem_share.c
    - added add_to_*_*_2r2p_Lindemann() functions
  * in model/share/chem_share.h
    - listed add_to_*_*_2r2p_Lindemann() functions
  * in model/thermo/_generic/thermo.c
    - added species: C3H7, H2CC, CH2CHO
  * in model/thermo/_generic/thermo.hh
    - added species: C3H7, H2CC, CH2CHO to species map
  * in model/thermo/_generic/enthalpy.c
    - added McBride polynomial coefficients for species: C3H7, H2CC, CH2CHO
  * in model/transport/_Dixon-Lewis/transport.c
    - added transport properties for species: C3H7, H2CC, CH2CHO


2022 OCT 05a
  * in model/fluid/doc/Transport_Equations/report.tex
    - fixed some small typos in the equations relating to charged species heat fluxes 
      (this was already fixed in the code, but had not been fixed in the documentation)
  * in model/transport/doc/report.tex
    - added drift velocities from Tarasenko
  

2022 OCT 03a
  * in tools/chemkin2cfdwarp.c
    - made improvements
    

2022 OCT 01a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - removed constants TEFROMEOVERN, TEMIN, TEMAX and added them within write_model_chem_template()
    - in write_model_chem_template(), added the flag QEI_TERMS
    - in find_dQei_dx() and find_Qei(), added all electron impact reactions from from_Igor_v3.txt
    

2022 SEP 30a
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template(), added template for calls to heat point and body forces
    - in read_model_fluid_actions_2(), added call to read_model_fluid_actions_Fbody_Qadd()
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Sstar(), added source terms for the body forces and heat points
  * in model/thermo/_generic/thermo.c
    - added species: C3H6, CH2CO, CH3CHO, C3H5
  * in model/thermo/_generic/thermo.hh
    - added species: C3H6, CH2CO, CH3CHO, C3H5 to species map
  * in model/thermo/_generic/enthalpy.c
    - added McBride polynomial coefficients for species: C3H6, CH2CO, CH3CHO, C3H5
  * in model/transport/_Dixon-Lewis/transport.c
    - added transport properties for species: C3H6, CH2CO, CH3CHO, C3H5
    

2022 SEP 28a
  * in model/chem/_C2H4_Air_Plasma_30s/zettervall2017.c
    - used chemkin2cfdwarp to populate the functions 
  * in model/chem/doc/report.tex
    - added the section "Townsend Ionization Rates From Experiments"
  * in model/chem/doc/townsend
    - renamed townsend.c to townsend2.c
    - added townsend1.c
  * in model/fluid/_Navier-Stokes/fluid.c
    - in write_model_fluid_template(), added template for calls to heat point and body forces
    - in read_model_fluid_actions_2(), added call to read_model_fluid_actions_Fbody_Qadd()
  * in model/fluid/_Navier-Stokes/fluid_source.c
    - in find_Sstar(), added source terms for the body forces and heat points
  * in tools/chemkin2cfdwarp.c
    - small bug fixes
    

2022 SEP 23a
  * in model/transport/doc/report.tex
    - added a table on the experimentally-determined drift velocities in N2 and O2
    

2022 SEP 16a
  * in model/share/chem_share.c
    - Updated add_to_W_*_Lindemann and add_to_dW_*_Lindemann functions to handle the case where 
      both A0 and Ainf are zero


2022 SEP 14a
  * in model/chem/_C2H4_Air_23s/chem.c
    - made modifications to the third body efficiencies
  * in model/chem/_C2H4_Air_23s/doc/report.tex
    - made modifications to the third body efficiencies
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - added Kunnov2009 combustion model
    - added species HCO and HCCO
  * in model/thermo/_generic/enthalpy.c
    - added species HCO and HCCO
  * in model/thermo/_generic/thermo.c
    - added species HCO and HCCO
  * in model/transport/_Dixon-Lewis/transport.c
    - added species HCO and HCCO
  * in model/transport/doc/report.tex
    - changed M for \cal M in a few locations
    - changed D for \cal D in one location
  * in model/chem/_C2H4_Air_Plasma_30s
    - added konnov2009.c and konnov2009.h
    

2022 SEP 12a
  * in tools/chemkin2cfdwarp.c
    - various modifications to be able to handle the Lindemann (HIGH and LOW) reactions
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - added function _Echi() to find the electric field to be used with the Schottky effect
  * in model/share/chem_share.c
    - in add_to_W_*_Lindemann, rewrote kf so that there is no division by kinf to avoid possible
      division by zero
    - in add_to_dW_*_Lindemann, fixed the jacobians
    

2022 SEP 02a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - added ADJUSTED_N2_TOWNSEND_IONIZATION and ADJUSTED_O2_TOWNSEND_IONIZATION
    - updated the reactions to model/chem/_C2H4_Air_Plasma_30s/from_Igor_v3.txt
  * in model/share/chem_share.c and model/share/chem_share.h
    - fixed a typo in the  units outlined before the *Lindemann* functions
    

2022 AUG 27a
  * in model/share/chem_share.c
    - added functions add_to_W_fwbw_2r3p_Lindemann, add_to_W_fwbw_3r2p_Lindemann,
      add_to_W_bw_2r3p_Lindemann, add_to_W_bw_3r2p_Lindemann, add_to_dW_fwbw_2r3p_Lindemann,
      add_to_dW_fwbw_3r2p_Lindemann, add_to_dW_bw_2r3p_Lindemann, add_to_dW_bw_3r2p_Lindemann
      

2022 AUG 26a
  * in bin/misc/MHD_earth_entry2.wrp
    - in Post() added code to correctly compute the heat flux on the top and bottom surfaces
  * in model/chem/_C2H4_Air_23s/doc/report.tex
    - fixed the documentation for the Lindemann reaction rate
  * in model/fluid/_*_plasma/fluid.c
    - in write_model_fluid_template(), read_model_fluid_actions(), got rid of 
      INCLUDE_E_EFFECTS_ON_MOBILITY and added
      INCLUDE_E_EFFECTS_ON_ELECTRON_MOBILITY and INCLUDE_E_EFFECTS_ON_ION_MOBILITY
    - in _mu(), find_prim_fluid_mem(), made modifications to implement the new 
      INCLUDE_E_EFFECTS_ON_ELECTRON_MOBILITY and INCLUDE_E_EFFECTS_ON_ION_MOBILITY flags
  * in src/post.c
    - in integrate_heat_to_surface_on_bdry(), added code to account for the contribution of
      Dstar*Ustar to the heat flux; this includes the contributions coming from the charged
      species enthalpies
      

2022 AUG 25a
  * in bin/Schulein.wrp
    - fixed several bugs
  * in model/share/chem_share.c
    - fixed a bug in the rate coefficients in the add_to_W_fw_*_Lindemann() functions  
    

2022 AUG 24b
  * in model/chem/_C2H4_Air_Plasma_30s/zettervall2017.c
    - updated the reactions following those in model/chem/_C2H4_Air_23s/chem.c


2022 AUG 24a
  * in model/chem/_C2H4_Air_23s/chem.c
    - in find_W() and find_dW_dx(), fixed a mistake in the call to add_*_Lindemann: M should not
      be the sum of all the M species molar fractions, but simply the molar fraction of the 
      species M under consideration
    - in find_W() and find_dW_dx(), changed the calls to add_*_Lindemann
  * in model/chem/_C2H4_Air_23s/doc/report.tex
    - improved the explanations and notations for the Lindermann reactions so that they are in 
      sync with the code
  * in model/share/chem_share.c
    - in add_*_Lindemann, removed the parameter M; rather the molar fraction of M is now set
      to the one of the last reactant species
    - in add_*_Lindemann, fixed the units of A and A0 and their associated reaction rate coefficients
      everywhere
  * in tools/chemkin2cfdwarp.c
    - fixed a bug related to reaction count
  * in model/chem/_C2H4_Air_Plasma_30s
    - added from_Igor_v3.txt
      

2022 AUG 22b
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - updated the chemical reactions using the latest chemkin2cfdwarp
    

2022 AUG 22a
  * in tools/chemkin2cfdwarp.c
    - added capability to read reactions with "=" operator
    

2022 AUG 18a
  * in model/share/transport_share.c
    - in adjust_muk_for_Ek_effect(), added contribution of electric field to electron mobilities
      from Tarasenko paper
  * in model/transport/doc/report.tex
    - added section "Effect of Electric Field on Mobilities"
  * in model/chem/_Air_Plasma_11s/chem.c, model/chem/_Air_Plasma_11s/doc/report.tex,
    model/chem/_Air_Plasma_11s/parent2023b.c
    - added PARENT2023B model
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - changed TEMAX from 1e6 to 1e5 K
  * in model/share/chem_share.c
    - improved documentation of fit4 functions
  

2022 AUG 13a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - made modifications
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template() and read_model_fluid_actions() added SCHOTTKY_EFFECT
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), added dWschottky contribution to the work function
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the section ``Thermionic Emission Boundary Condition'', added documentation explaining
      Schottky effect to the work function
  * in model/share/chem_share.c
    - added  _kf_fit4() and _dkfdT_fit4()
    - in add_to_*_fit4(), added calls to _kf_fit4() and _dkfdT_fit4()
  * in tools/chemkin2cfdwarp.c
    - made various modifications to take into account CHEMKIN syntax involving REACTIONS
  * in bin
    - Updated Schulein.wrp
    

2022 AUG 10a
  * in cycle/resconv/_MUSCL/resconv.c
    - in write_disc_resconv_template(), changed the default values for AOWENO_gammalo and
      AOWENO_gammahi
  * in various files
    - replaced "R=1.9872;" by "R=Rchem;"
  * in model/thermo/_thermo.h
    - added #define Rchem 1.987192004e0
  * in model/share/chem_share.c
    - replaced 1.987192004e0 by Rchem
    - in add_to_*_fit4(), changed k = A*T^n*exp(E1/Te+E2/Te^2+E3/Te^3+E4/Te^4) 
      to k = A*T^n*exp(E1/(R*T)+E2/(R*T)^2+E3/(R*T)^3+E4/(R*T)^4) and E1[K] to E1[cal/mole]
      and similarly for E2, E3, E4
  * in bin
    - added Schulein.wrp
    

2022 AUG 09b
  * in cycle/_standard/cycle.c
    - in init_cycle(), reverted to commenting out the first update_prim_emfield_mem_in_zone()
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - in add_W_Ionization_Adamovich() and add_dW_dx_Ionization_Adamovich(), added Te=max(Te,T)
  

2022 AUG 09a
  * in model/chem/_Air_Plasma_11s/
    - added parent2023.c and parent2023.h
  * in model/chem/_Air_Plasma_11s/chem.c and model/chem/_Air_Plasma_11s/chem.hh and model/chem/_Air_Plasma_11s/Makefile
    - incorporated the parent2023 model
  * in model/chem/_Air_Plasma_11s/doc/report.tex and model/chem/_Air_Plasma_11s/doc/all.bib
    - added the parent2023 model documentation
  * in model/emfield/_Epotential*/emfield.c
    - in write_disc_emfield_template(), changed the default value of Ediv from 10.0 to 1e99
  * in cycle/_standard/cycle.c
    - in init_cycle(), uncommented the first update_prim_emfield_mem_in_zone()  

    
2022 AUG 04a
  * in src/post.c
    - in write_post_file_tecplot(), added wprintf statements that write the datatype of the variables to the Tecplot post file header
  * in tools/chemkin2cfdwarp.c
    - fixed bugs related to reactions that include the M species
  * in tools/makemovie.sh and tools/makepng.sh
    - now outputs an error message if the -style flag is not used


2022 AUG 01a
  * in model/fluid/_*_plasma/fluid.hh and model/fluid/_drift-diffusion/fluid.hh
    - added INCLUDE_E_EFFECTS_ON_MOBILITY to gl_model_fluid_t
  * in model/fluid/_*_plasma/fluid.c and model/fluid/_drift-diffusion/fluid.c
    - in write_model_fluid_template(), added INCLUDE_E_EFFECTS_ON_MOBILITY
    - in read_model_fluid_actions(), added find_bool_var_from_codex() to read 
      INCLUDE_E_EFFECTS_ON_MOBILITY
    - in _mu(), added call to adjust_muk_for_Ek_effect()
    - in find_prim_fluid_mem(), added call to adjust_muk_for_Ek_effect()
  * in model/share/transport_share.c
    - in adjust_muk_for_Ek_effect(), removed code for O-
  * in model/transport/doc/report.tex
    - fixed a typo in the table for the mobilities: N_n should be N when finding
      the effect of the electric field on the ion mobility


2022 JUL 29a
  * in model/chem/_C2H4_Air_23s/doc/report.tex
    - updated the footnotes
  * in model/transport/doc/report.tex
    - added the NRL Coulomb logarithm to determine the Parent-Macheret electron mobility
  * in model/share/transport_share.c
    - changed LNLAMBDA from LNLAMBDA_RAIZER to LNLAMBDA_NRL (matches experimental data better
      for both air and hydrogen plasmas)


2022 JUL 27a
  * in model/chem
    - added _C2H4_Air_23s
  * in model/transport/doc/report.tex
    - fixed a mistake in the table outlining the ion mobilities
  * in src/control.c
    - added Zettervall bib
  * in src/main.c
    - in write_options(), added "(EXPERIMENTAL)" to the mpi input and output (-im, -im1, -om etc) 
      flags
  * in tools/chemkin2cfdwarp.c
    - fixed a bug related to the UNIX vs Windows end of line characters. Now, the code should
      work whether the CHEMKIN file was written with a Windows or a UNIX editor
    - made the description of the functions more detailed
  * in tools/makepng.sh
    - got rid of "ConvertTo256Colors = Yes". This leads to problems when too many contour
      levels are specified in the style file
      

2022 JUL 26a
  * in tools/chemkin2cfdwarp.c
    - added comments describing each function
    - fixed a memory leak
  * in model/emfield/_Epotential*/emfield.c
    - in write_disc_emfield_template(), added a better description of what Ediv does
    
 
2022 JUL 25a
  * in model/fluid/_Favre-Reynolds/fluid.c
    - in write_model_fluid_template(), added templates for body forces and heat addition
    - in read_model_fluid_actions_2(), calls read_model_fluid_actions_Fbody_Qadd()
    - in read_model_fluid_actions(), initialize Qadd and Fbody
  * in model/fluid/_Favre-Reynolds/fluid.hh and model/fluid/_Navier-Stokes_perfect/fluid.hh
    - added #define _FLUID_FBODY_QADD
  * in model/fluid/_Favre-Reynolds/fluid_source.c
    - in find_Sstar(), added Qadd and Fbody contributions
  * in model/fluid/_Navier-Stokes_perfect/fluid.c
    - in read_model_fluid_actions_2(), replaced all the coding by a call to 
      read_model_fluid_actions_Fbody_Qadd()
  * in model/share/fluid_share.c
    - added read_model_fluid_actions_Fbody_Qadd()
  * in tools/chemkin2cfdwarp.c
    - fixed bugs that lead to a crash when called with no flags
  * in lib/soap/soap.c
    - in BA_fprintf(), made modifications so that when the output file is "stdout", the output
      is directed to the terminal's stdout instead of the file "./stdout".


2022 JUL 24a
  * in model/share/emfield_share.c
    - in find_E_at_interface(), fixed a bug: the discretization stencil used invalid nodes
      when in the presence of a magnetic field
      

2022 JUL 23a
  * in model/share/emfield_share.c
    - in find_J_at_node_from_Jstar_at_interfaces(), some of the asserts checking if the node is valid
      were changed for TYPELEVEL_EMFIELD instead of TYPELEVEL_FLUID
      

2022 JUL 22a
  * in tools/
    - added chemkin2cfdwarp.c by Spencer LaFoley 
  * in tools/Makefile
    - added chemkin2cfdwarp to targets and sources sections. Also added chemkin2cfdwarp build rules.
  * in tools/README
    - added chemkin2cfdwarp.c to C Tools* list with a description.
    

2022 JUL 20a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - in add_W_Ionization_Adamovich() and add_dW_dx_Ionization_Adamovich(), fixed a bug related
      to setting W, dWdX to 0
    - in add_W_Ionization_Adamovich() and add_dW_dx_Ionization_Adamovich(), fixed a bug related
      to the units of the reactions not involving fit4 (A should not be multiplied by calA here)
      

2022 JUL 19a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - added find_Te_from_EoverN_C2H4AIR()
    - in add_W_Ionization_Adamovich() and add_dW_dx_Ionization_Adamovich(), changed the reaction
      rates using from_Igor_v2.txt
    - in find_Qei() and find_dQei_dx(), removed all electron impact excitation energies
  

2022 JUL 13b
  * in README
    - updated the overview of CFDWARP
    

2022 JUL 13a
  * in tools/makepng.sh
    - Modified the tecplot macro script so that it is compatible with tecplot 2022 (the previous
      used to be compatible with tecplot 2009)
    - added the --osmesa flag to the tec360 call (needed with tecplot 2022 when doing batch 
      processing)
  * in tools/makemissing.sh, tools/makemovie.sh, tools/makepng.sh, tools/makepost.sh, 
    tools/renamebatch.sh, tools/replace.sh, tools/search.sh, tools/tecplotpostfiles.sh
    - changed $0 by ${0##*/} when outputting the name of the script in the help screen
    
    
2022 JUL 12a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - implemented TEMIN, TEMAX, TEFROMEOVERN
    - in _kfit4(), fixed a bug: kf shouldn't be divided by calA
  * in .makefile-header-default
    - took away -DNDEBUG from the default C and linker flags: this fixes odd bugs we were getting
      recently with gcc and mpicc when using compiler optimization -O1 or higher
    

2022 JUL 10a
  * in bin/*.wrp
    - upgraded the control files so they can be run without change with the latest version
      of CFDWARP
  

2022 JUl 09a
  * in model/transport/_Gupta-Yos/transport.c
    - fixed a bug related to yesterday's change: 30000 K should be OMEGATMAXCLIP in _piOmega11()
    

2022 JUL 08b
  * in model/transport/_Gupta-Yos/transport.c
    - in _piOmega11() and _piOmega22(), removed the clipping
      of the temperature that prevented it to be above 30000K. Now, the polynomials are used
      for temperatures as low as OMEGATMAXCLIP (which is set to 1e9K).
  

2022 JUL 08a
  * in model/transport/_Dixon-Lewis/transport.c
    - in find_nuk_eta_kappak_muk(), fixed a bug: need to make sure there are some #ifdel speceminus
      surrounding code with speceminus. This gets rids of compilation errors when using a chemical
      solver without electrons
  * in model/share/transport_share.c
    - in adjust_nue_given_nui(), moved ``long k'' to within #ifdef speceminus
  * in model/fluid/_Navier-Stokes_perfect/fluid.c
    - in  write_model_fluid_template(), read_model_fluid_actions(), _eta_from_T(), made 
      modifications so that in the control file eta_ref is renamed to eta, eta_ref_T is renamed to 
      eta_T0. Also made modications so that ETAMODEL is set to ETAMODEL_CONSTANT by default rather 
      than ETAMODEL_SUTHERLAND
  * in model/fluid/_Navier-Stokes_perfect/fluid.hh
    - deleted eta_model
    - renamed eta_ref to eta, eta_ref_T to eta_T0.
  * in bin
    - reorganized the directory so that only the most important validation cases are within bin
      and the other cases are within bin/misc
    

2022 JUL 04a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - in find_dQei_dx() and find_Qei(), added all the ionization potentials
    

2022 JUL 03a
  * in model/share/chem_share.c
    - in add_to_Qei() and add_to_dQei(), added excitation energy argument 
  * in model/chem/*/*.c
    - added excitation energy argument (using _ionizationpot()) to all existing 
      add_to_Qei() and add_to_dQei(). This does not change the algorithms because the excitation
      energy was included through a call to _ionizationpot()
  * in model/thermo/_generic/thermo.c
    - renamed _ionizationpotential() to _ionizationpot()
    - changed the units of _ionizationpot() from J to eV
    

2022 JUL 01b
  * in model/chem/_C2H4_Air_Plasma_30s/zettervall2017.c
    - added the reaction rates from Felipe
  * in model/share/chem_share.c
    - added add_to_W_fw_3r2p_Lindemann(), add_to_W_fw_2r3p_Lindemann(), 
      add_to_dW_fw_3r2p_Lindemann(), add_to_dW_fw_2r3p_Lindemann() from Felipe
  * in model/share/chem_share.h
    - added missing units for some functions
  

2022 JUL 01a
  * in model/share/chem_share.c
    - fixed typos pertaining to the units
  * in model/chem/doc/report.tex
    - fixed a typo related to the units of the pre-exponential factor
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - added TOWNSENDIMPLICIT flag
    - added calls to find_Te_from_EoverN()
  * in bin
    - added DoCapitelli.wrp
    
    
2022 JUN 25a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - finished implementing the first version of the Adamovich model
  * in model/share/chem_share.c
    - added function add_to_W_fw_1r1p() and add_to_dW_fw_1r1p()


2022 JUN 24a
  * in model/transport/doc/report.tex
    - improved the binary diffusion coefficient text within the Gupta-Yos section
  * in model/transport/_Gupta-Yos/transport.c
    - renamed EPC_* to LNLAMBDA_*
    - renamed collision_integral_curvefit11() to _piOmega11()
    - renamed collision_integral_curvefit22() to _piOmega22()
    - renamed _epc() to _lnLambda()
    - renamed epc to lnLambda


2022 JUN 23c
  * in model/transport/_Gupta-Yos/transport.c
    - in find_muk_from_chik_N_T_Te_Delta1(), added  Delta1_e as a parameter
    - in find_muk_from_chik_N_T_Te_Delta1(), made the electron mobility function of Delta1_e instead
      of Delta1 (makes a difference when Te is different from T)
      

2022 JUN 23b
  * in model/transport/_Gupta-Yos/transport.c
    - in collision_integral_curvefit22() and collision_integral_curvefit11(), removed the clipping
      of the temperature that prevented it to fall below 1000K. Now, the polynomials are used
      for temperatures as low as OMEGATMINCLIP (which is set to 10K).
      

2022 JUN 23a
  * in model/share/transport_share.c
    - in find_nuk_from_Dij(), got rid of code that is not used (only kept the first Oran-Boris method)
  * in model/transport/doc/report.tex
    - made various changes to reflect latest changes to transport modules
    

2022 JUN 22a
  * in model/chem/_C2H4_Air_Plasma_30s/chem.c
    - added some reactions
  * in model/share/transport_share.c
    - added adjust_nue_given_nui()
    - added find_nuk_from_Dij()
  * in model/transport/_Gupta-Yos/transport.c
    - in _epc(), made sure electron pressure is at least 1e-10 atm (or some NAN would occur)
    - in _epc(), made sure epc does not exceed 100
    - in find_nuk_from_chik_N_T_Te_Delta1(), added the ambipolar diffusion effect on Dij at this point
    - in find_nuk_from_chik_N_T_Te_Delta1(), now calls find_nuk_from_Dij() and adjust_nue_given_nui()
    - added find_muk_from_chik_N_T_Te_Delta1()
    - in find_nuk_eta_kappak_muk(), now calls find_muk_from_chik_N_T_Te_Delta1() instead of
      find_nuk_from_chik_N_T_Te_muk_Delta1()
    - added code for METHOD7 in find_nuk_eta_kappak_muk()
    - in find_nuk_eta_kappak_muk(), took away calls to _muk_from_kappak() and to
      adjust_nuk_using_mobilities_given_muk()
  * in src/test.c
    - in test_kappa, rewrote the function so that its parameters include chik, P, Tmin, Tmax
    - in main, now calls test_kappa with its new set of parameters
  

2022 JUN 20a
  * in model/share/transport_share.c
    - added function find_muk_from_nuk()
  * in model/transport/_Dixon-Lewis/transport.c
    - added choices of METHOD1, METHOD2, METHOD3
    - in  find_nuk_from_rhok_T_Te_muk(), added fix to diffusion coefficient for ion-ion collisions
      (METHOD2)
    - in find_nuk_eta_kappak_muk(), added changes for METHOD1, METHOD2, METHOD3
  * in model/transport/_Gupta-Yos/transport.c
    - added METHOD6 which is the same as METHOD5 except that only mue is found from Parent-Macheret
      while the other kappai are found from the Gupta-Yos integrals.
    - in find_nuk_eta_kappak_muk(), added code for METHOD6
  * in src/test.c
    - added print_column_charged_species_names()
    - in test_nu, changed the function so that the molar fractions can be specified on the command
      line
    - added test_mu()
    - in main(), added call to test_mu and changed call to test_nu
    

2022 JUN 17a
  * in model/share/chem_share.c
    - added add_to_W_fw_2r2p_fit4(), add_to_W_fw_2r3p_fit4(), add_to_dW_fw_2r2p_fit4(),
      add_to_dW_fw_2r3p_fit4()
  * in model/thermo/_generic/enthalpy.c
    - changed the polynomials for N2(A3Sigma), N2(B3Pi), N2(ap1Sigma), N2(C3Pi), O(1D), O(1S)
      Now, they are simply set to the polynomials for N2 and O but with the heat of formation b1
      altered
    - added species C2H4plus
  * in model/transport/_Dixon-Lewis/transport.c and model/thermo/_generic/thermo.c
    - added species C2H4plus
  * in model/chem
    - added proprietary module _C2H4_Air_Plasma_30s
    

2022 JUN 16a
  * in model/thermo/_generic/enthalpy.c
    - added species N2(A3Sigma), N2(B3Pi), N2(ap1Sigma), N2(C3Pi), O(1D), O(1S) to the enthalpies
  * in model/thermo/_generic/thermo.c
    - added species N2(A3Sigma), N2(B3Pi), N2(ap1Sigma), N2(C3Pi), O(1D), O(1S) to speciesname,
      calM, ck, numatoms
  * in model/transport/_Dixon-Lewis/transport.c
    - added species N2(A3Sigma), N2(B3Pi), N2(ap1Sigma), N2(C3Pi), O(1D), O(1S) to Peps and Psig


2022 JUN 13a
  * in model/share/transport_share.c
    - in _lnLambda(), fixed a bug: when the chemical models does not include electrons, the variable
      lnlambda was not defined.
    - in adjust_nuk_using_mobilities_given_muk(), cleaned up the code so that no compilation
      warning is given about some defined variables not being used
      

2022 JUN 12a
  * in model/thermo/_generic/thermo.c
    - added species: C2H
  * in model/thermo/_generic/thermo.hh
    - added species: C2H to species map
  * in model/thermo/_generic/enthalpy.c
    - added Glenn polynomial coefficients for species: C2H
  * in model/transport/_Dixon-Lewis/transport.c
    - added transport properties for species: C2H
  * in model/thermo/_generic/thermo.c
    - added species C2H
      

2022 JUN 11a
  * in model/share/transport_share.c
    - added function _etac_from_rhok_Tk_muk()
  * moved
    - model/thermo/_generic/ref/SAND86-8246REV98.pdf
    - model/transport/_Dixon-Lewis/ref/NASA-TR-R-132.pdf
    - model/transport/_Dixon-Lewis/ref/SAND86-8246.pdf
    to model/transport/ref/
  * in model/transport/_Dixon-Lewis/transport.c
    - made modifications: now eta is found from the sum of etan and etac with etac
      found from _etac_from_rhok_Tk_muk()
  * in model/transport/doc/report.tex
    - added Gupta-Yos and Capitelli models
    - upgraded the Dixon-Lewis documentation
    - added Parent-Macheret model for the charged species
  

2022 JUN 07b
  * in model/share/transport_share.c
    - changed LNLAMBDA from LNLAMBDA_NRL to LNLAMBDA_RAIZER
    

2022 JUN 07a
  * in model/transport/_Gupta-Yos/transport.c
    - Added METHOD5 (same as METHOD4 but with the mobilities and charged species thermal conductivities
      obtained from the Parent-Macheret model)
    - in _epc(), added a max() to make sure that the returned epc is never below 1
  * in model/transport/_Dixon-Lewis/transport.c
    - deleted _mue_from_Nn_Ni_Te(), _mui_from_Nn_Ni_Ti(), _muk_from_rhok_T_Te_Ek(), 
      find_dmue_from_Nn_Ni_Te(), find_dmui_from_Nn_Ni_Ti(), find_dmuk_from_rhok_Tk_Ek() 
    - in find_nuk_eta_kappak_muk() and find_dmuk_from_rhok_Tk_Ek(), now calls functions ParentMacheret
      functions in transport_share.c to find the mobilities and thermal conductivities of the charged
      species
  * in model/share/transport_share.c
    - added function_lnLambda()
    - added _mue_from_Nn_Ni_Te_rhok(), _mui_from_Nn_Ni_Ti(), _muk_from_rhok_T_Te_ParentMacheret(),
      find_dmue_from_Nn_Ni_Te(), find_dmui_from_Nn_Ni_Ti(), find_dmuk_from_rhok_Tk_Ek_ParentMacheret()
  * in tools/README
    - added a line explaining the purpose of equilairplasma.c
          

2022 JUN 05a
  * in model/transport/_Gupta-Yos/transport.c
    - in _epc(), changed the parameter rhoe by the parameter rhok
    - in _epc(), now sets eps to 1 if no electron species is specified within the chemical model
      using a #ifdef speceminus 
  * in tools
    - added equilairplasma.c


2022 JUN 04a
  * in model/emfield
    - removed _Epotential-Te
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_value_fluid(), removed the unneeded call to find_nuk_eta_kappak_muk()
  * in model/transport/_Gupta-Yos/transport.c
    - various improvements
    

2022 JUN 03a
  * in model/chem/*/chem.c
    - got rid of mu within parameters passed to find_dW_dx() 
  * in model/fluid/*/fluid_source.c
    - in find_dSchem_dU() and test_dSchem_dU(), got rid of mu within parameters
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in write_bdry_fluid_template(), added gammaeminus to the list of parameters when using 
      a BDRY_WALLTFIXED1 boundary condition
  * in model/share/chem_share.c
    - got rid of mu within parameters passed to test_dW_dx()


2022 JUN 02b
  * in model/transport
    - renamed _dixonlewis to _Dixon-Lewis
    - renamed _capitelli to _Capitelli
    - renamed _guptayos to _Gupta-Yos
  * in model/transport/_Gupta-Yos/transport.c
    - in _muk_from_chik_N_T_Te_aav_Ai_Delta1(), fixed a bug: the thermal conductivity used to
      find the mobility did not include the non-translational components
  * in config/config.c
    - in ask_number_question(), changed the default input for -O to -O1 instead of -O3
  * in .makefile-header-default, in CFLAGS, changed -O3 to -O1
  

2022 JUN 02a
  * in model/emfield/_Epotential*/emfield.c
    - removed function _mu()
    - in find_prim_emfield_mem_2(), removed line that sets ns->mumem
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_Ek_muk_mem() and find_Ek_muk_mem_nonlocal(), now calls _mu(np,gl,l,k) instead 
      of _muk_from_rhok_T_Te_Ek()
  * in model/fluid/_*_plasma/fluid.c
    - the functions _kappan(), _kappai(), _kappae(), _eta(), _nu(), find_prim_fluid_mem() were 
      rewritten so that they call find_nuk_eta_kappak_muk() 
    - added function _mu()
  * in model/fluid/_*_plasma/fluid_plasma.c
    - deleted _mu_test
    - in find_H1 and find_H2, removed call to _mu_test
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c  
    - removed calls to _muk_from_rhok_T_Te_Ek() and replaced them by calls to _mu()
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport(), removed calls to _muk_from_rhok_T_Te_Ek() and
      replaced them by calls to _mu()
  * in model/fluid/_drift-diffusion/fluid.c
    - added function _mu()
    - in find_prim_fluid(), added call to find_nuk_eta_kappak_muk
    - in _nu(), removed call to find_nuk_from_rhok_T_Te() and replaced by call to find_nuk_eta_kappa()
  * in model/share/fluid_share.c
    - in update_w_at_catalytic_wall() and update_w_V_at_injection_wall(), replaced call to
      find_nuk_from_rhok_T_Te() by call to find_nuk_eta_kappa()
  * in model/share/transport_share.c
    - replaced _kappac_from_rhok_Tk_Ek() by _kappac_from_rhok_Tk_muk()
    - deleted _etac_from_rhok_Tk_Ek()
    - replaced adjust_nuk_using_mobilities() by adjust_nuk_using_mobilities_given_muk()
  * in model/transport/_dixonlewis/transport.c
    - added find_nuk_eta_kappak_muk()
    - rewrote find_nuk_eta_kappa()
    - changed find_nuk_from_rhok_T_Te() for find_nuk_from_rhok_T_Te_muk()
  * in model/transport/_guptayos/transport.c
    - various changes 
  * in src/common.h
    - added mumem and kappacmem in np->wk
    - removed mumem from np->bs
  * in src/test.c
    - in test_dmuk(), replaced calls to _muk_from_rhok_T_Te_Ek() by calls to find_nuk_eta_kappak_muk()
    

2022 MAY 25b
  * in model/transport/_guptayos/transport.c
    - in find_nuk_from_rhok_T_Te(), added adjust_nuk_using_mobilities(rhok, T, Te, nuk);
  

2022 MAY 25a
  * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
    - in find_Dstar_interface(), removed assert(NeL>0.0); and assert(NeR>0.0);
  * in model/share/transport_share.c
    - removed find_nuk_eta_kappa()
    - added adjust_nuk_using_mobilities()
    - added adjust_muk_for_Ek_effect()
  * in model/thermo/_generic/thermo.hh
    - in _THERMO_METHOD, removed citations to Dixon-Lewis and Gnoffo transport coefficients (not
      part of this module anymore)
  * in model/transport/_dixonlewis/transport.c
    - in find_nuk_from_rhok_T_Te(), added call to adjust_nuk_using_mobilities() and removed
      redundant code
    - added find_nuk_eta_kappa()
  * in model/transport/_guptayos/transport.c
    - made various additions and improvements
  * in src/test.c
    - added function test_nu()
     

2022 MAY 18a
  * in model/transport
    - added _capitelli
  * in src/control.c
    - added capitelli2015a, dixonlewis1884a, and gupta1990a to the list of bibs
  * in src/control.c
    - in write_modules(), added a line for the transport method
  * in model/transport/*
    - added transport.hh
  * in model/_generic/model.hh
    - added #include <model/transport/.active/transport.hh>
    

2022 APR 20b
  * in model/transport
    - changed the default config to dixonlewis from guptayos
    
  
2022 APR 20a
  * in model/transport/_guptayos/transport.c
    - made various improvements
  * renamed _muk_from_rhok_Tk_Ek() to _muk_from_rhok_T_Te_Ek()
  

2022 APR 19a
  * in model/emfield/_Epotential*/emfield.c
    - changed the calls to _muk_from_rhok_Tk_Ek() to include both T and Te within the parameters
  * in model/fluid/_*_plasma/fluid.c
    - changed calls to _kappac_from_rhok_Tk_Ek() and _etac_from_rhok_Tk_Ek() to include both T and Te
      within the parameters
  * in model/fluid/_*_plasma/fluid_plasma.c and model/fluid/_*_plasma/fluid_post.c
    and model/fluid/_*_plasma/fluid_source.c
    - changed call to _muk_from_rhok_Tk_Ek() to include both T and Te
  * in model/share/transport_share.c
    - changed call to _muk_from_rhok_Tk_Ek(), _kappac_from_rhok_Tk_Ek() to include both T and Te 
  * in model/transport/_dixonlewis/transport.c
    - changed call to _muk_from_rhok_Tk_Ek() to include both T and Te
  * in src/test.c
    - changed the call to _muk_from_rhok_Tk_Ek() to include both T and Te
  * in model/transport
    - renamed _gnoffo to _guptayos
  * in model/transport/_guptayos/transport.c
    - made various improvements
    

2022 MAR 16a
  * in model/transport/_dixonlewis/transport.c and model/transport/doc/report.tex
    - in  _mue_from_Nn_Ni_Te() and find_dmue_from_Nn_Ni_Te(), changed the
      way the mobility is calculated from muei=1.061e16*pow(Te,1.5)/Ni to muei=1.9e16*pow(Te,1.5)/Ni


2022 MAR 14a
  * in model/transport/.config
    - changed the gnoffo option to experimental
    

2022 MAR 07a
  * in /model/chem/_Air_Plasma_11s/farbar2013.c
    - fixed a bug in reaction 3
  * in /model/chem/_Air_Plasma_11s/kim2021.c
    - changed the controlling temperatures of the forward and backward reactions and removed the 
      radiative recombination reactions
    - clipped controlling temperatures of backward reactions to the range 300 - 32000 K using a 
      minmax function
    - changed reaction 11 and 12 to match standard Park model
    - fixed a typo in reaction 26
  * in /model/chem/_Air_Plasma_11s/doc/report.tex
    - updated the Kim 11-species chemical model with the correct controlling temperatures
    - changed reaction 11 and 12 to match standard Park model and removed the radiative 
      recombination reactions
    - added references for all the reactions of the Kim 11-species chemical model
  * in /model/chem/_Air_Plasma_11s/doc/all.bib
    - updated references
    

2022 FEB 28b
  * in model/transport/_gnoffo/transport.c
    - took away "_gnoffo" at the end of each function name
    

2022 FEB 28a
  * in lib/soap/doc/report.tex
    - added log10 function to table
  * in lib/soap/soap.c
    - in functions_builtin(), added log10 function
  * in model/fluid/_*/fluid.c, model/fluid/_*/fluid_conv.c, model/fluid/_*/fluid_post.c
    - added find_rhok()
    - in the calls to find_nuk_eta_kappa(), _eta(), _kappan_from_rhok_T_Te(), _etan_from_rhok_T_Te()
      changed w for rhok
  * in model/fluid/_*plasma/fluid.c
    - in find_prim_fluid_mem(), fixed a bug related to the determination of rhok (rhok was mistakenly
      set to rhok/rho not to rhok)
  * in model/share/fluid_share.c
    - changed the parameters to find_nuk_from_rhok_T_Te() from w to rhok
  * in model/thermo/_generic/thermo.c
    - removed all the functions related to the transport coefficients (mobility, diffusion coefficient,
      thermal conductivity, viscosity)
    - removed the functions related to finding the enthalpy using the NASA Glenn polynomials
  * in model/share
    - added transport_share.c
  * in model/thermo/_generic/
    - added enthalpy.c
  * in model
    - added transport
  * in src/test.c
    - in test_eta() and test_kappa() and test_Pr(), added rhok instead of w as a parameter to
      find_nuk_eta_kappa();


2022 FEB 19a
  * in model/thermo/_generic/thermo.c
    - set INCLUDE_ELECTRONS_IN_ETA to TRUE
    - set INCLUDE_ELECTRONS_IN_KAPPA to TRUE


2022 FEB 18a
  * in model/fluid/_Navier-Stokes/fluid_post.c
    - in find_post_variable_value_fluid(), fixed a bug related to the parameters passed to _eta and _kappa
    
  
2022 FEB 11a
  * in model/thermo/_generic/thermo.c
    - in _muk_from_rhok_Tk_Ek() and find_dmuk_from_rhok_Tk_Ek(), removed the mobilities for Oplus, Nplus
    - in _muk_from_rhok_Tk_Ek() and find_dmuk_from_rhok_Tk_Ek(), modified the default mobility to
      match the one outlined in the thermo document
    - in _kappac_from_rhok_Tk_Ek(), now use _cpk_from_T_equilibrium instead 2.5*kB/m or 3.5*kB/m
    - in _etac_from_rhok_Tk_Ek(), now use _cpk_from_T_equilibrium instead 2.5*kB/m or 3.5*kB/m
  * in model/thermo/doc/report.tex
    - added section on transport coefficients for partially-ionized plasmas
  * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
    - in find_Dstarmat(), find_Dstarmat_test(), find_Dstar(), find_Dstar_interface()
      replaced _hk_from_T() with _hk_from_T_equilibrium()
  * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
    - in find_Dstar(), replaced _hk_from_T() with _hk_from_T_equilibrium()
    

2022 FEB 06a
  * in lib/soap/eg/calc.c
    - added constants eps0, epsilon0, and NA
  * in model/chem/_Air_Plasma_11s/chem.hh
    - added parent2022a citation
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - uncommented the function _Ekmag()
  * in model/fluid/_*/fluid.c,fluid.h,fluid_post.c
    - changed the parameters to _kappa(), _eta(), _ktilde(), _omega()
  * in model/fluid/_*_plasma/fluid_source.c
    - changed the call from find_dmue_from_rhok_Te() to find_dmuk_from_rhok_Tk_Ek()
    - changed the call from _mue_from_rhok_Te() to _muk_from_rhok_Tk_Ek()
  * in model/fluid/_*_plasma/fluid.c
    - added the function _kappan()
    - changed the parameters to the function _kappai()
    - in _kappai(), now calls _kappac_from_rhok_Tk_Ek()
    - in _kappa(), added the charged species kappa contributions using _kappac_from_rhok_Tk_Ek()
    - in _eta(), added the charged species eta contributions using _etac_from_rhok_Tk_Ek()
    - in find_Kstar_interface(), now determines the thermal conductivity as kappan+kappai instead
      of kappa+kappai
    - in find_prim_fluid_mem(), etamem is now determined as the sum of etan and etai found through
      _etac_from_rhok_Tk_Ek()
    - in find_prim_fluid_mem(), kappamem is now determined as the sum of kappan and kappai found through
      _kappac_from_rhok_Tk_Ek()
  * in model/fluid/doc/Transport_Equations/report.tex
    - Rearranged the various boundary conditions within one section 
  * in model/share/fluid_share.c
    - changed the parameters to functions _eta() and _kappa() and _ktilde()
  * in model/thermo/_generic/thermo.c
    - modified the charged species viscosities in _etak_from_T() 
    - added the functions _etan_from_w_T(), _etac_from_rhok_Tk_Ek(), _kappac_from_rhok_Tk_Ek()
    - added the function _mui_from_Nn_Ni_Ti() which includes the contribution to the ion mobility 
      coming from ion-ion collisions
    - added the function find_dmui_from_Nn_Ni_Ti()
  * in model/thermo/doc/report.tex
    - Added section on Transport Coefficients of Fully-Ionized Plasmas
  * in src/control.c
    - added parent2022a citation


2022 JAN 22a
  * in model/fluid/doc/Transport_Equations/report.tex
    - improved the derivation of the thermal conductivity of the electrons in the presence
      of a magnetic field (now function of the tensor mobility mutilde, not the mobility mu)


2022 JAN 16a
  * in src/control.c
    - added kim2021a citation
    

2022 JAN 14a
  * in model/chem/_Air_Plasma_11s/
    - added kim2021.c and kim2021.h
  * in model/chem/_Air_Plasma_11s/chem.c and model/chem/_Air_Plasma_11s/chem.hh
    - incorporated the kim2021 model
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added the kim2021 model documentation
  * in src/control.c
    - changed the copyright years for Bernard Parent to include 2022
    

2021 DEC 07a
  * in model/fluid/doc/Transport_Equations/report.tex
    - added a section on the Thermionic Emission Boundary Condition
  * in model/metrics/_generic/metrics.c
    - in _distance_between_near_bdry_node_and_boundary_plane(), added i,j,k position of problematic
      node before the fatal_error
  

2021 NOV 17a
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), fixed a bug related to CATALYTIC and INJECTION wall conditions:
      np[lA].numbdryparam-2 should be np[lA].numbdryparam-1
      

2021 NOV 12a
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template() and read_model_fluid_actions(), took away reading in
      gamma (secondary electron emission coefficient at the surface) as a global parameter
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in write_bdry_fluid_template() and update_bdry_wall() made changes so that gamma is now read
      as an additional argument to the boundary condition call and not as a global parameter
    - in update_bdry_wall(), took away secondary electron emission in the case of a thermionic
      boundary condition
      

2021 OCT 30a
  * in model/fluid/_Navier-Stokes/fluid_bdry.c and model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c
    - in update_bdry_wall(), now sets charged densities to zero even when INJECTION is TRUE
    

2021 OCT 29a
  * in model/metrics/_generic/metrics.c
    - in find_unit_vector_normal_to_boundary_plane(), got rid of the fatal_error and replaced
      with a return(FALSE) in case of not being able to find a boundary plane
  * in model/share/fluid_share.c
    - in _w_product_at_catalytic_wall(), added a if condition so that find_Vk is called only if
      specR is an ion or electron
    - in update_w_at_catalytic_wall(), now finds wwall[specp] using _w_product_at_catalytic_wall()
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the wall catalytic BC, fixed a typo in the equation determining the boundary condition
      for the product species
  * in model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c, model/fluid/_Navier-Stokes/fluid_bdry.c,
    and model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), fixed a bug: when adjusting w at the wall so that no mass is lost
      or created by the catalicity of the electrons and ions, the contribution is now added to 
      (instead of replacing) the previous contributions 
  * in ./model/share/fluid_share.c, ./model/fluid/_Navier-Stokes/fluid_bdry.c 
    and ./model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - changed the parameters to update_w_at_catalytic_wall()


2021 OCT 28b
  * in model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c
    - added BDRY_WALLTFIXEDINJECTION1
    - in update_bdry_wall(), added code to make sure that surface catalyticity of electrons with
      ions leads to production of neutrals
  * in model/fluid/_Navier-Stokes/fluid_bdry.c
    - in write_bdry_fluid_template(), changed the default template of bdry conditions: need to make
      sure a wall node is never in a corner
       

2021 OCT 28a
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in _Vk_drift_perp_to_bdry(), changed the algorithm so that only nodes perpendicular to
      the surface are used to determie Vk_drift
    - added _mu_effective_perpendicular_boundary_plane()
    - in update_bdry_wall(), changed the way the thermionic electrode BC is applied: now 
      when the electrode is an anode, the electron flux out of the surface is set to diffusion
      when the electrode is a cathode, the electron flux out of the surface is set to convection
  * in bin/MHD_earth_entry2.wrp
    - made various changes to the grid and cycle code.


2021 OCT 14a
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - in the Parent-Park model, fixed a typo related to the third body lists
  * in model/share/fluid_share.c
    - in _w_product_at_catalytic_wall(), fixed a variable definition bug: dim_t VionRB
      should be EXM_vec3D_t VionRB
  * in src/common.c
    - added _smooth3()
    

2021 OCT 06a
  * in model/emfield/_Epotential-Bfixed/emfield.c and model/emfield/_Epotential/emfield.c
    - added find_DeltaVk_drift_from_mu()
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - renamed _Vk_perp_to_bdry() to _Vk_drift_perp_to_bdry()
    - in _Vk_drift_perp_to_bdry(), now calls find_Vk_drift() and 
      find_unit_vector_normal_to_boundary_plane()
  * in model/share/emfield_share.c
    - added find_Vk_drift()
  * in bin/MHD_earth_entry2.wrp
    - made improvements
    

2021 OCT 03a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - got rid of the last 4 post processing variables related to cesium
  * in model/fluid/doc/Transport_Equations/report.tex
    - in model/fluid/doc/Transport_Equations/report.tex, cleaned up the text about the
      surface injection boundary condition
  * in model/share/fluid_share.c
    - in write_disc_fluid_template(), set default zetaD to 0.0 instead of 1.0
     

2021 OCT 01a
  * in cycle/res/_generic/res.c
    - changed YSTARDH_SECONDORDER to FALSE 
    - changed TVDLIMITER to LIMITER_MINMOD
  * in model/chem/_Cs_Air_Plasma_15s/chem.c
    - in add_dW_dx_Cesium(), fixed a bug: when CESIUMIONIZATIONMODEL was not set to 
      CESIUMIONIZATIONMODEL_LENARD1964, the linearization of W was not correct
    - in add_dW_dx_Cesium(), fixed a bug: when CESIUMRECOMBINATIONMODEL was not set to
      CESIUMRECOMBINATIONMODEL_LENARD1964, the linearization of W was not correct
      

2021 SEP 28a
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), rewrote the code related to wwall[specneutral]; this was done
      for clarity and should not change the model
      

2021 SEP 26a
  * in model/fluid/_Navier-Stokes/fluid_bdry.c
    - in update_bdry_wall(), made w at wall node equal to w at near wall node no matter
      the order of accuracy specified
    - in update_bdry_wall() now does not set w of the charged species to zero at injection surface
    - in update_bdry_wall(), at non injection surfaces added correction to the mass fraction
      gradient of the neutral species which is the product of a positive ion recombining
      with electrons through the call to _w_product_at_catalytic_wall()
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in update_bdry_wall(), made w at wall node equal to w at near wall node no matter
      the order of accuracy specified
    - in update_bdry_wall(), at both injection and non injection surfaces added correction
      to the mass fraction gradient of the neutral species which is the product of a positive 
      ion recombining with electrons through the call to _w_product_at_catalytic_wall()
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_value_fluid(), added 4 new post variables related to cesium 
      (NOTE: THESE MUST BE DELETED BECAUSE THEY ARE USED FOR TESTING CESIUM INJECTION ONLY)
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the section about surface mass injection, started documentation of how to specify
      the boundary conditions for a non-neutral solver
  * in model/metrics/_generic/metrics.c
    - in find_unit_vector_normal_to_boundary_plane(), removed a fatal_error and rather return
      a FALSE if n couldn't be found
    - in _distance_between_near_bdry_node_and_boundary_plane(), added fatal_error in case n
      couldn't be found
  * in model/share/fluid_share.c
    - added _w_product_at_catalytic_wall()
    - in update_w_V_at_injection_wall(), added fatal_error in case n couldn't be found
  * in model/thermo/_generic/thermo.c
    - added find_neutral_spec_from_ion_spec()
    - in find_nuk_from_w_rho_T_Te(), fixed a bug related to the determination of nu for the electrons
      in the case of a neutral plasma: when the mass fraction of all positive ions was zero,
      nu for the electrons couldn't be determined and this lead to NaN.


2021 SEP 16a
  * in model/chem/_Cs_Air_Plasma_15s/chem.c
    - added parentpark2021 option as a air chemical solver
    - added CESIUMIONIZATIONMODEL option
    - added CESIUMRECOMBINATIONMODEL option
  * in model/chem/_Cs_Air_Plasma_15s/doc/report.tex
    - added park1993 and parentpark2021 models
    - added various cesium ionization and recombination models
  * in model/metrics/_generic/metrics.c
    - in find_unit_vector_normal_to_boundary_plane(), fixed a bug related to inner node B
      being misaligned with the boundary plane
      

2021 SEP 15b
  * in bin
    - added rampinjector.wrp
  * in model/fluid/doc/Transport_Equations/report.tex
    - fixed some typesetting mistakes in the section on Wall Injection Boundary Conditions
  * in model/metrics/_generic/metrics.c
    - in find_unit_vector_normal_to_boundary_plane(), fixed a bug for the 3D version of the algorithm
    - in find_unit_vector_normal_to_boundary_plane(), added a fatal_error should  lB not be
      perpendicular to the surface along the generalized coordinates


2021 SEP 15a
  * in model/fluid/_Navier-Stokes/fluid_bdry.c and model/fluid/_Navier-Stokes_plasma/fluid_bdry.c 
    - added BDRY_WALLTFIXEDINJECTION1
    - changed the call to update_w_at_catalytic_wall() to include paramstart and paramend
  * in model/fluid/doc/Transport_Equations/report.tex
    - added section for wall boundary condition with injection of species
  * in model/metrics/_generic/metrics.c
    - added find_unit_vector_normal_to_boundary_plane()
    - added _distance_between_near_bdry_node_and_boundary_plane()
  * in model/share/fluid_share.c
    - in update_w_at_catalytic_wall(), now calls _distance_between_near_bdry_node_and_boundary_plane()
      instead of calculating the non-normal distance between the near wall node and the wall node
    - in update_w_at_catalytic_wall(), added the function parameters paramstart and paramend and
      used the latter when calling _bdry_param()
    - added update_w_V_at_injection_wall()
    - made sure that update_w_at_catalytic_wall() is not compiled unless the fluid module has
      multiple species
  * in src/control.c
    - in read_control(), added the constants specO2, specN2, specH2, etc.


2021 AUG 13a
  * moved parent2021.c to parentpark2021.c
  * in model/chem/_Air_Plasma_11s
    - removed parent2021.h
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - deleted parent2021 model and updated the parentpark2021 documentation to reflect
      the new parentpart2021.c code
       

2021 AUG 11a
  * in model/chem/_Air_Plasma_11s/parent2021.c
    - wrote the reactions as function of EXPON_TTV, EXPON_TTE, and EXPON_TVTE which are defined
      at the beginning of the file. 
    - The constants EXPON_* are defined such that the reactions are function of only Te or T but
      this can be changed easily
      

2021 AUG 08a
  * in model/chem/_Air_Plasma_11s
    - added the module parent2021.c
  * in model/chem/_Air_Plasma_11s/parentpark2021.c
    - in reactions 10, 11, 12, made the reverse controlling temperature equal to sqrt(Tv*Te) 
      which follows the logic of the Park model
  * in model/chem/_Air_Plasma_11s/chem.c
    - added module parent2021
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - changed the Parent-Park solver to reflect changes to the controlling temperature of the
      reverse reactions 10, 11, and 12
    - added the Parent 2021 solver
    

2021 AUG 06a
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - in the parentdunn table, changed the forward reactions 7, 13, and 16 to those in Boyd2007
  * in model/chem/_Air_Plasma_11s/parentdunn2021.c
    - changed reactions 7, 13, and 16 (forward rates) to those in Boyd2007
  * in model/chem
    - added _Air_Plasma_12s
    - moved _Air_Plasma_8s_28r_Macheret to old
    

2021 AUG 04a
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - updated the Parent-Dunn model to include the two-body dissociative recombination rates
      from Ajjay
  * in model/chem/_Air_Plasma_11s
    - added parentdunn2021.c and parentdunn2021.h
  * in model/chem/_Air_Plasma_11s/chem.c
    - added calls to parentdunn2021
    - removed calls to parent2021
  * in model/chem/_Air_Plasma_11s
    - removed parent2021.c
    

2021 AUG 03a
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - finalized the documentation of the Parent-Park model with Ajjay's curve fits based on BOLSIG+
  * in model/chem/_Air_Plasma_11s
    - added parentpark2021.c and parentpark2021.h
  * in model/chem/_Air_Plasma_11s/chem.c
    - added the parentpark2021 model
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c
    - changed TEMAX_TOWNSEND from 60000 to 1e99 K
  * in model/chem/_Air_Plasma_11s/parent2021.c
    - changed TEMAX_TOWNSEND from 100e6 to 1e99 K
    

2021 JUL 29a
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - updated documentation for Dunn-Kang chemical model to indicate whether the translational or 
      electron temperature is used in the reaction rates.


2021 JUL 23a
  * in model/chem/_Air_Plasma_8s/rajendran2022.c
    - fixed a bug related to the units of the pre-exponential factor of the Townsend ionization reactions


2021 JUL 17a
  * in model/chem/
    - added the Air Plasma 8 species model and updated the .config and Makefile to include the model
    - removed the code associated with _Air_Plasma_8s_28r_Macheret since it has been implemented as 
      one of the modules in the Air Plasma 8 species model
  * in model/share/chem_share.c
    - Fixed a bug in add_to_dW_3r3p() and add_to_dW_3r2p() functions: multiplied the number density 
      of the third reactant for dWdTe, dWdTv and dWdT elements 
  * in src/control.c
    - updated the reference for the Air Plasma 8 species Macheret (2007) chemical model 
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added documentation for Park-Parent chemical model
    - updated documentation for Park-Dunn-Kang chemical model
    

2021 JUL 09b
  * in model/share/fluid_share.c
    - in update_w_at_catalytic_wall(), added error messages when gamma is not within physically
      valid bounds
      

2021 JUL 09a
  * in model/fluid/_Navier-Stokes/fluid_bdry.c
    - implemented the BDRY_WALLTFIXEDCATALYTIC1 boundary condition
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - implemented the BDRY_WALLTFIXEDCATALYTIC1 boundary condition
  * in model/share/fluid_share.c
    - added the function update_w_at_catalytic_wall()
  * in src/control.c
    - in read_control_functions(), added the treatment of the function _spec()
  * in model/fluid/doc/Transport_Equations/report.tex
    - added the section "Catalytic Surface Boundary Conditions"


2021 JUN 16a
  * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
    - in write_bdry_fluid_template(), added boundary condition BDRY_WALLTFIXEDTHERMIONIC1
    - added function _Vk_perp_to_bdry() 
    - in update_bdry_wall(), added parameter THERMIONIC
    - in update_bdry_wall(), made modifications for thermionic BC 
    

2021 JUN 12a
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c
    - reaction 10 had the wrong rate: this has been fixed
  * in model/chem/_Air_Plasma_11s
    - added parent2021.c
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added parent2021 model
    - fixed rate of reaction 10 of Dunn Kang model
    

2021 JUN 09a
  * in model/emfield/doc/Electrodynamics/report.tex
    - added Lorenz condition and electrodynamic potential


2021 APR 15b
  * updated config/removeproprietary.sh through make config
  

2021 APR 15a
  * in model/chem/.config
    - made the Air_Plasma_8s_28r_Macheret option non proprietary
  * in model/chem/_Air_Plasma_8s_28r_Macheret/chem.c
    - changed the license to BSD 2 clause
    

2021 APR 13a
  * in src/control.c
    - added reference farbar2013a
  * in model/chem/_Air_Plasma_11s/chem.hh
    - added reference farbar2013a
  * in model/chem/_Air_Plasma_11s/chem.c
    - added modifications for the Farbar model
  * in model/chem/_Air_Plasma_11s/
    - added farbar2013.c and farbar2013.h and made relevant modifications to Makefile
  * in model/chem/_Air_Plasma_11s/doc/
    - added the Farbar model to report.tex and corresponding reference to all.bib
    
    
2021 APR 06b
  * in src/post.c
    - in read_post_actions() function, fixed incorrect condition for updating postfilename due
      to incorrect reference to filename pointer address instead of filename pointer
    

2021 APR 06a
  * in model/share/emfield_share.c
    - in _E_dot_J(), changed find_E(np[l],gl,E); to find_E_smoothed(np[l],gl,E);
  * in src/test.c
    - added test_dmuk()
  * in model/fluid/_*_plasma/fluid_plasma.c
    - added _mu_test()
    - in find_H1() and find_H2(), added call to _mu_test instead of _mu when TEST is defined
    - in find_dH1_dUstar() and find_dH2_dUstar(), updated the Jacobian terms present only
      when TEST is defined
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Semfield(), now calls _E_dot_J() instead of the minmod between _E_dot_J() and
      _E_dot_J_recast()
      

2021 APR 05a
  * in cycle/share/cycle_share.c
    - added header <src/post.h>
    - in runtime_actions(), added code to enable Post() to be called from Cycle()
  * in cycle/share/cycle_share.h
    - added function prototype for runtime_actions()
  * in src/post.c
    - added header <cycle/share/cycle_share.h>
    - in read_post_actions(), added condition to read postfilename only when -opm flag is used
    - in read_post(), removed line which prevented Post() to be executed with more than one MPI process
    - in read_post(), added condition to prevent newline to be printed when Post() is called within Cycle() 


2021 MAR 27a
  * in model/chem/_Air_Plasma_11s/chem.c
    - added QEISOURCETERMS within the variables to read in Model(AirPlasma11s(););
  * in find_Qei() and find_dQei_dx()
    - set Qei to 0 if QEISOURCETERMS is set to FALSE
    

2021 MAR 23b
  * in model/chem/_Air_Plasma_11s/boyd2007.c, park1993.c, lenard1964.c
    - added find_Qei_*() and find_dQei_dx_*()
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c
    - in find_Qei_DunnKang1973() and find_dQei_dx_DunnKang1973(), fixed a typo: 3.6e31/sqr(calA)
      should be 3.6e31/calA and 1.1e32/sqr(calA) should be 1.1e32/calA
  * in model/chem/_Air_Plasma_11s/chem.c
    - renamed TOWNSENDIONIZATION to ADDITIONALREACTION
    - changed the rates for ADDITIONALREACTION[5]  and ADDITIONALREACTION[6] using BOLSIG+
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - changed the rates for the 5th and 6th additional reaction using BOLSIG+
    

2021 MAR 23a
  * in read_data_file(), fixed a few bugs related to read_data_file_mpi when BDF is the chosen
    time stepping method


2021 MAR 21a
  * in src/common.h
    - added dim_t Esmoothedmem to npbs_t
  * in model/thermo/_generic/thermo.c
    - in _ionizationpotential(), added the ionization energies of species O and N
  * in model/share/emfield_share.c
    - in _E_dot_Je_over_mueNe(), now calls find_E_smoothed() instead of find_E()
  * in model/emfield/_*/emfield.c
    - added find_E_smoothed() which returns Esmoothedmem
    - in find_prim_emfield_mem_1(), added code to find Esmoothedmem
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c
    - implemented clipping of Te so that it doesn't not exceed 60000 K when determining the 
      electron impact ionization reactions
    - added find_Qei_DunnKang1973() and find_dQei_dx_DunnKang1973()
  * in model/chem/_Air_Plasma_11s/chem.c
    - added TOWNSENDREACTION[5] and TOWNSENDREACTION[6] for Townsend ionization of N and O function
      of the reduced electric field
    - in find_Qei(), added call to find_Qei_DunnKang1973()
    - in find_dQei_dx(), added call to find_dQei_dx_DunnKang1973()
     

2021 MAR 19a
  * in model/chem/_CO2_Plasma_23s_Park/chem.c
    - in find_dW_dx(), fixed a bug in reactions 40 and 41 where dWdTv should be dWdTe
    

2021 MAR 17a
  * in model/chem/_Air_Plasma_11s/chem.c
    - in add_W_Townsend() and add_dW_dx_Townsend(), changed the chemical reaction for 
      NO+ + 2e-  ->  NO + e-  to the one specified in Dunn-Kang (1973)
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - in the table "Additional Townsend Ionization and recombination rates for NO, O2.."
      changed the chemical reaction for  NO+ + 2e-  ->  NO + e-  to the one specified in 
      Dunn-Kang (1973)


2021 MAR 15a
  * in model/chem/_Air_Plasma_11s/chem.c
    - added a fourth reaction to the Townsend reactions e- + NO -> 2 e- + NO+
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added a fourth reaction to the Townsend reactions e- + NO -> 2 e- + NO+


2021 MAR 11a
  * in model/chem/_H2_He_CH4_Plasma_13s
    - added doc directory
  * in model/chem/_H2_He_CH4_Plasma_13s/chem.c
    - implemented Chris Johnston's Neptune atmosphere model
  * in model/share/fluid_share.c
    - in find_Saxi(), added the effective pressure to the total energy flux axisymmetric source
      as it should be
      

2021 MAR 07a
  * in model/chem/_CO2_Plasma_23s_Park/chem.c
    - made modifications to the reactions so that the backward and forward temperatures 
  * in model/chem/_CO2_Plasma_23s_Park/doc/report.tex
    - made modifications to the reactions so that the backward and forward temperatures 
      

2021 FEB 27c
  * in config/config.c
    - in read_config_file(), made changes so that the options that are both EXPERIMENTAL
      and PROPRIETARY are not hidden when doing make config or make configp
      

2021 FEB 27b
  * in bin
    - updated Starikovskii.wrp
    

2021 FEB 27a
  * in model/fluid/_Favre-Reynolds_plasma/fluid.h
    - added _kappae()
    

2021 FEB 22a
  * in model/thermo/_generic/thermo.c
    - in _kappa_from_w_T() and _eta_from_w_T(), fixed a bug introduced in 21feb21a related
      to including the electron species
      

2021 FEB 21c
  * in model/chem/_CO2_Plasma_23s_Park/chem.c
    - fixed a bug: reaction 13 used N instead of X as a parameter
    

2021 FEB 21b
  * in src/common.h
    - in gl_t, added boolean variable OUTPUTBINARYMPI
  * in src/data.c
    - added header unistd.h
    - added functions _ai_mpidatafile(),read_data_file_mpi(),write_data_file_mpi() to implement 
      parallel I/O file format WARPMPBFORMAT010
    - modified functions write_data_file(),read_data_file() to implement parallel I/O file format 
      WARPMPBFORMAT010
  * in src/data.h
    - in input_t, added boolean variables BINARYMPI,M1,MM1,M2,MM2,M3,MM3
  * in src/main.c
    - renamed -im1,-im2,-im3 flags to -i1,-i2,-i3
    - added code to implement parallel I/O fileformat to be used via -im and -om flags
    - repurposed -im1,-im2,-im3 flags to read time level minus 1, time level minus 2 and time 
      level minus 3 data of type BINARYMPI
    

2021 FEB 21a
  * in model/fluid/_*_plasma/fluid.c
    - in _kappa() and find_prim_fluid_mem(), now calls _kappah() to include only the heavy species
    - added _kappai()
    - in find_Kstar_interface(), added kappai to kappa for Kstar[fluxet][fluxet]
  * in model/fluid/_*_plasma/fluid_plasma.c
    - in find_Dstar(), took away the charged species thermal diffusion from the velocity
      (now added to find_Kstar_interface)
  * in model/fluid/_Favre-Reynolds_plasma/fluid_post.c
    - added kappae and kappav to the post variables
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - added kappai to the post variables
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the charged species energy transport equation section, made changes and took away thermal
      diffusion (already included within pressure gradients)
  * in model/share/emfield_share.c
    - added _dTkdXj()
  * in model/thermo/_generic/thermo.c
    - added _etak_from_T()
    - added _kappak_from_T()
    - added _kappan_from_w_T(), _kappa_from_w_T(), _kappaw_from_w_T()
    - added _eta_from_w_T()
    - added find_nuk_from_w_rho_T_Te()
    - rewrote find_nuk_eta_kappa() so that it calls _kappa_from_w_T(), _eta_from_w_T(), 
      find_nuk_from_w_rho_T_Te()
    - electrons are now excluded when finding kappa, eta, and nu for the mixture  

      
2021 FEB 18a
  * in model/thermo/_generic/thermo.c
    - in find_nuk_eta_kappa(), took away contributions of charged species to thermal conductivity
      kappa because such are already accounted for through the enthalpies
    

2021 FEB 17a
  * renamed
    - find_Dstarplus() -> find_Dstarmatplus()
    - find_Dstarminus() -> find_Dstarmatminus()
    - find_Dstar() -> find_Dstarmat()
  * in cycle/res/_generic/res.c
    - renamed add_dDstarU_residual_FVS()  to add_dDstarmatU_residual_FVS() 
    - added new add_dDstarU_residual_FVS() where Dstar is a vector not a matrix and with metricsint
      given as a parameter to find_Dstar
  * in cycle/share/ts_share.c
    - renamed find_DstarUstar_jacobians_FVS() to find_DstarmatUstar_jacobians_FVS()
    - added new find_DstarUstar_jacobians_FVS() where Dstar is a vector not a matrix and with metricsint
      given as a parameter to find_Dstar
  * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
    - implemented new find_Dstar*() functions and erased previous ones
  * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
    - added new find_Dstar(), find_Dstarplus(), and find_Dstarminus() which accept metricsint as an
      argument
  * in model/fluid/_drift-diffusion/fluid.c
    - added new find_Dstar(), find_Dstarplus(), and find_Dstarminus() which accept metricsint as an
      argument
  * in model/share/emfield_share.c
    - in _dTedXj(), now calls _Tk() instead of _Te()


2021 FEB 15a
  * in cycle/res/_generic/res.c
    - in add_dDstarU_residual_FDS(), changed TVD limiter to FIRSTORDER
    - in add_dDstarU_residual(), now calls add_dDstarU_residual_FVS
  * in cycle/share/ts_share.c
    - in find_DstarUstar_jacobians(), now calls find_DstarUstar_jacobians_FVS()
  * renamed
    - _dTedXj_interface -> _dTedXj_interface_upwind
    - _dTedXj -> _dTedXj_interface
  * in model/fluid/_*_plasma/fluid_plasma.c    
    - in find_Dstar(), added code to take away thermal diffusion from electron velocity
  * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c  
    - in find_Dstar_interface(), made minor modifications to averaging of mu and Ve at interface
  * in model/fluid/_drift-diffusion/fluid.c
    - added find_Dstar_interface() 
  * in model/share/emfield_share.c
    - added _dTedXj()
    

2021 FEB 12b
  * in model/fluid/_*_plasma/fluid_plasma.c
    - in _DeltaVkstar_interface(), changed arith average to minmod
    

2021 FEB 12a
  * in cycle/res/_generic/res.c
    - renamed add_dDstarU_residual() to add_dDstarU_residual_FVS()
    - added add_dDstarU_residual_FDS()
    - added add_dDstarU_residual() which calls add_dDstarU_residual_FDS()
  * in cycle/share/res_share.c
    - in _limiter_TVD(), added LIMITER_FIRSTORDER
  * in cycle/share/ts_share.c
    - renamed find_Dstar_interface() to find_DstarUstar_jacobians_FVS()
    - added find_DstarUstar_jacobians_FDS()
    - added find_DstarUstar_jacobians()
    - in add_Dstar_to_TDMA_check() and find_TDMA_jacobians_conservative(), now calls
      find_DstarUstar_jacobians() instead of find_Dstar_interface()
  * in model/emfield/_Epotential-Te/emfield.c
    - in add_dUstar_to_U_emfield(), added the addition of Temin_EMF and Temax_EMF to the clipped
      variables
    - in find_Ve_drift_at_interface(), took away thermal diffusion contribution to electron velocity
    - in find_linearization_coefficients_inner_node_emfield_OHMBASED(), set the e thermal diffusion
      coefficients to 2 times their normal value instead of 1.25 times
    - in find_Fstar_interface_emfield(), added to Fstar the full electron thermal diffusion terms
    - in find_Fstar_interface_emfield(), changed the limiter from VANLEER to MINMOD in determining
      TeL and TeR
  * in model/fluid/_*_plasma/fluid.c
    - in find_Kstar_interface(), changed the electron thermal diffusion coefficients to 2 times
      the normal value for CYCLELEVEL_TS (up from 1.25) and to the normal value for CYCLELEVEL_RES
      (up from 0.25)
  * in model/fluid/_*_plasma/fluid_plasma.c
    - added _DeltaVkstar_interface()
    - added find_Dstar_interface()
  * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
    - in find_Dstar(), changed find_Ve_from_Je(np, gl, l, Ve); to find_Ve_from_J(np, gl, l, Ve);


2021 FEB 05a
  * in model/emfield/doc/Electrodynamics/report.tex
    - improved document
  * in model/emfield/_*/emfield.c
    - in read_model_emfield_actions(), now read in AXISYMMETRIC only is _2D is defined
  * in model/emfield/_*/emfield.hh
    - in gl_model_emfield_t, AXISYMMETRIC is defined only if _2D is defined
    
  
2021 FEB 04a
  * in model/emfield/doc/
    - added directory Electrodynamics


2021 FEB 02a
  * in lib/soap/soap.c
    - in BA_for_parallel(), fixed a bug that caused the incorrect update of variables when using 
      the for_parallel built-in action


2021 JAN 29a
  * in bin
    - updated Starikovskii.wrp
  * in model/emfield/_*/emfield.c
    - in write_model_emfield_template(), added a newline after AXISYMMETRIC=NO;
  * in model/fluid/_Navier-Stokes_perfect/fluid.c
    - in read_model_fluid_actions(), added new variables ETAMODEL, eta_ref, eta_ref_T, eta_C, Pr
      and removed kappa
    - in find_Kstar_interface(), now takes average of eta and kappa at interface
    - added function _kappa(), _eta_from_T(), _eta()
  * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
    - in write_bdry_fluid_template(), added BDRY_INFLOWFLUCTUATING
    - added find_V_P_T_bdry_fluctuating(), update_bdry_inflow_fluctuating()
  * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
    - in find_jacvars(), now finds jacvars->eta from _eta(np,gl) and not from gl->model.fluid.eta
    - in find_jacvars_from_musclvars() and find_jacvars_from_U(), now finds jacvars->eta from
      _eta_from_T(T,gl) and not from gl->model.fluid.eta
  * in model/fluid/_Navier-Stokes_perfect/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid(), added kappa and eta
      to post variables
      

2021 JAN 22a
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c and model/chem/_Air_Plasma_11s/doc/report.tex
    - modified the Dunn-Kang model: backward reactions are now explicitly written as in the 
      original paper instead of using the equilibrium constant
  * in model/fluid/_Navier-Stokes/fluid_source.c
    - added missing  #include fluid_share.h
  * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
    - removed functions find_Saxi() and find_dSaxi_dU()
    - added missing  #include fluid_share.h
  * in model/fluid/_drift-diffusion/fluid.c
    - in write_model_fluid_template() and read_model_fluid_actions(), added code to read 
      AXISYMMETRIC from control file
    - in find_Sstar() and find_dSstar_dUstar(), added calls to find_Saxi and find_dSaxi_dU


2021 JAN 21a
  * in model/emfield/_Epotential*/emfield.c
    - read_model_emfield_actions(), write_model_emfield_template(), added AXISYMMETRIC flag
    - in find_Sstar_emfield(), added axisymmetric source terms
  * in model/fluid/_Navier-Stokes/fluid_source.c and model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - deleted find_Saxi() and find_dSaxi_dU()
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Vk(), added an assert(spec<ncs)
  * in model/share/fluid_share.c
    - in _Qk(), turned off the axisymmetric contributions by Jason Etele
    - deleted _Qk_old()
    - renamed find_Saxi() to find_Saxi_FavreReynolds()
    - added find_Saxi() and find_dSaxi_dU() to be used by all fluid modules
    

2021 JAN 19b
  * in src/control.c
    - in read_control(), added "EMFIELD" variable to control file variables
  * in model/fluid/_*_plasma/fluid.c and model/fluid/_drift-diffusion/fluid.c
    - in write_model_fluid_template(), changed Temin=Tmin; to Temin=300.0;
  * in bin/RAM-C-II.wrp
    - made modifications so that SteadyState() can be read either by emfield or non-emfield
      solvers


2021 JAN 19a
  * in src/control.c
    - in find_metrics_on_all_nodes(), deleted the variable newzone (not needed anymore)
  * in model/chem/_Air_Plasma_11s/dunnkang1973.c
    - made reactions with electrons in reactants function of Te not of T
  

2021 JAN 18a
  * in config/config.c
    - in output_makefileheader() added -rdynamic flag when using debugging symbols and gcc or mpicc
  * in lib/exm/exm.c
    - added output_backtrace() when linux is defined
  * in lib/gridg/*.h and src/common.h
    - removed the include assert.h
  * in lib/soap/soap.c
    - removed the include assert.h
    - added the include exm.h
  * in src/common.c
    - removed backtrace() function
  * in src/control.c
    - in find_metrics_on_all_nodes(), fixed a bug: the metrics at the interface were not properly
      stored in RAM for all interfaces with MPI, and this lead to the current density not being 
      determined properly on some nodes when using MPI. Note that this bug only occurred when using
      MPI and using a emfield module other than none.
      

2021 JAN 16a
  * in cycle/share/cycle_share.c
    - in update_linked_nodes(), fixed a bug: _al(gl,i,j,k) should be _ai(gl,i,j,k)
  * in cycle/tsemf/_AF/tsemf.c
    - replaced in a few locations _al(gl,l,dim,+0) by l
    - added assert(dim<nd) in a few locations
  * in model/chem/_Cs_Air_Plasma_11s/chem.c
    - added option  CESIUMIONIZATIONMODEL within write_model_chem_template(),
      read_model_chem_actions(), add_dW_dx_Cesium(), add_W_Cesium(): now the ionization due to
      electron impact (and its backward reaction) can be set to either Lenard (1964) 
      or Andrienko (2021)
  * in model/chem/_Cs_Air_Plasma_11s/doc/report.tex
    - added the Andrienko (2021) cesium ionization and recombination reactions
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in read_model_fluid_actions(), changed "1" for TEMODEL_CONSTANT, "2" for TEMODEL_TEQUILIBRIUM,
      etc
  * in src/common.c, added the function output_backtrace() but left it commented so that it does
    not lead to compilation problems on non-Linux systems
  

2021 JAN 07a
  * in lib/soap/soap.c
    - in functions_builtin(), got rid of the spline function 
    - in functions_builtin(), renamed "Interpolate" to "interpolate"
  * in lib/soap/doc/report.tex
    - deleted spline function and renamed Interpolate to interpolate  


2021 JAN 06a
  * in lib/soap/doc/report.tex
    - added description of function Interpolate
    

2021 JAN 04a
  * in src/test.c
    - in test_s(), test_cp(), test_hmolar(), test_h(), initialized the species mass fractions
      to 1e-10 instead of 0
    - added test_eta(), test_kappa(), test_Pr()
  * in src/control.c
    - in write_license(), changed the copyright year to 1998-2021
  * in model/thermo/_generic/thermo.c
    - got rid of MAX_T_FOR_NUK_ETA_KAPPA_POLYNOMIALS=6000.0 and replaced with TSTAR_MAX=100.0
    - in _Omega11() and _Omega22(), limited Tstar to TSTAR_MAX
    - in find_nuk_eta_kappa(), got rid of T limit to MAX_T_FOR_NUK_ETA_KAPPA_POLYNOMIALS
    - in find_nuk_eta_kappa() commented line "if (w[spec]<1.0E-12) w[spec]=1.0E-9;"
  * in model/emfield/_Epotential*/emfield.c
    - commented out _Tk_smooth()
    - in _mu_mem(), now calls _smooth2(0 instead of _Tk_smooth
  * in src/common.c
    - in _smooth(), added a fatal_error in case node l is not an inner node
    - added function _smooth2()
    

2020 DEC 29a
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - changed maxiterEk from 1000 to 2000
    - took away constant EFIELD_SPECIES_FRAME and incorporated it within the control file
    - commented function _Ekmag() because it is not used any more
    - in find_Ek_muk_mem(), implemented a faster and more robust algorithm to find the local 
      electric field which tries various relaxation factors (instead of only one as before) before 
      quitting 
    - in find_Ek_muk_mem_nonlocal(), fixed a mistake: 
      Tk=max(Tk,_T(np[l],gl)+gl->model.emfield.Te_buffer) should be 
      Tk=max(Tk,gl->model.emfield.Te_buffer)
  * in model/share/emfield_share.c
    - in find_Ve_from_J(), added a call to fatal_error in case no inner node can be found near a 
      boundary node
  * in src/common.c
    - in _al(), added an assert to verify that theta is less than nd
    - in _all(), fixed a bug: ltmp should have a type of long not double
    - added function _alll()
    - in find_l_of_nearest_inner_node(), added a fourth check to find an inner node in case the bdry
      node is in a 3D corner
  * in model/chem/_CO2_Plasma_23s_Park/chem.hh
    - renamed #define _CHEM_CSAIRPLASMA to #define _CHEM_CO2PLASMA23S


2020 DEC 27a
  * in model/chem/_Cs_Air_Plasma_*s/chem.c
    - in find_Qei() and find_dQei_dx(), added missing definition and initialization of R
  * in model/share/fluid_share.c
    - in write_disc_fluid_template(), changed betag[spec]=-0.5; to betag[spec]=-0.01;
    

2020 DEC 26a
  * in model/chem/_Cs_Air_Plasma_11s/chem.c and model/chem/_Cs_Air_Plasma_15s/chem.c
    - in find_Qei() and find_dQei_dx() added contributions from CESIUMREACTION[1]
  * in model/chem/_H2_Air_Plasma_*/chem.c and model/chem/_H2_Air_Plasma_*/doc/report.tex
    - changed reaction e- + H2+ -> H2: now, it is based on BOLSIG+ rather than on paper by Mendez
    - updated the BOLSIG+ Townsend ionization reactions based on E over N to latest version with
      fewer significant digits
  * in model/chem/_H2_Cs_Air_Plasma_15s/chem.c and 
    - changed reaction e- + H2+ -> H2: now, it is based on BOLSIG+ rather than on paper by Mendez
    - updated the BOLSIG+ Townsend ionization reactions of H2 and Cs based on E over N to 
      latest version with fewer significant digits
    - added Townsend ionization of Cs based on Te as IONIZATIONREACTION[12]  


2020 DEC 23a
  * in src/common.c
    - added function _smooth()
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport(), now find Tv using _smooth() instead of directly
      at the node
      

2020 DEC 22a
  * in cycle/resconv/_MUSCL/resconv.c
    - in  write_disc_resconv_template(), changed the defaults to EIGENVALCOND_PECLET and
      POSFILTER_NONE
  * in model/thermo/_generic/thermo.c
    - in _hk_from_T(), fixed a bug when _FLUID_EENERGY && spec==speceminus: the enthalpy of the
      electrons should be _he_from_Te(T) and not _he_from_Te(T+dTplus)
    - in _dsk_dT_from_T() and _dsk_dT_from_T_equilibrium(), fixed a bug that occurred for all 
      species when the temperature was higher than the maximum temperature of the NASA Glenn 
      enthalpy polynomials (20000 K for most)
  * in src/test.c
    - added test_s_equilibrium() and test_dsdT_equilibrium()
    - in main(), added calls to test_s_equilibrium() and test_dsdT_equilibrium()


2020 DEC 21a
  * in model/fluid/_*_plasma/fluid_plasma.c 
    - in find_Dstar(), set Dstar to zero at the boundary nodes (fluid type)
  * in model/share/emfield_share.c
    - in find_Ve_from_J(), when the node is a boundary node, set Ve to electron velocity at 
      nearest inner node 
  * in src/common.c
    - in find_l_of_nearest_inner_node(), renamed nodetype for TYPELEVEL
    

2020 DEC 19a
  * in model/chem/_Cs_Air_Plasma_11s/chem.c and model/chem/_Cs_Air_Plasma_15s/chem.c
    - changed default value of TOWNSENDIONIZATION to TRUE
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_DeltaVk_from_mu(), got rid of setting DeltaVk to zero at the boundary and near 
      boundary nodes
    - in read_model_emfield_actions(), got rid of setting B to zero at the boundary and near
      boundary nodes
      

2020 DEC 16a
  * in bin
    - added HOSTS12.mpich
    - added HOSTS2.mpich
  * modified
    - bin/MHD_generator_cesium.wrp
    - bin/MHD_generator.wrp
    

2020 DEC 08a
  * in lib/exm/exm.c
    - added EXM_f_from_line()
    - added EXM_f_from_monotonespline()
  * in lib/soap/soap.c
    - in functions_builtin(), added code for Interpolate built-in action
    

2020 DEC 01a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_value_fluid(), added Weee post variable
  * in model/thermo/_generic/thermo.c
    - fixed 2 bugs: the enthalpy polynomials for C+ and H+ were not correctly input in one interval
    

2020 NOV 27a
  * in model/chem/_H2_He_CH4_Plasma_13s/chem.hh
    - added N2 as the last species
  * in model/thermo/_generic/thermo.c
    - in find_nuk_eta_kappa(), now include the charged species in the determination of eta and kappa
    - changed MAX_T_FOR_NUK_ETA_KAPPA_POLYNOMIALS from 12000.0 to 6000.0
    

2020 NOV 24a
  * in model/chem/_H2_He_CH4_Plasma_13s/chem.hh
    - changed H2plus for Heplus
  * in model/fluid/_drift-diffusion/fluid.c
    - in write_model_fluid_template(), changed Nkmax from 1e19 to 1e40;
  * in model/share/fluid_share.c
    - in find_init_number_density_templates(), added initial conditions for Neptune atmosphere
  * in model/thermo/_generic/thermo.c
    - added He+ species
  * in src/init.c
    - in reorder_initvar_species(), fixed a bug: when the number of species specified with the
      Species() command within Init() was equal to ns, the function would set the species ordering
      to the default and not to the ordering specified in Species()
      

2020 NOV 18a
  * in model/thermo/_generic/thermo.c
    - added two species: H+ and CH2
    - in _muk_from_rhok_Tk_Ek(), changed mobilities of H2+, Cs+, Ar+, C+, C2+, CN+, CO+ to
      mu=1.0/N*min(fact*1.00E23/sqrt(Tk),fact*2.50E12/sqrt(Estar)); with fact=sqrt(28.96E-3/_calM(k))
    - in find_dmuk_from_rhok_Tk_Ek(), changed dmui of H2+, Cs+, Ar+, C+, C2+, CN+, CO+ to
      find_dmui(rhok, fact*1e23, Tk, -0.5, fact*2.5e12, Ekstar, -0.5,   dmukdTk, dmukdrhok);
  * in model/chem
    - added _H2_He_CH4_Plasma_13s
     

2020 NOV 12a
  * in model/chem/_Cs_Air_Plasma_11s/chem.c and model/chem/_Cs_Air_Plasma_15s/chem.c
    - turned back on the cesium townsend ionization function of Te
    - added cesium townsend ionization function of Estar
  * in model/chem/_Cs_Air_Plasma_11s/doc/report.tex and model/chem/_Cs_Air_Plasma_15s/doc/report.tex
    - added cesium townsend ionization function of Estar
  * in model/thermo/_generic/thermo.c
    - in _mue_from_rhok_Te() and find_dmue_from_rhok_Te(), changed  muei=1.342e16*pow(Te,1.5)/Ni; 
      to muei=1.061e16*pow(Te,1.5)/Ni;
  * in model/thermo/doc/report.tex
    - added references to where muei is obtained and adjusted electron mobility in the table
      where it is listed to include both electron-ion and electron-neutral collisions
      

2020 NOV 10a
  * in bin/MHD_generator_cesium.wrp
    - updated the control file so that it can be used with any chemical solver
  * in lib/gridg/eg
    - updated the gridg files that were outdated
  * in model/emfield/_Epotential*/emfield.c
    - changed the call to _muk_from_rhok_Tk_Ek()
    - changed the call to _mue_from_rhok_Te()
  * in model/thermo/_generic/thermo.c
    - in find_nuk_eta_kappa(), changed the calls to _muk_from_rhok_Tk_Ek() 
    - added _mue_from_rhok_Te()
    - added find_dmue_from_rhok_Te()
    - changed the call of _muk_from_N_Tk_Ek() to _muk_from_rhok_Tk_Ek()
    - changed the call of _dmukN_dTk_from_Tk_EkoverN() to find_dmuk_from_rhok_Tk_Ek()
  * in model/fluid/_*_plasma/fluid_source.c
    - changed the call to _mue_from_rhok_Te()
    - in find_dSe_dU_transport(), added call to find_dmue_from_rhok_Te() and changed some
      partial derivatives within the Jacobian
    - in find_dSemfield_dU(), added call to find_dmuk_from_rhok_Tk_Ek() and changed some
      partial derivatives within the Jacobian
    

2020 NOV 01b
  * in model/thermo/_generic/thermo.c
    - in _dmukN_dTk_from_Tk_EkoverN(), added species Ar+, C+, C2+, CN+, CO+
    

2020 NOV 01a
  * in config/config.c
    - added mpicc.mpich and mpicc.openmpi to the list of compilers
  * in model/chem/_H2_Cs_Air_Plasma_15s/chem.c
    - in find_Qei() and find_dQei_dx(), added cesium contribution
  * in model/chem
    - added _C12H23_Cs_Air_Plasma_21s
    

2020 OCT 24a
  * in model/chem/_H2_Cs_Air_Plasma_15s/chem.c
    - added SMITH1999 H2-Air option
    - changed IONIZATIONREACTION[7] with updated Townsend ionization rates for Cesium
  * in model/chem/_H2_Cs_Air_Plasma_15s/doc/report.tex
    - changed Townsend ionization of Cesium from Lenard to BOLSIG+
  * in USAGE
    - added instructions on how to use openMPI
  * in tools/inlet.c 
    - added U1, U2, U3 to the output


2020 OCT 16a
  * in lib/soap/eg/calc.c
    - in main(), added kB, me, and e to the scientific constants
  * in model/share/emfield_share.c
    - in _E_dot_Je_over_mueNe(), now finds Je using find_Ve_from_J() instead of 
      find_Jk_from_Jk_at_interfaces()
  * in tools/inlet.c
    - added Pdyn and T3 as flags
     

2020 OCT 11b
  * in tools/gitnewversion_public.sh
    - added line "git remote set-url origin git@github.com:bernardparent/TEXCLASS" so that
      no password is asked for when pushing to git if a ssh key has been uploaded to github
  

2020 OCT 11a
  * in model/chem
    - added _H2_Air_Plasma_18s
  * in model/emfield/_Epotential-Te/emfield.c
    - in find_Sstar_emfield(), made Te set to _Te(np[l]) instead of _Te_EMF(np[l],gl)


2020 OCT 04a
  * in model/emfield/_Epotential-Te/emfield.c
    - in find_linearization_coefficients_inner_node_emfield_OHMBASED(), multiplied the linearization
      coefficients of the thermal diffusion by 1.25
    - in find_Fstar_interface_emfield(), changed dTeEMFdXj-0.2*dTedXj to 1.25*dTeEMFdXj-dTedXj to
      yield the same discretization stencil as in model/fluid/_*Plasma*/fluid.c
  * in model/emfield/_Epotential-Te/emfield.hh
    - fixed a bug: defaultinitvartypeemfield should be 1 not 2
  * in model/share/chem_share.c
    - commented out add_to_dQei() when speceminus is not defined
  * in src/data.c
    - in read_data_file(), added initialization of gl->nsinit and gl->initspecies
  * in src/post.c
    - in create_domain_of_cuts_along_x(), added initialization of gl->nsinit and gl->initspecies
    

2020 OCT 01a
  * in model/chem/_H2_Air_Plasma_13s/chem.c and model/chem/_H2_Cs_Air_Plasma_15s/chem.c
    - changed the EXPIONIZATIONREACTION[6] to the curve fit from BOLSIG+ instead of the expression
      from Mendez
  * in model/chem/_H2_Cs_Air_Plasma_15s/doc/report.tex and model/chem/_H2_Air_Plasma_13s/doc/report.tex
    - changed the hydrogen townsend ionization to curve fit from BOLSIG+ instead of the expression 
      from Mendez
  * in model/emfield/_Epotential/emfield.c and model/emfield/_Epotential-Bfixed/emfield.c
    - added function _Te_EMF() which returns 0
  * in model/fluid/_*_plasma/fluid.c
    - in find_Kstar_interface(), changed K[fluxee][fluxee] so that the residual part is 0.25
      and the timestepping part is 1.25 times the thermal diffusion
      

2020 SEP 30a
  * in cycle/share/cycle_share.c
    - removed update_Te_local_in_zone_1()
    - removed update_Te_local_in_zone()
  * in cycle/_multizone/cycle.c and cycle/_standard/cycle.c
    - in runtime_actions_cycle_specific(), deleted commented //update_Te_local_in_zone()
  * in model/thermo/_generic/thermo.c
    - in _zetae_from_Te() and _dzetae_dTe_from_Te() set minimum temperature to 300 K
  * in model/fluid/_drift-diffusion/fluid.c and model/fluid/_*plasma*/fluid.c
    - removed update_Te_local()
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c and model/fluid/_Navier-Stokes_plasma/fluid.c
    - added code for TEMODEL_TRANSPORTEMF
  * in model/emfield/_Epotential-Te/emfield.c
    - in find_Fstar_interface_emfield(), changed dTeEMFdXj-dTedXj to dTeEMFdXj-0.2*dTedXj
    - in find_Fstar_interface_emfield(), added second-order accuracy 
    
  
2020 SEP 28a
  * in model/thermo/_generic/thermo.c
    - added function _ionizationpotential()
  * in model/share/chem_share.c
    - added functions add_to_Qei() and add_to_dQei()
  * in model/chem/_*Plasma*/chem.c
    - rewrote find_Qei() and find_dQei_dx() as function  of add_to_Qei() and add_to_dQei()
  * in model/emfield/_Epotential-Te/emfield.c
    - in add_dUstar_to_U_emfield(), added Temin and Temax limits
    - in find_Sstar_emfield(), changed Te=_Te(np[l]); to Te=_Te_EMF(np[l],gl);
    - in write_model_emfield_template() and read_model_emfield_actions(), added Temin and Temax
  * in model/chem/_H2_Air_Plasma_13s/
    - added smith1999.c module
  * in model/chem/_H2_Air_Plasma_*/
    - upgraded Townsend ionization of hydrogen to polynomial function of EoverN instead of
      expression based on Te (as in Mentez's paper)
  * in model/chem/
    - deleted _H2_Cs_Air_Plasma_22s/


2020 SEP 24a
  * in model/chem/
    - added _Cs_Air_Plasma_11s
  * in model/emfield
    - added _Epotential-Te
  * in model/chem/_H2_Air_9s/doc/report.tex
    - fixed compilation bug originating from wrong package loaded
     

2020 SEP 21a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_name_fluid(), and find_post_variable_value_fluid(), added post variables
      Qen and EdotJe
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - added _Te_min() and _Te_smooth()
    - in _Techem(), now calls _Te_min() and _Te_smooth(), but with the same functionality as before
  * in model/chem/_H2_Air_9s/doc/report.tex
    - added validation cases
    

2020 SEP 17a
  * in cycle/res/_generic/res.c
    - added CYCLELEVEL_RES to find_Kstar_interface() call
  * in cycle/share/ts_share.c
    - added CYCLELEVEL_TS to find_Kstar_interface() call
  * in model/emfield/*/emfield.c
    - in write_model_emfield_template(), changed Te_buffer=0.0; to Te_buffer=300.0;
  * in model/fluid/*/fluid.c
    - added CYCLELEVEL parameter to find_Kstar_interface()
  * in src/post.c
    - added CYCLELEVEL_RES to find_Kstar_interface() call
  * in src/common.h
    - added definitions for CYCLELEVEL_RES and CYCLELEVEL_TS
  * in model/fluid/_*_plasma/fluid.c
    - in find_Kstar_interface(), made changes to electron thermal diffusion coefficient: is now
      only added for CYCLELEVEL_TS not CYCLELEVEL_RES
  * in model/fluid/_*_plasma/fluid_plasma.c
    - in find_Dstar(), now calls find_Ve_from_J() instead of find_Ve_from_Je()
    - in find_Dstarplus() and find_Dstarminus(), now also conditions electron energy not just the 
      charged species continuity equations
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_dSe_dU_transport(), removed the line that set to zero the non-diagonal elements
      of dSedU
  * in model/fluid/doc/Transport_Equations/report.tex
    - changed the section "Derivation of the Electron Energy Transport Equations" and added
      derivation of the thermal conductivity terms and when and when not they should be included
  * in model/chem/_H2_Air_9s/smith1999.c
    - updated the third body efficiencies
  * in model/chem/_H2_Air_9s/doc/report.tex
    - updated the third body efficiencies
  

2020 SEP 11a
  * in model/chem/_H2_Air_9s/chem.c
    - added smith1999 model from Ajjay Omprakas
  * in model/chem/_H2_Air_9s/
    - added smith1999.c and smith1999.h from Ajjay Omprakas
  * in model/chem/_H2_Air_Plasma_13s/chem.c
    - made modifications so that there is now a choice given for the ionization model: either
      based on experiments or based on BOLSIG+
  * in model/chem/_H2_Air_Plasma_13s/doc/report.tex
    - added table for experiments and BOLSIG+ ionization reactions
  * in model/chem/_H2_Cs_Air_Plasma_15s/chem.c
    - changed reaction of recombination of O2  to dissociative recombination
  * in model/share/emfield_share.c
    - added find_E_dot_Je_from_E_dot_Je_at_interfaces() 
    - added _E_dot_Je_over_mueNe_test()
  * in src/test.c
    - added test_hmolar()
    

2020 SEP 08a
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Schem(), for _CHEM_WEEE_TWOTEMPERATURE the vibrational temperature is used
      to determine ee of the electrons created from neutrals
      

2020 SEP 07a
  * in model/chem
    - added _H2_Cs_Air_Plasma_15s
  * in model/chem/_Cs_Air_Plasma_15s/chem.c, model/chem/_H2_Cs_Air_Plasma_22s/lenard1964.c
    - turned off reaction for Townsend ionization of Cesium function of Te (leads to instabilities)
  * in model/chem/_H2_Air_Plasma_13s/chem.c
    - moved chemical reactions from parent2014.c to chem.c
  

2020 SEP 05b
  * in model/fluid/*/fluid.c
    - in write_model_fluid_template(), changed default Tmax to 26000 K. 
  * in model/fluid/_Favre-Reynolds_Tv/fluid.c
    - in write_model_fluid_template(), changed TEMODEL to TEMODEL_TVEQUILIBRIUM
  * in model/fluid/_*_plasma/fluid.c
    - in write_model_fluid_template(), changed TEMODEL to TEMODEL_TRANSPORT


2020 SEP 05a
  * in model/chem/_Cs_Air_Plasma_15s/
    - separated the Lenard reactions into several groups (negative ions, cesium reactions, and 
      other high temperature air reactions)
    - added the Park 1993 model as a substitute to the Lenard 1964 high temperature air
      model
      

2020 SEP 04a
  * in model/fluid/_Favre-Reynolds/fluid_post.c, model/fluid/_Favre-Reynolds_Tv/fluid_post.c,
    model/fluid/_Navier-Stokes/fluid_post.c
    - added N as a post variable
  * in model/fluid/_Navier-Stokes*/fluid_source.c
    - in find_Saxi(), now allows nodes to have a negative y
  * in model/share/fluid_share.c
    - in find_Saxi(), now allows nodes to have a negative y
    - in find_Saxi(), got rid of extra source terms for turbulence modeling derived by J Etele
  * in bin
    - added RAM-C-II.wrp
    

2020 SEP 03a
  * in model/chem
    - added _Air_5s
    - removed _H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret
    - removed _Air_Plasma_12s_42r_Dunn-Kang-Macheret
    - removed _Air_4s_13r
  * in model/chem/_Air_Plasma_11s/chem.hh
    - added proper references to boyd2007a, park1993a, lenard1964a
  * in src/control.c
    - added reference boyd2007a
    

2020 SEP 02a
  * in model/chem
    - added _H2_Air_Plasma_13s
  * in model/fluid/*/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid(), changed the
      mass fractions and number densities to molar fractions
      

2020 AUG 31b
  * in model/chem/_H2_Cs_Air_Plasma_22s/chem.c
    - fixed a bug: the ionization reactions shouldn't set W to zero but add to it
  * in bin
    - added bluntwedge.wrp
    

2020 AUG 31a
  * in cycle/restime/_CDF+/restime.c
    - in write_disc_restime_template() made xi[] loop function of numdim and numspec
  * in model/fluid/_Navier-Stokes/fluid_init.c
    - added missing #include <model/share/fluid_share.h>
  * in model/fluid/*/fluid_bdry.c
    - in write_bdry_fluid_template() added Twall param to BDRY_WALLTFIXED1
    - in update_bdry_wall(), now calls _bdry_param(np,gl,lA,0,TYPELEVEL_FLUID_WORK) to find
      T at the wall node for BDRY_WALLTFIXED1
      

2020 AUG 30a
  * in src/bdry.c
    - in _bdry_param(), changed error message wording
    - in read_bdry_actions(), added code to handle bdry extra parameters to be read within actions
      All(), Region()
    - in read_bdry_actions(), added new Plane() action to specify boundary conditions on a plane;
      Plane is now the approach to specify conditions on the faces instead of the cumbersome Faces() 
      which can not be used  in conjunction with boundary extra parameters
  * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c
    - in write_bdry_fluid_template(), removed Param() within template
    - in write_bdry_fluid_template(), removed Faces() within template
    - in write_bdry_fluid_template(), added Plane() within template
  * in model/fluid/_Navier-Stokes_perfect/fluid_init.c
    - removed unneeded flux variable  within init_node_*()
  * in model/share/fluid_share.c
    - in find_init_mass_fraction_templates(), find_init_molar_fraction_templates(),   
      find_init_number_density_templates(), added code to handle special case ns=1
  * in src/init.c
    - in read_init_actions_fluid(), made sure that Species() is not executed when there is only
      one species specified within the model
      

2020 AUG 29c
  * in model/share/fluid_share.c
    - deleted _betag_default()
    - deleted _betaa_default()
    - in write_disc_fluid_template(), added charged species loop for betaa and betag
    

2020 AUG 29b
  * in model/fluid/*/fluid.c
    - in write_cycle_fluid_template(), added species and dimensions loops for Uref
  * in src/control.c
    - in read_control(), added numspec, numdim, numflux, and SPECIESTYPE to codex
    

2020 AUG 29a
  * in model/fluid/*/fluid_init.c and 
    - removed find_init_string() and rewrote the code within write_init_fluid_template()
    - in write_init_fluid_template(), added call to find_init_mass_fraction_templates()
      or find_init_densities_templates() or find_init_molar_fraction_templates()
    - in init_node*() changed the call to reformat_initvar_species_fractions() to include gl
  * in model/share/fluid_share.c
    - added find_init_mass_fraction_templates(), find_init_molar_fraction_templates(),
      find_init_number_density_templates()
  * in model/thermo/_generic/thermo.c
    - deleted find_default_init_mass_fraction_string(), find_default_init_number_density_string(),
      find_default_init_number_density_fraction_string()
  * in src/common.h
    - in gl_t, added initspecies[ns] and nsinit
  * in src/init.c
    - added reorder_initvar_species()
    - rewrote reformat_initvar_species_fractions() to tackle case where not all species are listed
      within the init call
    - in read_init_actions_fluid(), added the action Species()
    - in read_init_actions(), initialized gl->nsinit and gl->initspecies[spec] before and after
      reading the module Init()
      

2020 AUG 28a
  * in model/chem/_H2_Air_13s/jachimowski1988.c
    - fixed bug: bool REACTION[33] should be bool REACTION[34]
  * in model/chem/
    - added _H2_Cs_Air_Plasma_22s
    

2020 AUG 26b
  * in model/chem
    - added _H2_Air_13s which includes the Jachimowski model with N reactions 
  * in model/thermo/_generic/thermo.c
    - added species HNO and NO2
    - changed approximation of Peps for Cs and Cs+ (unknown) from Na to N2
  * in src/control.c
    - fixed spelling mistake jachimowsky  -> jachimowski
  * in src/test.c
    - in main(), commented out the dispose_node and free() calls because they created a hang
      when the code is compiled with mpicc
      

2020 AUG 26a
  * in model/chem
    - deleted _H2_Air_9s_20r_Jachimowsky
    - deleted _H2_Air_9s_Smith
    - added _H2_Air_9s in which the Jachimowki model with N2 inert is now located
    

2020 AUG 18a
  * in cycle/_standard/cycle.c
    - in write_runtime_template(), changed the default values for CFL, Lc, relaxEMF, UpdateEMField
  * in model/chem/_Air_Plasma_11s/chem.hh
    - added _CHEM_WEEE_TWOTEMPERATURE
  * in model/fluid/*/fluid.hh
    - added the definition of hbw_mem_fluid_metrics
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Schem(), in case _CHEM_WEEE_TWOTEMPERATURE is not defined and 
      TETRANSPORT_WEEE_TWOTEMPERATURE is set to TRUE, output fatal error
  * in model/share/emfield_share.c
    - in find_J_at_node_from_Jstar_at_interfaces(), added some asserts to verify if the node is
      valid (TYPELEVEL_FLUID) at the location needed by find_metrics_at_interface()
  * in src/control.c
    - in readcontrol_actions(), now calls find_metrics_on_all_nodes() using "hbw_mem_fluid_metrics"
      instead of "+1"
  * in bin
    - added MHD_generator_cesium.wrp
    - added reentry_wedge.wrp
      

2020 AUG 12a
  * in model/emfield/doc/Epotential/report.tex
    - fixed a typo: charges species should be charged species
  * in model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c and model/fluid/_plasma/fluid_bdry.c
    - in update_bdry_wall(), now fix Tv at the wall equal to the wall temperature (used to be
      a zero-gradient condition)
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the section "Charged Species Mass Conservation", added the standard non-computationally
      efficient form for completeness
    

2020 AUG 10a
  * in model/chem/_Air_Plasma_11s/chem.c
    - added find_We()
  * in model/chem/_Air_Plasma_11s/lenard1964.c
    - added find_We_Lenard1964()
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport(), changed (Te-T) to (Te-Tv) within Qen
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template() and read_model_fluid_actions() added option 
      TETRANSPORT_WEEE_TWOTEMPERATURE
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Se(), added option TETRANSPORT_WEEE_TWOTEMPERATURE
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the outline of the term Qen, changed Te-T to Te-Tv and added explanations
      

2020 AUG 08a
  * in model/chem/_CH4_Air_20s_52r_Yungster/chem.c, model/chem/_CO2_Plasma_23s_Park/chem.c
    - added missing calls to write_model_chem_template() and read_model_chem_actions()
  * in model/fluid/_Favre-Reynolds/fluid_bdry.c and model/fluid/_Navier-Stokes/fluid_bdry.c
    - in update_bdry_wall(), now set the charged species densities to 0 at the wall
  * in model/share/chem_share.c
    - added add_to_*_1r2p() functions from Ajjay Omprakas
  * in model/thermo/_generic/thermo.c
    - in _muk_from_N_Tk_Ek(), added approximate mobilities for Ar+, C+, C2+, CN+, CO+
    

2020 AUG 07a
  * in model/chem/_Air_Plasma_11s/chem.c
    - added lenard1964 as an option
    - added add_W_Townsend ()
    - added add_dW_dx_Townsend ()
    - in find_Qei() and find_dQei_dx(), added ionization energies for O2 and N2 if Townsend 
      ionization is chosen
  * in model/chem/_Air_Plasma_11s/
    - added lenard1964.c
  * in model/chem/_Air_Plasma_11s/doc/report.tex
    - added the Lenard chemical solver
  * in model/fluid/*/fluid.c, model/fluid/*/fluid_post.c, model/fluid/*/fluid_conv.c, 
       model/fluid/*/fluid_init.c
    - added extra parameter Te to find_nuk_eta_kappa()
  * in model/fluid/_Favre-Reynolds_Tv/fluid.c
    - added _Te_from_T_Tv() and _Te()
    - in write_model_fluid_template() and read_model_fluid_actions(), added 
      SET_CHARGED_DENSITIES_TO_ZERO_AT_WALL
  * in model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c
    - in update_bdry_wall(), set wwall to zero for charged species is set as such
  * in model/fluid/_Favre-Reynolds_Tv/fluid_conv.c
    - in find_jacvars*(), added jacvars->Te=..
  * in model/fluid/_drift-diffusion/fluid.c
    - in test_dSchem_dU(), fixed a bug: gl->model.rhok should be rhok
  * in model/thermo/_generic/thermo.c
    - in find_nuk_eta_kappa(), added parameter Te
    - in _mueN_from_Te() and _dmueN_dTe_from_Te() added clip for electron mobility at T=300K
    

2020 AUG 05a
  * deleted model/chem/_Cs_Air_Plasma_*
  * in model/chem
    - added _Cs_Air_Plasma_15s
  * in model/chem/_chem.h and model/chem/*/chem.c
    - added gl parameter to find_Qei() and find_dQei_dx()
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport(), added gl parameter to find_Qei() and find_dQei_dx()


2020 AUG 04b
  * in model/chem/
    - added _Air_Plasma_11s/
  * deleted
    - model/chem/_Air_Plasma_11s_31r_Dunn-Kang 
    - model/chem/_Air_Plasma_11s_Park
  * in model/share/chem_share.c
    - in test_dW_dx(), added code to compared dWdTv jacobians
    

2020 AUG 04a
  * in model/_generic/model.c
    - in write_model_template(), added call to write_model_chem_template()
    - in read_model_actions(), added call to read_model_chem_actions()
  * in model/chem/*/chem.c
    - added write_model_chem_template()
    - added read_model_chem_actions()
    - added gl parameter to find_W () and find_dW_dx ()
  * in model/chem/*/chem.hh
    - added definition of gl_model_chem_t
  * in model/fluid/*/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
    - added gl parameter to find_W() and find_dW_dx()
  * in model/share/chem_share.c
    - in test_dW_dx(), added gl to the list of parameters and added to calls to find_W() and 
      find_dW_dx() 
  * in src/common.h
    - in gl_t, added MODEL_CHEM_READ
    

2020 AUG 03a
  * in cycle/share/cycle_share.c
    - deleted exchange_U_newer() and exchange_U_old()
    - renamed exchange_U() to exchange_U_old()
    - rewrote exchange_U() so that MPI_Buffer is used instead of MPI_Send and MPI_Recv for
      improved performance. (rewrite by Minindu Weerakoon and Prasanna T. Rajendran)
  * in model/chem/_Air_Plasma_11s_Park/doc/report.tex
    - added the Park-Candler-Boyd model
    - modified the Park model to include a backward controlling temperature different from
      a forward controlling temperature
  * in model/share/chem_share.c
    - in add_to_W_fwbw*(), deleted redundant code and added calls to add_to_W_fw*() and
      add_to_W_bw*()
    - in add_to_dW_fwbw*(), deleted redundant code and added calls to add_to_dW_fw*() and
      add_to_dW_bw*()
      

2020 JUL 31a
  * deleted
    - model/chem/_H2_Air_Plasma_17s_Lenard-Smith/
  * in model/share/chem_share.c
    - added add_to_W_fw_2r2p(), add_to_W_bw_2r2p(),
            add_to_W_fw_3r2p(), add_to_W_bw_3r2p(),
            add_to_W_fw_2r1p(), add_to_W_bw_2r1p(),
            add_to_W_fw_2r3p(), add_to_W_bw_2r3p(),
            add_to_dW_fw_2r2p(), add_to_dW_bw_2r2p(),
            add_to_dW_fw_3r2p(), add_to_dW_bw_3r2p(),
            add_to_dW_fw_2r1p(), add_to_dW_bw_2r1p(),
            add_to_dW_fw_2r3p(), add_to_dW_bw_2r3p()
            

2020 JUL 25b
  * in tools
    - added vtk2vtu.sh
  * in tools/README
    - added description of vtk2vtu.sh
    
  
2020 JUL 25a
  * in src/control.c
    - added park1994a and smith1999a to the bibs
  * deleted
    - model/chem/_H2_Air_9s_Smith/doc/townsend/
  * in model/chem/_H2_Air_9s_Smith
    - added contributions from Ajjay Omprakas to chem.c, chem.hh and report.tex
  * in model/chem/_CO2_Plasma_23s_Park
    - added contributions from Aaron Trinh to chem.c, chem.hh and report.tex


2020 JUL 22a
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - added _Tk_smooth()
    - in find_Ek_muk_mem(), now calls _Tk_smooth() instead of _Tk() for electrons
  * in model/fluid/_Favre-Reynolds_plasma/fluid.c
    - in write_model_fluid_template(), reformat_w(), add_dUstar_to_U(),  
      changed wimin, wimax, wemin, wemax to chiimin, chiimax, chiemin, chiemax 
    - deleted reformat_rhok_old()
  * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
    - in find_Dstar(), now find Ve using find_Ve_from_Je() instead of find_Ve_from_J()
  * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU_transport(), changed Ne from _Nesmoothed() to _Nk(np[l],gl,speceminus)
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in add_dUstar_to_U(), added a missing switch case for TEMODEL_TRANSPORT 
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Se() and find_dSe_dU(), added missing switch case for TEMODEL_CONSTANT
    - in find_dSe_dU_transport(), changed Ne from _Nesmoothed() to _Nk(np[l],gl,speceminus)
  * in model/thermo/_generic/thermo.c
    - fixed bug in species NCO NASA Glenn enthalpy polynomial for the third set of coefficients
  * in model/chem/_H2_Air_9s_Smith/doc/report.tex
    - added Smith reactions from Ajjay Omprakas
  * in model/emfield/_Epotential/emfield.c
    - in _mu_mem(), added a clip to Te with Te_buffer even when node is not inner


2020 JUL 21a
  * in cycle/*/cycle.c
    - in write_runtime_template(), changed sigma2 to 0.0 from 0.3
  * in model/emfield/_Epotential-Bfixed/emfield.c
    - in find_post_variable_value_emfield(), now find Ve using find_Ve_from_J() instead of
      find_Vk()
  * in model/emfield/_Epotential/emfield.c
    - added _Tk_smooth()
    - in _mu_mem(), changed Tk=max(gl->model.emfield.Te_buffer,Tk); from 
      Tk=max(Tk,_T(np[l],gl)+gl->model.emfield.Te_buffer);  for the electrons
    - in _mu_mem(), made mue function of _Tk_smooth()  instead of simply Te at the node
  * in model/fluid/_Favre-Reynolds_Tv/fluid.c
    - added TEMODEL_TVEQUILIBRIUM to write_model_fluid_template(), read_model_fluid_actions(),
      read_model_fluid_actions()
  * in model/fluid/_Favre-Reynolds_Tv/fluid.h
    - added definitions for TEMODEL_TEQUILIBRIUM, TEMODEL_TVEQUILIBRIUM
  * in model/fluid/_Favre-Reynolds_Tv/fluid_source.c
    - in find_Schem() and find_dSchem_dU(), added code to make T=Tv in case TEMODEL_TVEQUILIBRIUM 
      is chosen
  * renamed 
    - TEMODEL_EQUILIBRIUM to TEMODEL_TEQUILIBRIUM
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in write_model_fluid_template(), reformat_w(), add_dUstar_to_U(),  
      changed wimin, wimax, wemin, wemax to chiimin, chiimax, chiemin, chiemax, 
    - deleted reformat_rhok_old()
    - in read_model_fluid_actions() and find_prim_fluid_mem(), add_dUstar_to_U(), added TEMODEL_TVEQUILIBRIUM
    - in update_Te_local(), took away code for TEMODEL_TEQUILIBRIUM because this function is not
      called when TEMODEL is TEMODEL_TEQUILIBRIUM or TEMODEL_TVEQUILIBRIUM
  * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
    - in find_Dstar(), now find Ve using find_Ve_from_Je() instead of find_Ve_from_J()
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - added _Techem()
    - in find_Se(), changed Ne from _Nesmoothed() to _Nk(np[l],gl,speceminus)
    - in find_Se() and find_dSe_dU(), added TEMODEL_TVEQUILIBRIUM
    - in find_Schem() and find_dSchem_dU(), Te is now fixed to _Techem()
  * in model/share/emfield_share.c
    - in find_Ve_from_J(), changed the division constant used in notzero from 1e-10 to 1e-30
    - added find_Ve_from_Je()
    - rewrote _E_dot_Je_over_mueNe() so that it uses find_Jk_from_Jk_at_interfaces() to find Je
  * in model/chem/
    - added _Cs_Air_Plasma_15s_Lenard-Park
    
    
2020 JUL 15a
  * in model/chem/*/chem.c
    - in find_W() took away calculations of Gs[k] and took away Gs arguments from add_to_W_fwbw*()
    - in find_dW_dx() took away calculations of Gs[k] and dGsdT[k] and took away Gs and dGsdt
      arguments from add_to_dW_fwbw*()
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.hh and
    model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/chem.hh
    - deleted #define _CHEM_SET_TE_TO_T_FOR_FWBW_REACTIONS
  * in model/chem/_CO2_Plasma_23s_Park/
    - erased reactions 
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/chem.hh
    - added reference [lenard1964a]
  * in model/fluid/_Favre-Reynolds*/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid()
      changed mass fraction for number density for the charged species
  * in model/share/chem_share.c
    - added functions _Gs() and _dGsdT() which now call _cpk_from_T_equilibrium(), 
      _hk_from_T_equilibrium(), _sk_from_T_equilibrium(), _dsk_dT_from_T_equilibrium() instead of
      _cpk_from_T(), _hk_from_T(), _sk_from_T(), _dsk_dT_from_T()
    - in add_to_W_fwbw*(), got rid of Gs[] parameters and now call _Gs() 
    - in add_to_dW_fwbw*(), got rid of Gs[] and dGsdT[] parameters and now call _Gs() and _dGsdT()
  * in model/thermo/_generic/thermo.c
    - added functions _cpk_from_T_equilibrium(), _hk_from_T_equilibrium(), _sk_from_T_equilibrium(),
      _dsk_dT_from_T_equilibrium()
    - in _sk_from_T() and _dsk_dT_from_T(), took away condition dependent on 
      _CHEM_SET_TE_TO_T_FOR_FWBW_REACTIONS
  * in src/control.c
    - added bibs lenard1964a and park1993a
  * in model/chem/
    - added _Air_Plasma_11s_Park/  


2020 JUL 13a
  * in model/emfield/_Epotential/emfield.c
    - in find_post_variable_value_emfield(), now finds Ve using find_Ve_from_J instead 
      of find_Vk_from_Vk_at_interfaces
  * in model/fluid/_*_plasma/fluid_plasma.c
    - in find_Dstar(), instead of find_Vk, now uses find_Ve_from_J and find_Vk_from_Vk_at_interfaces
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid(), added post
      variables EoverN and Telocal
  * in model/share/emfield_share.c
    - added find_Ve_from_J()
  * in src/data.c
    - in read_data_file_binary_ascii(), added code such that a data file that was written without
      the trapezoidal time stepping can be read by trapezoidal time stepping by initializing the
      residual to zero (contrib by Prasanna Rajendran)
      

2020 JUL 09a
  * in model/chem/Makefile
    - added _H2_Air_9s_Smith within cleanall
  * in model/fluid/_Navier-Stokes/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid()
      changed mass fraction for number density for the charged species
  * in model/fluid/_Navier-Stokes_plasma/fluid.c
    - in read_model_fluid_actions() and read_model_fluid_actions() added N2VIBMODEL_EQUILIBRIUM
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in _tauvt() and find_dSvib_dU(), added N2VIBMODEL_EQUILIBRIUM
    

2020 JUL 07a
  * in model/chem/
    - added _H2_Air_Plasma_17s_Lenard-Smith
    

2020 JUL 06b
  * in model/chem/_Air_Plasma_6s_15r/
    - added doc
  * in model/chem/_Air_Plasma_8s_28r_Macheret/
    - added doc
    

2020 JUL 06a
  * in lib/soap/soap.c
    - in functions_builtin(), changed the double format of the spline function to the standard
      DOUBLEFORMAT
    - in SOAP_process_code(), added substitute_functions() just before update_var() to 
      speed up the processing of function calls with a large number of arguments
      (Prasanna Rajendran contribution)
      

2020 JUL 03a
  * in model/chem/
    - added _H2_Air_9s_Smith
  * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
    - in find_Qei() and find_dQei_dx(), removed ionization energies due to electron impact
    

2020 JUL 02a
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/chem.c
    - re-ordered the reactions so that the ones involving Cesium are all located at the end
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/doc/report.tex
    - re-ordered the reactions so that the ones involving Cesium are all located at the end
    

2020 JUL 01b
  * in cycle/share/cycle_share.c
    - in function exchange_U(), added threading of find_prim_fluid() by Minindu Weerakoon
    

2020 JUL 01a
  * in model/chem/*/chem.c
    - added find_Qei() and find_dQei_dx()
  * in model/fluid/*/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
    - in test_dSchem_dU(), added gl->cycle.fluid.Uref as first argument to test_dW_dx()
  * in model/fluid/*_plasma/fluid_source.c
    - in find_Se(), added call to find_Qei() and removed pre-existing code that found Qei
    - in find_dSe_dU_transport(), added call to find_dQei_dx() and removed pre-existing code
      that found dQei_drhok
  * in model/share/chem_share.c 
    - in test_dW_dx(), added parameter rhokref and made drhok function of rhokref
  * in model/fluid/_Favre-Reynolds_plasma/fluid.c and model/fluid/_Favre-Reynolds_plasma/fluid_source.c
    - added option TEMODEL_EQUILIBRIUM with code based on _Navier-Stokes_plasma/fluid.c
    

2020 JUN 29a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - in find_post_variable_name_fluid() and find_post_variable_value_fluid() changed the ordering
      of a and rhoc
  * in model/share/chem_share.c
    - in _dkfdT_Arrhenius(), fixed a sign bug in dkfdT
  * in model/thermo/_generic/thermo.c
    - added find_EoverN_from_Te()
  * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/
    - added doc
    

2020 JUN 25a
  * in model/chem/_CO2_Plasma_23s_Park/doc/Makefile and model/chem/_Cs_Air_Plasma_13s_Lenard/doc/Makefile
    - fixed a bug within the make clean
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/chem.c
    - added loops within reactions in which M1, M2, etc appeared to shorten the code
    - added Townsend ionization of NO+
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/doc/report.tex
    - added Townsend ionization of NO+
    - added figure 1 comparing NO+ Townsend ionization curve fit to BOLSIG+ data
  * in model/fluid/_Navier-Stokes_plasma/fluid_source.c and model/fluid/_Favre-Reynolds_plasma/fluid_source.c
    - in find_dSemfield_dU(), changed spec loops from 1..ns to 1..ncs where  


2020 JUN 24a
  * moved
    - _Cs_Air_Plasma to _Cs_Air_Plasma_13s_Lenard
  * in model/chem/_Cs_Air_Plasma_13s_Lenard/chem.c
    - added most of the chemical reactions (except for townsend ionization of NO+)
  * in model/chem
    - added _CO2_Plasma_23s_Park (with the templates taken from _Cs_Air_Plasma_13s_Lenard)
  * in model/share/chem_share.c
    - fixed units of kf (error was within comments, does not affect the code)
    - added _kf_Arrhenius()
    - added _dkfdT_Arrhenius()
  * in model/share/chem_share.h
    - added comments for the units of the various parameters 
  * in model/thermo/_generic/thermo.c
    - added 10 new species for the Mars atmosphere (Aaron Trinh)
    

2020 JUN 21a
  * in model/chem
    - added _Cs_Air_Plasma
  * in src/post.c
    - in read_post_actions(), added code to get rid of memory check error reports but
      kept the code commented out (not yet tested sufficiently)
  * renamed
    - _CHEM_SET_TE_TO_T_FOR_ARRHENIUS_REACTIONS to _CHEM_SET_TE_TO_T_FOR_FWBW_REACTIONS
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/doc/report.tex
    - renamed \rightarrow to \rightleftarrows within the Dunn-Kang reactions
  * in model/thermo/_generic/thermo.c
    - added species Cs and Cs+ 
    - in _dmukN_dTk_from_Tk_EkoverN(), added code for N+, O+, O-, H2+, Cs+
    - in _dmukN_dTk_from_Tk_EkoverN(), added error check if dmukN_dTk can't be found for charged
      species requested
    - in _muk_from_N_Tk_Ek(), added code for Cs+ and O- and changed code for N+, O+
  * in src/control.c
    - in write_license(), updated Copyright years for Bernard Parent and Prasanna Rajendran
      

2020 JUN 09a
  * in lib/soap/doc/report.tex
    - added function spline
  * in lib/soap/soap.c
    - in functions_builtin(), added function spline
    

2020 JUN 08a
  * in cycle/resconv/_MUSCL/resconv.c
    - changed defaults for EIGENVALCOND to PARENT and for POSFILTER to PARENT
  * renamed
    - add_to_W_Arrhenius* -> add_to_W_fwbw*
    - add_to_dW_Arrhenius* -> add_to_dW_fwbw*
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/doc/report.tex
    - Changed the title of the Macheret reactions table
  * in model/chem/.config
    - made Air_Plasma_12s_42r_Dunn-Kang-Macheret non-proprietary
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c
    - changed license to BSD2
    

2020 MAY 16a
  * in model/chem/doc/report.tex
    - got rid of future work and made minor modifications


2020 FEB 19a
  * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
    and in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c    
    - took away clipping of temperature (reactions used to be turned off for T<500~K)
    - added if conditions for all reactions 
    

2020 FEB 17a
  * in model/share/chem_share.c
    - in add_to_dW_Arrhenius_*(), changed last parameter from dWdX to dWdrhok and made
      changes to functions in consequence
  * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c, model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c
    model/chem/_C12H23_Air_16s_23r_Kundu/chem.c, model/chem/_C3H8_Air_16s_23r_Kundu/chem.c,
    model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/chem.c,
    changed calls to add_to_dW_Arrhenius_*()
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c, regrouped all chemical reactions
    within one function (used to be split in two functions:  Macheret and Dunn-Kang functions)
  

2020 FEB 16c
  * renamed 
    - add_to_W_Arrhenius2r2p -> add_to_W_Arrhenius_2r2p
    - add_to_W_Arrhenius3r2p -> add_to_W_Arrhenius_3r2p
    - add_to_W_Arrhenius2r1p -> add_to_W_Arrhenius_2r1p
    - add_to_W_Arrhenius2r3p -> add_to_W_Arrhenius_2r3p
    - add_to_dW_Arrhenius2r2p -> add_to_dW_Arrhenius_2r2p
    - add_to_dW_Arrhenius3r2p -> add_to_dW_Arrhenius_3r2p
    - add_to_dW_Arrhenius2r1p -> add_to_dW_Arrhenius_2r1p
    - add_to_dW_Arrhenius3r2p -> add_to_dW_Arrhenius_3r2p
    - add_to_dW_Arrhenius2r1p -> add_to_dW_Arrhenius_2r1p
    - add_to_dW_Arrhenius2r3p -> add_to_dW_Arrhenius_2r3p


2020 FEB 16b
  * renamed in all files gmol for mole
  

2020 FEB 16a
  * in bin
    - updated Starikovskii.wrp, propane_blunt.wrp, propane_wedge.wrp, reentry.wrp
  * in model/share/chem_share.c
    - added functions add_to_W_3r3p(), add_to_dW_3r3p(), add_to_dW_3r2p()
    - in add_to_dW_Arrhenius2r2p(), add_to_dW_Arrhenius3r2p(), add_to_dW_Arrhenius2r1p(),
      add_to_dW_Arrhenius2r3p(), changed the units of dWdX to kg  s^(-1)  mole^(-1) 
  * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c, model/chem/_C12H23_Air_16s_23r_Kundu/chem.c
    model/chem/_C3H8_Air_16s_23r_Kundu/chem.c,
    model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/chem.c
    adjusted the calls to add_to_dW_Arrhenius to take into account the new units
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c
    - Rewrote all the Macheret reactions in terms of the newly added functions add_to_dW* and
      add_to_W* within model/share/chem_share.c
       
    
2020 FEB 08a
  * in find_NODEVALID_on_domain_all()
    - added some MPI_Barrier(); in the ijk loop to prevent MPI hang on large data sets
  * in read_data_file_binary_ascii()
    - added some MPI_Barrier(); in the ijk loop before MPI_Bcast_Node()
      to prevent MPI hang on large data sets
  

2020 JAN 22a
  * in cycle/share/tsemf_share.c
    - in update_dUstar_emfield_SOR_forward(), and update_dUstar_emfield_SOR_backward(),
      added MPI_Barrier() just before free(buffer). This prevents some occasional slowdown
      problem.
       

2020 JAN 19b
  * in src/control.c
    - in find_metrics_on_all_nodes(), increased the zone size by 1 in all directions
      (needed when using the electron energy transport equation and MPI)
  * in bin
    - renamed ns_SDBD.wrp to Starikovskii.wrp (and upgraded the control file)
    
 
2020 JAN 19a
  * in bin
    - updated 3DDBD_actuator.wrp
  * in model/fluid/_*_plasma/fluid_bdry.c
    - in update_bdry_wall(), removed the line which set the electron temperature at the wall at least
      as high as the wall temperature
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se(), reverted to the standard way of determining the electron temperature 
      source terms (as in the doc model/fluid/doc/Transport_Equations
      

2020 JAN 04a
  * in model/fluid/_Navier-Stokes_plasma/fluid.c, model/fluid/_Navier-Stokes_plasma/fluid.h,
    model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - added code needed for TEMODEL_EQUILIBRIUM
    

2020 JAN 01a
  * in model/emfield/_Epotential/emfield.c
    - in find_post_variable_value_emfield(), fixed a problem related to not finding Ve 
      at the near boundary nodes
    

2019 DEC 29a
  * in model/emfield/_Epotential/emfield.c
    - in find_post_variable_value_emfield(), replaced find_Vk() by ind_Vk_from_Vk_at_interfaces()
  * in model/fluid/_Navier-Stokes/fluid_post.c
    - added kappa to post variables
  * in model/fluid/_Navier-Stokes/fluid.hh
    - increased totalpostvarfluid to (7+nd+ns)
  * in model/share/emfield_share.c
    - added find_Vk_from_Vk_at_interfaces() and find_Jk_from_Jk_at_interfaces()
    

2019 DEC 27b
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se(), changed the electron energy source term back to to 19dec18a version 


2019 DEC 27a
  * in model/fluid/_*_plasma/fluid_bdry.c
    - in update_bdry_wall(), added a clipping to ensure that the electron temperature at the wall
      never falls below the wall temperature
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Se(), changed the electron energy source term to E dot Je for testing 
       

2019 DEC 24a
  * in bin/thermal_sheath.wrp
    - added clipping of Te within Cycle() module in the early stages of convergence
  * renamed model/chem/_Air_Plasma_12s_59r_Dunn-Kang-Macheret to 
    model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret/chem.c
    - got rid of redundant reactions
  * in model/chem/_Air_Plasma_12s_42r_Dunn-Kang-Macheret
    - added doc
    

2019 DEC 18a
  * in cycle/*/cycle.c
    - in runtime_actions_cycle_specific(), added gl->PRECONDITIONER!=PRECON_LOCALTIMESTEP2
  * in cycle/share/cycle_share.c
    - in add_constants_to_codex(), added PRECON_LOCALTIMESTEP2
    - added find_Delta_Lambda_for_dtau_local()
    - in find_dtau(), renamed find_Delta_Lambda_for_dtau() for find_Delta_Lambda_for_dtau_local()
  * in model/share/fluid_share.c
    - in find_Gamma(), added PRECON_LOCALTIMESTEP2
  * in bin/thermal_sheath.wrp
    - made modifications -> now can use CFL of 1 till Mach 25 when a sheath exists (the CFL used
      to be restricted to 0.01 or less when the Mach number was more than 16 and a sheath was 
      present)
      

2019 DEC 09a
  * in src/data.c
    - in find_interpolation_weight(), made changes to how thisweight is computed (now
      avoids a situation where a interpolated node could be given no value)
      

2019 DEC 06a
  * renamed filter_Fstar_interface_positivity_preserving() 
    to filter_Fstar_interface_positivity_preserving_PARENT()
  * in cycle/resconv/_MUSCL/resconv.c
    - added POSFILTER_TEST
  * in cycle/share/res_share.c
    - added filter_Fstar_interface_positivity_preserving_TEST()
  * in bin
    - added qmag.eqn
    - modified thermal_sheath.wrp
  * in tools
    - added thermionic.c
    - added soap.c
  * in lib/exm/exm.c
    - added function process_flag_double()
        

2019 NOV 28a
  * in model/fluid/_*_plasma/fluid_source.c 
    - in function find_Se(), changed S[fluxee] so that it is not function of the electron
      pressure gradient 
  * in model/fluid/doc/Transport_Equations/report.tex
    - in the section "Electron Energy Loss Function" added text explaining why it may be
      preferable to replace E dot Je by mue*Ne*|Ce|*E^2 in the electron energy transport
      equation
    

2019 NOV 22a
  * in model/fluid/_Navier-Stokes_plasma/fluid_post.c
    - added kappa, kappae, kappav to the post variables
  * in bin
    - rename reentry_sheath.wrp to thermal_sheath.wrp and made changes to the control file
  * in model/fluid/doc/Favre_Averaging/report.tex
    - made a change to the section Crocco's theorem
    

2019 OCT 09b
  * in model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/Makefile
    - added call to ( cd doc ; make clean )
  

2019 OCT 09a
  * in model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret
    - added doc/
  * in bin
    - modified plasma_arc.wrp
    - modified plasma_combustion_mixing.wrp
  * in model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/chem.c
    - added find_W_Mendez
    - added find_dW_dx_Mendez
  * in model/share/chem_share.c
    - added add_to_W_2r2p(), add_to_W_2r1p(), add_to_W_2r3p(), add_to_W_3r2p()
    - added add_to_dW_2r1p(), add_to_dW_2r2p(), add_to_dW_2r3p()
  * in model/thermo/_generic/thermo.c
    - in find_Te_from_EoverN(), added linear extrapolation of Te beyond Te=60000K
    - in find_dTe_dEoverN_from_EoverN(), added linear extrapolation of Te beyond Te=60000K
    

2019 OCT 02a
  * in bin/reentry_sheath.wrp
    - made changes
  * in cycle/resconv/_FVS+/resconv.c, cycle/resconv/_FVS/resconv.c, cycle/share/res_share.c, src/bdry.c
    - renamed abs() to labs()
  * in src/common.c
    - in find_subzones_in_zone_given_numsubzone(), fixed bug: fabs() should be labs()
  * in model/fluid/*/fluid_post.c
    - renamed finite() to isfinite() 
    
    
2019 SEP 29a
  * in bin/plasma_arc.wrp
    - made modifications
  * in cycle/restime/_CDF+/restime.c
    - commented assert(LambdaZ[flux][flux]>=0.0); within find_Lambdaxt()
  * in model/chem/_H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret/chem.c
    - added T_MIN_MACHERET, T_MIN_DUNN_KANG, T_MIN_JACHIMOWSKI
    - in find_W(), fixed bug: Dunn Kang reactions were not added properly
  * in model/fluid/_Favre-Reynolds_plasma/fluid.c and model/fluid/_Navier-Stokes_plasma/fluid.c
    - changed wimax and wemax to 1
  * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c 
    and model/fluid/_Navier-Stokes_plasma/fluid_source.c
    - in find_Semfield(), now takes the minmod between _E_dot_J_recast() and _E_dot_J()
    - added _Tchem(), the temperature used to determine chemical reactions
      which is set to _T() as before 
    - in find_Schem() and find_dSchem_dU(), now calls _Tchem() instead of _T()
    - in find_dSchem_dU(), implemented isfinite check
  * in model/share/fluid_share.c
    - in write_disc_fluid_template(), changed the default for zetaA2 from 0.3 to 0.2
  * in model/thermo/_generic/thermo.c
    - defined MAX_T_FOR_NUK_ETA_KAPPA_POLYNOMIALS 12000.0
    - added H2+ species
    - in find_default_init_number_density_string(), and 
      find_default_init_number_density_fraction_string( changed the default molar fraction for
      N2:O2 to 0.79:0.21 from 0.75:0.25
    - in _Omega22() and _Omega11(), added checks when NDEBUG is not defined
    - in find_nuk_eta_kappa(), implement limit of temperature set to     
      MAX_T_FOR_NUK_ETA_KAPPA_POLYNOMIALS


2019 SEP 24a
  * moved model/emfield/doc to model/emfield/doc/Epotential
  * created model/emfield/doc/RHT 
    - based on document on Radiation Heat Transfer by Vasilis Tsakagiannis on overleaf
  * in bin
    - added DBD_actuator_3.wrp (from Van Tien Nguyen)
    - added plasma_arc.wrp (arc filament in stagnant air)
    - updated plasma_combustion_mixing.wrp
  * in model/chem/
    - added _H2_Air_Plasma_18s_78r_Jachimowsky-Dunn-Kang-Macheret
    

2019 SEP 20a
  * in bin/plasma_combustion_mixing.wrp
    - updated the control file.
  * in src/bdry.c
    - in _bdry_ID(), changed sprintf(ID,"%ld",nodetype); to sprintf(ID,"%d",(int)nodetype);
      to get rid of compilation error


2019 SEP 14a
  * in bin
    - added DBD_actuator_2.wrp, plasma_combustion_mixing.wrp
    - altered DBD_actuator.wrp, plasma_assisted_combustion.wrp
  * in model/fluid/doc/*/Makefile
    - changed "dvips -t a4" to "dvips"


2019 SEP 08b
  * in src/control.c
    - in write_license(), changed the proprietary clause 3 (displayed with -l flag)


2019 SEP 08a
  * in model/emfield/_Epotential*/emfield.c
    - in _xi_emfield(), fixed a bug: the fabs() should be used over all terms, not just the residual
  * in bin
    - added wedge_sheath.wrp
    - modified jachimowski_wedge.wrp
    - modified reentry_sheath.wrp


2019 AUG 28a
  * in config/config.c
    - in output_makefileheader(), commented out the passing of the hostname and username 
      (leads to problems on some machines)


2019 JUL 23a
  * in tools/average.c
    - Fixed a bug where the program exited without deleting the temporarily generated files when it 
      encountered files with different number of rows/columns


2019 JUL 09a
  * in bin
    - updated Keller-Kloker.wrp
    - updated ns_SDBD.wrp


2019 JUL 02a
  * in tools
    - renamed tarwarp.sh to tarCFDWARP.sh
  * in tarCFDWARP.sh
    - replaced all instances of warp by CFDWARP   


2019 JUN 08b
  * in CONTRIB
    - updated the contributions


2019 JUN 08a
  * in CONTRIB
    - updated the contributions 
  * in cycle/share/cycle_share.c, lib/exm/exm.c, model/chem/_H2_Air_9s_20r_Jachimowsky/chem.c,
    model/share/fluid_share.c, model/thermo/_generic/thermo.c, src/common.c, src/main.c, src/post.c
    - updated Copyright notices
  * in model/chem/old/_kerosene19s24r/chem.c, model/chem/old/_lutz/chem.c, 
    model/chem/old/_singh/chem.c
    - added Copyright notice


2019 JUN 07a
  * in model/emfield/_Epotential*/emfield.c
    - got rid of UNSTEADYTERMS
  * in model/emfield/_emfield.h
    - added _phim1()
  * in model/share/emfield_share.c
    - fixed a bug: got rid of UNSTEADYTERMS as this wasn't set to TRUE as in emfield.c 


2019 MAY 26a
  * renamed
    - for_zone_ijk -> for_ijk
    - for_zone_kji -> for_kji
    - for_zone_kij -> for_kij
    - for_zone_jik -> for_jik


2019 MAY 25d
  * in README and USAGE
    - further changes


2019 MAY 25c
  * in README
    - further changes
    

2019 MAY 25b
  * in README
    - added description of the code and unique capabilities
  * in tools/indentwithwarpstyle.sh, made adjustment to the indent flags
  

2019 MAY 25a
  * renamed
    - for1DL -> for_1DL
    - for2DL -> for_2DL
    - for3DL -> for_3DL
  * in src/common.h
    - changed the macro for for_1DL, for_2DL, for_3DL: now, they should be accompanied
      by { and } and not by end1DL, end2DL, end3DL
  * in src/common.h
    - changed the macro for for_zone_*(): now sets k the ks in _2DL, and j to js in
      _1DL (were previously set to 0). This is important for the MPI subdomain 
      creation
  

2019 MAY 24a
  * in src/common.h
    - added macros for_zone_ijk(), for_zone_jik(), for_zone_kij(), for_zone_kji()
  * in various .c files
    - replaced for1DL() for2DL() for3DL() loops by a single for_zone_*() loop


2019 MAY 23b
  * in bin
    - updated ns_SDBD.wrp
  * in config/config.c
    - changed MAX_LINE_WIDTH from 90 to 70


2019 MAY 23a
  * in model/emfield
    - renamed _Ohm to _Epotential
    - renamed _Ohm_Generalized to _Epotential-Bfixed
  * in *.wrp files
    - renamed "Ohm(" to "Epotential("
    - renamed "OhmGeneralized(" to "EpotentialBfixed("
  * renamed
    - _EMFIELD_OHMGENERALIZED  to _EMFIELD_EPOTENTIAL_BFIXED
    - _EMFIELD_OHM  to _EMFIELD_EPOTENTIAL
    

2019 MAY 22b
  * in COMPILE and CONTRIB
    - small changes


2019 MAY 22a
  * in model/share/emfield_share.c
    - commented out all functions unless EMFIELD is defined
  * in CHANGELOG, COMPILE, CONTRIB, README, USAGE, and tools/README
    - improved the layout and the text
 

2019 MAY 21a
  * in model/beam/_ebeam_algebraic/beam.c
    - added some missing includes (emfield_share.h and fluid_share.h)
  * in model/emfield/_Ohm/emfield.c and model/emfield/_Ohm_generalized/emfield.c
    - moved various functions that were present in both modules to model/share/emfield_share.c
  * in model/share/emfield_share.c
    - added various functions common to both model/emfield/_Ohm/emfield.c and 
      model/emfield/_Ohm_generalized/emfield.c
  * in model/fluid/_*_plasma/fluid_plasma.c and model/fluid/_*_plasma/fluid_source.c
    - added #include <model/share/emfield_share.h>
  * in model/fluid/_drift-diffusion/fluid.c
    - added #include <model/share/emfield_share.h>
  * in model/share/fluid_share.c
    - in find_alpha(), fixed a bug when asserts are turned on: _betaa() was missing the *gl parameter


2019 MAY 20a
  * in bin
    - added Sedov_exact.txt
    - modified Sedov.wrp


2019 MAY 19a
  * in model/emfield/_Ohm*/emfield.c
    - added code for Gauss-Based potential in find_Sstar_emfield(), 
      find_linearization_coefficients_inner_node_emfield(), find_Fstar_interface_emfield(),
      write_disc_emfield_template(), read_disc_emfield_actions()
  * in model/emfield/_Ohm*/emfield.hh
    - added POTENTIAL to gl_model_emfield_t
  * in model/emfield/doc/report.tex
    - added section "Potential Equation Based on Gauss's Law"
  * in model/fluid/_*_plasma/fluid.hh and model/fluid/_drift-diffusion/fluid.hh
    - added betaa,betag to gl_model_fluid_t
  * in model/share/fluid_share.c
    - renamed _betag to _betag_default
    - renamed _betaa to _betaa_default
    - in write_disc_fluid_template(), added initialization of betaa and betag
    - in read_disc_fluid_actions(), added reading of betaa and betag from control file
    - rewrote _betaa() and _betag() so that they return the value specified in the control file


2019 MAY 18a
  * in tools/gitnewversion_public.sh
    - added code to replace proprietary files by their *_PUBLIC counterpart


2019 MAY 17b
  * in bin
    - modified Sedov.wrp
    - removed flat_2.wrp, flat_3.wrp


2019 MAY 17a
  * in tools/README
    - added information on how to compile the tools
  * in model/share
    - added emfield_share.c


2019 MAY 16c
  * in cycle/resconv/doc/report.tex
    - fixed mistake in WENO3 outline related to the optimal weights


2019 MAY 16b
  * in cycle/share/res_share.c
    - in _f_WENO3(), fixed an error related to the optimal weights: should be 1/4 and 3/4,
      not 1/3 and 2/3


2019 MAY 16a
  * in bin
    - updated Sedov.wrp and Noh2D.wrp


2019 MAY 15a
  * in src/control.c
    - in write_license(), changed how the copyrights are written
  * in lib/gridg/3Dbase.c and lib/gridg/2Dbase.c
    - added a Copyright to Derrick C. Alexander


2019 MAY 14c
  * in tools/gitnewversion_public.sh
    - replaced warp_public by CFDWARP_public


2019 MAY 14b
  * in bin
    - Updated Noh2D.wrp
  * in cycle/resconv/_MUSCL/resconv.c
    - added TVD2_MINMOD2 interpolation


2019 MAY 14a
  * renamed
    - maxlinewidth -> MAX_LINE_WIDTH
  * in config/config.c
    - added definition of MAX_LINE_WIDTH
    - in handle_options(), made word wrapping function of MAX_LINE_WIDTH
    - in output_makefileheader(), added -DPROPRIETARY flag if code compiled with proprietary modules
  * in src/control.c
    - in write_license(), added all contributors to the Copyright 
    - in write_license(), added 3rd condition if PROPRIETARY flag is set 
  * in src/main.c
    - renamed maxstrlen to MAX_STRING_LENGTH 
    - renamed lengthcol1 to LENGTH_COL1 
    - renamed lengthcol2 to LENGTH_COL2 
    - defined MIN_LINE_WIDTH
    - in write_options(), renamed minlinewidth to MIN_LINE_WIDTH


2019 MAY 09b
  * in bin
    - updated stationary_contact_discontinuity.wrp


2019 MAY 09a
  * in tools/*.sh
    - made the license easier to read by word wrapping on the 90th column
  * in various *.c files
    - renamed "(c) Copyright" to "Copyright"
 

2019 MAY 08a
  * in src/bdry.c
    - in read_bdry_actions(), added a free of bdryparam to get rid of memory leak  (Minindu)
  * in src/common.c
    - in create_node(), added initialization of np->bdryparam and np->linkarray to NULL (Minindu)
    - in dispose_node(), added free of np->linkarray and np->bdryparam to get rid of memory leak 
      (Minindu)


2019 MAY 04c
  * in bin/Keller-Kloker.wrp
    - increased the mesh density in heat addition zone and in transition zone
  * in cycle/share/cycle_share.c
    - in read_cycle() added a fatal_error if runtime module is not found 
  * in src/bdry.c
    - in read_bdry_actions(), now only Unlinks a node if it is a boundary node (when using the
      action Unlink)


2019 MAY 04b
  * in tools/replace.sh
    - added the escaping of '(' and ')' for the mode perl

  
2019 MAY 04a
  * in *.c files
    - within the license inserted word wraps at the 90th column for better readability


2019 MAY 03c
  * in tools/replace.sh
    - added the mode pureperl which permits the search and replace of end of line characters


2019 MAY 03b
  * in LICENSES/CFDWARP-Proprietary
    - minor change 


2019 MAY 03a
  * in LICENSES/CFDWARP-Proprietary
    - applied word wrapping at the 90th column for better readability
  * in various proprietary C files
    - applied word wrapping in CFDWARP-Proprietary license


2019 MAY 02c
  * in README
    - removed statement about LICENSE
  * in lib/latex/
    - updated the warplogo.xvf and all export files


2019 MAY 02b
  * replaced in all *.wrp files
    - 'A CFD Code for Plasma' -> ' CFD Code for Plasma' 
  * in src/control.c
    - in write_modules(), replaced 'A CFD Code for Plasma' for ' CFD Code for Plasma' 
  * in README
    - replaced 'A CFD Code for Plasma' for ' CFD Code for Plasma'
  * in cycle/resconv/_MUSCL/resconv.c
    - in write_disc_resconv_template(), changed the default INTERPOL from AOWENO7 to TVD2_VANLEER


2019 MAY 02a
  * created directory LICENSES
  * deleted LICENSE
  * in LICENSES added 
    - CFDWARP-Proprietary
    - BSD-2-Clause
  * in all .c and .h files
    - added either the BSD-2-Clause or the CFDWARP-Proprietary license 
  * in tools
    - removed test.c


2019 APR 29a
  * in bin
    - updated ns_SDBD.wrp


2019 APR 25a
  * in bin
    - got rid of FACEINTEG=FACEINTEG_CENTRAL1; within MUSCL() module
  * in USAGE
    - added post.02 after -opm flag 


2019 APR 20a
​  * in src/common.h
​    - in struct() gl_t, declared char *post_filename (VanTien)
​  * in src/main.c
​    - in write_options_row(), for the "-opm" flag, changed "none" to "string" (VanTien)
​    - in main(), added gl.post_filename = NULL; in if() statement for the "-opm" flag: changed to 
      process_flag_string and added &gl.post_filename; added free(gl.post_filename) (VanTien)
​  * in src/post.c
​    - in read_post_actions(), added add_string_to_codex() to read the string postfilename in the Post 
      module as the variable gl.post_filename (VanTien)
    - in write_post_template(), replaced printf by fprintf with postfilename (VanTien)


2019 APR 19b
  * in tools/average.c
    - fixed memory read bug (Prasanna)


2019 APR 19a
  * in cycle/resconv/
    - moved _MUSCL_old to _MUSCLX
    - deleted _MUSCL_test
  * in cycle/resconv/_MUSCL/resconv.c
    - got rid of FACEINTEG
    - got rid of find_musclvarscycle_offset_local()


2019 APR 18a
  * renamed
    - Res_trapezoidal_m1 -> trapezoidalm1
    - Res_trapezoidal -> trapezoidalm1_next


2019 APR 17a
  * in bin
    - reverted combustion_vacuum.wrp setup to how it was before 19feb16a (setup was changed since
      then erroneously)


2019 APR 14a
  * in cycle/restime/_Trapezoidal/restime.c
    - in add_Z_dUstar_residual(), took away dependence of the residual on 
      gl->cycle.restime.weightm1_trapezoidal_default
  * in cycle/share/ts_share.c
    - in add_Z_dUstardt_dUstar_to_TDMA(), took away dependence of the residual on 
      gl->cycle.restime.weightm1_trapezoidal_default
  * in cycle/resconv/_none/resconv.hh
    - took away definition of CONVJACOBIAN (not needed anymore)
  * in bin
    - updated discharge.wrp


2019 APR 13b
  * in cycle/res/_generic/res.c
    - in add_dDstarU_residual(), fixed typo: double weightm1 should be double weightp0
  * in bin
    - updated ns_SDBD.wrp 


2019 APR 13a
  * in tools/average.c
    - implemented error messages if filenames given on the command line are too long (Prasanna)
  * in bin
    - updated Noh2D.wrp


2019 APR 12a
  * in cycle/res/_generic/res.c
    - in add_dKstar_dG_residual(), add_dDstarU_residual(), add_Ystar_dH_residual(), got rid
      of arguments fact and fact_trapezoidal and rather made residual addition function of 
      gl->cycle.restime.weightm1_trapezoidal_default
    - in update_residual(), got rid of fact and fact_trapezoidal 
  * in cycle/resconv/_*/resconv.c
    - in add_dFstar_residual(), got rid of arguments fact and fact_trapezoidal and rather made 
      residual addition function of gl->cycle.restime.weightm1_trapezoidal_convection
  * in cycle/ressource/_*/ressource.c
    - in add_Sstar_residual() got rid of arguments fact and fact_trapezoidal and rather made 
      residual addition function of gl->cycle.restime.weightm1_trapezoidal_default
  * in cycle/restime/_*/restime.c
    - in add_Z_dUstar_residual(), got rid of arguments fact and fact_trapezoidal 
  * in cycle/restime/_Trapezoidal/restime.c
    - in write_disc_restime_template(), added Trapezoidal() module
    - in read_disc_restime_actions(), added read of weightm1 and weightp0
    - in add_Z_dUstar_residual(), improved residual contributions and made them function 
      of gl->cycle.restime.weightm1_trapezoidal_default
  * in cycle/share/ts_share.c
    - in add_Z_dUstardt_dUstar_to_TDMA(), improved linearization and made it function of
      gl->cycle.restime.weightm1_trapezoidal_default
    - in find_TDMA_jacobians_conservative(), and add_TDMA_jacobians_non_conservative()
      and add_TDMA_jacobian_diagonally_dominant() made fact function of 
      gl->cycle.restime.weightm1_trapezoidal_default
      and gl->cycle.restime.weightm1_trapezoidal_convection
  * in src/init.c
    - in read_init_actions(), fixed a bug: find_musclvars() should only be called for valid nodes


2019 APR 09b
  * in tools
    - added average.c (Prasanna)
    - updated README
  * in CONTRIB
    - added average.c to Prasanna's contributions


2019 APR 09a
  * in cycle/res/_generic/res.c and cycle/resconv/*/resconv.c and cycle/resssource/*/ressource.c  
    - replaced _RESTIME_STORAGE_TRAPEZOIDAL by _RESTIME_STORAGE_TRAPEZOIDAL_RESIDUAL in various
      locations
  * in cycle/resconv/_MUSCL/resconv.c
    - added find_Fstar_interface_trapezoidal()
    - changed flux_t musclvars* to musclvarscycle_t musclvars*
    - in find_musclvars_offset_local(), changed nf to nmc in some loops related to musclvars
    - in add_dFstar_residual(), changed nf to nmc in some loops related to musclvars
    - in add_dFstar_residual() now calls find_Fstar_interface_trapezoidal
  * in cycle/resconv/_MUSCL/resconv.c
    - changed flux_t musclvars* to musclvarscycle_t musclvars*
  * renamed
    - find_musclvars_offset() to find_musclvarscycle_offset()
    - find_musclvars_offset_local() to find_musclvarscycle_offset_local()
  * in cycle/restime/_BDF/restime.c and cycle/restime/_CDF+/restime.c
    - deleted code related to TRAPEZOIDAL method
  * in cycle/restime/_Trapezoidal/restime.hh
    - added #define _RESTIME_STORAGE_TRAPEZOIDAL_RESIDUAL
  * in cycle/share/cycle_share.c
    - added find_musclvarscycle()
    - made numfluidvars and numlinkvars function of nmc
    - in update_linked_nodes(), changed flux_t musclvars to musclvarscycle_t musclvars
    - in update_linked_nodes(), calls find_musclvarscycle() instead of find_musclvars()
    - in update_linked_nodes(), changed nf to nmc where appropriate
    - in increase_time_level(), added call to find_musclvars() when _RESTIME_STORAGE_TRAPEZOIDAL_MUSCLVARS 
      is defined
  * in cycle/share/cycle_share.h
    - added definitions of nmc and of musclvarscycle_t
  * in cycle/share/res_share.c
    - in find_musclvarscycle_offset(), changed nf to nmc where appropriate
    - now calls find_musclvarscycle() instead of find_musclvars()
  * in src/bdry.c
    - in read_bdry_actions(), changed nf to nmc where appropriate
  * in src/init.c
    - in read_init_actions(), added call to find_musclvars() when _RESTIME_STORAGE_TRAPEZOIDAL_MUSCLVARS
      is defined 
  * in cycle/restime/
    - added _Trapezoidal+


2019 APR 02b
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Pascal(), reverted the conditioning to exactly how it is 
      specified in Parent JCP 2018 paper. I.e., some small amount of conditioning takes place
      when (Pmax-Pmin)/Pmin<0.3
 

2019 APR 02a
  * in bin
    - added eps0_divE.eqn
    - updated ns_SDBD.wrp
  * in model/fluid/_drift-diffusion/fluid.c and model/fluid/*plasma/fluid_source.c
    - in find_dSstar_dUstar(), got rid of the variable declaration spec (not needed anymore)


2019 MAR 31b
  * in bin
    - updated reentry_sheath.wrp


2019 MAR 31a
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Parent(), made an alteration to the Steger-Warming blending: 
      now, does not include the charged species mass conservation equations solved with the 
      drift-diffusion model in finding factcommon
 

2019 MAR 30a
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Parent(), implemented new eigenvalue conditioning (function of 
      zetaA2) that blends the Steger-Warming eigenvalues with those of the positivity-preserving 
      filter such that the resulting eigenvalues remain within the 1/zetaA2 of the spectral radius 
      (works much better than previous approach of simply clipping the wave speeds for shocks of 
      infinite strength)
     

2019 MAR 29a
  * in cycle/share/ts_share.c
    - in add_dSstar_dUstar_to_TDMA(), removed the code that prevented dStardUstar[row][row] 
      from being positive
    - deleted add_dSstar_dUstar_to_TDMA_test()
  * in model/fluid/*/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
    - in find_dSstar_dUstar(), added code that prevents dStardUstar[row][row] 
      from being positive


2019 MAR 28a
  * in tools/average.sh
    - added error handling of files with different number of columns and rows (Prasanna T.R.)
  * in bin
    - added heatbdry2D.wrp
   

2019 MAR 26b
  * in bin
    - added reentry_cube_sheath.wrp
    - modified reentry_sheath.wrp
  * in lib/soap/doc/report.tex
    - fixed typo "for\_parallel" in verbatim should be "for_parallel" 
  * in src/control.c
    - in longstr_t bib, fixed a spelling mistake in one of the citations
 

2019 MAR 26a
  * in model/emfield/_Ohm/emfield.c
    - deleted  _Qjoulek_interface()
    - added _Nk_max()
    - in find_Vk_from_mu(), now calls _Nk_max()
  * in model/emfield/_Ohm_generalized/emfield.c
    - renamed _Qjoulek to _Qjoulek_old
    - recoded _Qjoulek() 
    - added _Nk_max()
    - in find_Vk_from_mu(), now calls _Nk_max() instead of _Nk_smoothed()
    - in find_DeltaVk_from_mu() now calls _Nk_max() instead of _Nk_smoothed()


2019 MAR 24a
  * in model/emfield/_Ohm/emfield.c
    - renamed _Qjoulek to _Qjoulek_old
    - renamed _Qjoulek_new to _Qjoulek
    - renamed find_Vk_from_mu_old() to find_Vk_from_mu_veryold()
    - renamed find_Vk_from_mu() to find_Vk_from_mu_old()
    - coded new find_Vk_from_mu() 
  * renamed
    - emfieldfact to emfieldworkheatfact
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Semfield(), now calls _E_dot_J() instead of _E_dot_J_recast()


2019 MAR 23a
  * in model/emfield/_Ohm/emfield.c
    - added  _Qjoulek_new()
    - added _Qjoulek_interface()


2019 MAR 22b
  * in tools
    - added average.sh from Prasanna
  * in tools/README
    - added description of average.sh
  * in CONTRIB
    - added contribution by Prasanna


2019 MAR 22a
  * in model/chem/*/chem.c
    - changed #define TOWNSEND_IMPLICIT TRUE to #define TOWNSEND_IMPLICIT FALSE


2019 MAR 19a
  * in model/fluid/_*_plasma/fluid.c
    - in write_model_fluid_template(), added emfieldfact=1.0;
    - in read_model_fluid_actions(), added read of emfieldfact
  * in model/fluid/_*_plasma/fluid.hh
    - in gl_model_fluid_t, added emfieldfact
  * in model/fluid/_*_plasma/fluid_source.c
    - in find_Semfield(), multiplied Femfield, E_dot_J and _zetav_from_Te by emfieldfact


2019 MAR 15a
  * in bin
    - updated reentry.wrp and reentry_sheath.wrp


2019 MAR 14a
  * in lib/exm/exm.c
    - added EXM_invert_matrix_partial_pivoting()
  * in CONTRIB
    - added contributions by Jaehyuk Lee


2019 MAR 11a
  * in bin
    - improved Keller-Kloker.wrp


2019 MAR 09b
  * in bin
    - modified Keller-Kloker.wrp


2019 MAR 09a
  * in bin
    - added Keller-Kloker.wrp


2019 MAR 08b
  * in bin
    - modified carbuncle.wrp and ns_SDBD.wrp


2019 MAR 08a
  * in cycle/resconv/_MUSCL+/resconv.c
    - removed FLUX_FDSplusFilterMultiD in read_disc_resconv_actions(), find_Fstar_interface() 
      (not used anymore; replaced by multidimensonal positivity-preserving eigenvalue conditioning)
  * in cycle/share/res_share.c
    - removed filter_Fstar_interface_positivity_preserving_MultiD()
      (not used anymore; replaced by multidimensonal positivity-preserving eigenvalue conditioning)
  * in model/fluid/_*/fluid_conv.c and model/fluid/_drift-diffusion/fluid.c
    - deleted find_M_from_jacvars(), find_Minv_from_jacvars(), find_MUstar_from_jacvars()
      (not used anymore; replaced by multidimensonal positivity-preserving eigenvalue conditioning)
  * in model/share/fluid_share.c
    - deleted condition_Lambda_plus_minus_Parent_old()
    - deleted condition_Lambda_plus_minus_Parent_veryold()
  * in src/test.c
    - deleted test_MUstar(), test_Minv(), test_M()


2019 MAR 07b
  * renamed
    - SetXstation to XSTATION_Set
    - _Pback_xstation to XSTATION_Pback
    - _Fpot_xstation to XSTATION_Fpot
    - _mdot_xstation to XSTATION_mdot
    - _Pstag_xstation to XSTATION_Pstag
    - _Tstag_xstation to XSTATION_Tstag
    - _Pstar_xstation to XSTATION_Pstar
    - _Pstar_xstation to XSTATION_Pstar
    - _T_xstation to XSTATION_T
    - _q_xstation to XSTATION_q
    - _rho_xstation to XSTATION_rho
    - _htstar_xstation to XSTATION_htstar
  * in tools
    - moved substr.sh to replace.sh
  * in tools/replace.sh
    - changed the flag -sub for -replace
    - renamed stringsub to stringreplace


2019 MAR 07a
  * in model/emfield/_*/emfield.c
    - in write_cycle_emfield_template(), rewrote Uref_emfield[0] to Uref_emfield[1]
    - in read_cycle_emfield_actions(), changed sprintf(tmpstr,"Uref_emfield[%ld]",flux); to 
      sprintf(tmpstr,"Uref_emfield[%ld]",flux+1);
  * in model/fluid/_*/fluid.c
    - in write_cycle_fluid_template(), rewrote Uref[i] to Uref[i+1]
    - in read_cycle_fluid_actions(), changed sprintf(tmpstr,"Uref[%ld]",flux); to 
      sprintf(tmpstr,"Uref[%ld]",flux+1);
  * in model/share/fluid_share.c
    - in find_Gamma(), changed PRECON_LOCALEIGENVALUE2 for PRECON_LOCALEIGENVALUE so that the original
      approach at local eigenvalue conditioning (Parent JCP 2018) is named PRECON_LOCALEIGENVALUE and not 
      PRECON_LOCALEIGENVALUE2
  * in cycle/resconv/_MUSCL/resconv.hh
    - improved the description for _RESCONV_METHOD
  * in bin/*wrp
    - renamed Uref[0] to Uref[1], Uref[1] to Uref[2], etc 
    - renamed Uref_emfield[0] to Uref_emfield[1] 


2019 MAR 05a
  * in model/share/fluid_share.c
    - rewrote condition_Lambda_plus_minus_Parent() as specified in latest COEFF document
      (should give the same results as the previous condition_Lambda_plus_minus_Parent() albeit written
      differently)


2019 MAR 01b
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Parent(), made changes so that the Vs for the mass density
      fluxes are regrouped together before being compared to the Vs for fluxes fluxet-2 and fluxet-3
  

2019 MAR 01a
  * in model/share/fluid_share.c
    - in condition_Lambda_plus_minus_Parent(), improved the algorithm so that only V for fluxes below fluxet-1
      is used to determine Vmin and Vmax
    - deleted functions that are not used anymore:
      o condition_Lambda_plus_minus_Parent_firstpass()
      o condition_Lambda_plus_minus_Parent5()
      o condition_Lambda_plus_minus_Parent4()
      o condition_Lambda_plus_minus_Parent3()
      o condition_Lambda_plus_minus_Parent2()
      o condition_Lambda_plus_minus_Parent1()


2019 FEB 28b
  * in src/test.c
     - in main(), added code to free npArray and its data structure
     - in main(), added calls to free_clipped_variables(), SOAP_free_codex(), free ( npArray ), 
       free ( control_filename ), free ( input.name ), free ( argint ) and free( gl.cycle.code_runtime ) 
       prior to exiting to get rid of memory leaks reports
     - in main(), added calls to dispose_node() for npL and npR to free allocated memory in their old 
       addresses before assigning new addresses
  * in src/post.c  
     - in read_post(), added conditional statement to properly free np_post


2019 FEB 28a
   * in model/share/fluid_share.c
     - rewrote condition_Lambda_plus_minus_Parent() in accordance with the latest positivity-preserving
       theory in multiple dimensions
     - added condition_Lambda_plus_minus_Parent5()


2019 FEB 27c
   * in lib/soap/soap.c
     - in BA_printf(), added a fatal_error if numargum<1
     - in BA_fprintf(), added a fatal_error if numargum<2


2019 FEB 27b
   * in src/post.c
     - commented changes to read_post() done on 19feb27a because such could give a core dump when
       no xcut were performed in the Post() module
   * in src/common.c
     - deleted invert_matrix_new()
     - added invert_matrix_partial_pivoting() by Jaehyuk Lee
     - renamed invert_matrix() to invert_matrix_gaussian_elimination()
     - created invert_matrix() which can call either invert_matrix_partial_pivoting() or 
       invert_matrix_gaussian_elimination()


2019 FEB 27a
   * in src/main.c
     - changed the type of SIGUSR1_CAUGHT from bool to int: a bool type couldn't be passed to MPI_Reduce
       correctly
     - in main(), added code to free nppost and its data structure 
     - in main(), added SOAP_free_codex_copy() for OUTPOSTMODULE 
   * in src/post.c 
     - in read_post(), added code to free np_post and its data structure 
     - in read_post_actions(), added code to free the data structure of np_post 
   * in src/control.c 
     - in *replace_cites, strcpy(newstr,strrep(newstr,orig,repl)) separated into two to avoid buffer overlapping
     - in read_control(), calls SOAP_free_codex() if POSTMODULE is TRUE
   * in USAGE
     - improved instructions for CPU PROFILING
 

2019 FEB 25a
   * in cycle/resconv/_MUSCL/resconv.c
     - in find_musclvars_offset_local(), make code clearer but didn't change functionality


2019 FEB 23a
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c
     - at end of Equation_argum(), added call to SOAP_free_codex_copy() and free(argequation2D.expr)
       to prevent memory leak
   * in lib/soap/soap.c
     - added SOAP_free_codex_copy()
     - in SOAP_process_code(), codex->action_being_processed is now realloced instead of malloced
       to prevent memory leak
   * in src/control.c
     - in readcontrol_actions(), added SOAP_free_codex_copy(&codex_mem); to get rid of memory leaks
     - in read_control(), added calls to SOAP_free_codex and SOAP_free_codex_copy to get rid of 
       memory leaks
   * in src/main.c
     - in main(), added free ( postprocessor ); in various locations prior to exit() to get rid of
       memory leaks
     - in main(), added calls to free_clipped_variables(), SOAP_free_all_vars(), SOAP_free_codex()
       and free( gl.cycle.code_runtime ) prior to exiting to get rid of memory leaks reports


2019 FEB 22b
   * in bin
     - added Taylor-Green.ref
   * in lib/soap/doc/report.tex
     - fixed a LaTeX bug: for_parallel should be for\_parallel


2019 FEB 22a
   * in bin
     - made changes to Titarev-Toro.wrp and to Woodward-Colella_forward_step.wrp


2019 FEB 21b
   * in cycle/share/cycle_share.c
     - added function update_linked_nodes_2() necessary to update the musclvars that are not
       accessed through a dimensionally split stencil (such as the face integration algorithm in
       _MUSCL)
     - in update_linked_nodes(), call update_linked_nodes_2()
     - in update_linked_nodes(), renamed gl->domain to zone.


2019 FEB 21a
   * in cycle/resconv/
     - copied _MUSCL to _MUSCL_test
   * in cycle/resconv/_MUSCL/resconv.c
     - got rid of face integration of F and replaced it with face integration of musclvars
       (face integration of F was problematic because it didn't preserve freestream on non-uniform
        meshes)


2019 FEB 20b
   * in bin
     - updated Noh3D.wrp


2019 FEB 20a
   * in model/share/fluid_share.c
     - added condition_Lambda_plus_minus_Parent4() -> significantly better than previous attempts


2019 FEB 19b
   * in cycle/resconv/_MUSCL/resconv.c
     - in write_disc_resconv_template(), changed the default for FACEINTEG to FACEINTEG_CENTRAL1
   * in model/metrics/_generic/metrics.c
     - added some comments


2019 FEB 19a
   * in model/metrics/_generic/metrics.c
     - added find_point_in_between_8_nodes()
     - renamed find_Omega_and_X_at_interface() to find_Omega_and_X_at_interface_old()
     - in find_Omega_and_X_at_interface(), changed the 3D metrics so that they preserve freestream
       perfectly independently of the skewness of the mesh (needs more testing)


2019 FEB 18a
   * in bin
     - deleted reentry2.wrp
     - deleted reentry3.wrp
     - added reentry_sheath.wrp


2019 FEB 17a
   * in model/metrics/doc/report.tex
     - added section related to new metrics that ensure freestream preservation in 3D


2019 FEB 16a
   * in bin
     - renamed standard test cases to standard names


2019 FEB 14b
   * in bin
     - modified taylor_green_vortex.wrp to latest version
     - renamed taylor_green_vortex.mcr to taylor_green_vortex_2.mcr 
     - renamed taylor_green_vortex.eqn to taylor_green_vortex_2.eqn 
     - added taylor_green_vortex.mcr which is to be used with taylor_green_vortex.wrp
     - added taylor_green_vortex.eqn which is to be used with taylor_green_vortex.wrp


2019 FEB 14a
   * in model/share/fluid_share.c
     - added condition_Lambda_plus_minus_Parent3()


2019 FEB 12a
   * in model/share/fluid_share.c
     - added condition_Lambda_plus_minus_Parent2()


2019 FEB 11a
   * in cycle/resconv/_MUSCL+/resconv.hh and cycle/resconv/_MUSCL/resconv.hh
     - changed PARENT [parent2018a] to PASCAL [parent2018a]
   * in cycle/resconv/_MUSCL/resconv.c
     - added EIGENVALCOND_PARENT
   * in cycle/share/res_share.h
     - added EIGENVALCOND_PARENT
   * in model/share/fluid_share.c
     - renamed condition_Lambda_plus_minus_Parent() to condition_Lambda_plus_minus_Pascal() 
     - added new condition_Lambda_plus_minus_Parent()


2019 FEB 10a
   * renamed
     - EIGENVALCOND_PARENT -> EIGENVALCOND_PASCAL


2019 FEB 08c
   * in bin 
     - added Pstag.eqn
     - improved cylinder_in_freestream.wrp


2019 FEB 08b
   * in bin
     - modified eigenvalue conditioning parameters in carbuncle.wrp, forward_step.wrp, impinge.wrp


2019 FEB 08a
   * in model/thermo/_generic/thermo.c
     - in _dsk_dT_from_T(), now do not output an error if _CHEM_SET_TE_TO_T_FOR_ARRHENIUS_REACTIONS is defined


2019 FEB 07b
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c
     - renamed JoinPlanes to JoinFaces
   * in model/chem
     - added _Air_Plasma_12s_59r_Dunn-Kang-Macheret
   * in model/thermo/_generic/thermo.c
     - in _sk_from_T(), now do not output an error if _CHEM_SET_TE_TO_T_FOR_ARRHENIUS_REACTIONS is defined
     - in _muk_from_N_Tk_Ek(), added mobilities for NO+, N+, O+
   * in model/chem/doc/report.tex
     - fixed a mistake in one reaction for the Dunn-Kang model: NO- should be NO+


2019 FEB 07a
   * in cycle/resconv/_none/resconv.c
     - in read_disc_resconv_actions(), added gl->cycle.resconv.CONVJACOBIAN=CONVJACOBIAN_NONE
   * in cycle/resconv/_none/resconv.hh
     - in gl_cycle_resconv_t added CONVJACOBIAN
   

2019 FEB 06b
   * in cycle/resconv/*/resconv.c
     - in read_disc_resconv_actions(), added initialization of gl->cycle.resconv.CONVJACOBIAN
   * in cycle/resconv/*/resconv.hh
     - deleted #define CONVJACOBIAN CONVJACOBIAN_FDS
     - in gl_cycle_resconv_t added CONVJACOBIAN
   * in cycle/share/res_share.c
     - removed code for CONVJACOBIAN==CONVJACOBIAN_FROMFLUXEIGENVALUES
   * in cycle/share/ts_share.c
     - removed find_dFstar_dUstar_FROMFLUXEIGENVALUES_interface()
     - in add_dFstar_dUstar_to_TDMA() and find_TDMA_jacobians_conservative()
       changed CONVJACOBIAN to gl->cycle.resconv.CONVJACOBIAN
   * in src/common.h
     - removed code for CONVJACOBIAN==CONVJACOBIAN_FROMFLUXEIGENVALUES


2019 FEB 06a
   * in cycle/resconv/_FDS+/*.hh
     - removed #define _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING
   * moved
     - cycle/resconv/_MUSCL to cycle/resconv/_MUSCL_old
     - cycle/resconv/_MUSCL_EXP to cycle/resconv/_MUSCL
   * in cycle/resconv/_MUSCL+/resconv.c
     - got rid of EIGENVALUES_ENFORCED_POSITIVE in calls to find_Fstar_interface_FDSplus_muscl()
       and find_Fstar_interface_FVSplus_muscl()
     - got rid of calls to find_Fstar_interface_FDSplus_muscl() with EIGENVALUES_NOT_ENFORCED_POSITIVE
       (replaced by call to find_Fstar_interface_FDS_muscl() 
     - got rid of calls to find_Fstar_interface_FVSplus_muscl() with EIGENVALUES_NOT_ENFORCED_POSITIVE
       (replaced by call to find_Fstar_interface_FVS_muscl() 
   * in cycle/resconv/_MUSCL/resconv.c
     - added POSFILTER and POSFILTER_numiter
     - got rid of calls to find_Fstar_interface_FDSplus_muscl() with EIGENVALUES_NOT_ENFORCED_POSITIVE
       (replaced by call to find_Fstar_interface_FDS_muscl() 
     - got rid of calls to find_Fstar_interface_FVSplus_muscl() with EIGENVALUES_NOT_ENFORCED_POSITIVE
       (replaced by call to find_Fstar_interface_FVS_muscl() 
     - in integrate_Fstar_interface(), added Parent Positivity-preserving filter
     - in add_dFstar_residual(), added Parent Positivity-preserving filter for FACEINTEG_CENTRAL1
     - in find_Delta_Lambda_for_dtau(), Delta_Lambda[flux]=np[l].bs->Delta_Lambda[theta][flux]; for
       POSFILTER_PARENT
   * in cycle/resconv/_MUSCL/resconv.hh
     - added _RESCONV_MUSCLPLUS, _RESCONV_DELTA_LAMBDA_STORAGE, _RESCONV_POSITIVITY_PRESERVING
     - changed CONVJACOBIAN CONVJACOBIAN_FDS to CONVJACOBIAN CONVJACOBIAN_FVSPLUS
   * in cycle/share/res_share.c
     - in find_Lambda_minus_plus_F*Splus_muscl(), took away EIGENVALUES parameter
     - removed code related to _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING
     - in find_Lambda_minus_plus_F*Splus_muscl(), removed code related to EIGENVALUES_NOT_ENFORCED_POSITIVE
     - in find_Fstar_interface_F*Splus_muscl(),  took away EIGENVALUES parameter
     - added function find_Fstar_interface_FDS_muscl_with_CDF()
     - added function find_Fstar_interface_FVS_muscl_with_CDF()
   * in cycle/share/res_share.h
     - removed EIGENVALUES_NOT_ENFORCED_POSITIVE and EIGENVALUES_ENFORCED_POSITIVE
   * in src/control.c
     - in bib[], added parent2019a conference paper
 

2019 FEB 05a
   * in cycle/resconv
     - added experimental directory _MUSCL_EXP which is a fork of _MUSCL but with the option of
       a positivity-preserving filter


2019 FEB 04a
   * in cycle/resconv/_MUSCL+/resconv.c
     - in find_Fstar_interface(), changed the way the AOWENO7 scheme is discretized near the boundary nodes:
       used to resort to TVD5 but now resort to AOWENO5 and TVD2 Van Leer 
     - in find_Fstar_interface(), changed the way the AOWENO5 scheme is discretized near the boundary nodes:
       used to resort to TVD5 but now resort to TVD2 Van Leer 


2019 FEB 03a
   * in cycle/resconv/_MUSCL+/resconv.c
     - added AOWENO7
   * in cycle/resconv/_MUSCL+/resconv.hh
     - changed hbw_resconv_fluid from 3 to 4
   * in model/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), changed factP=max(0.0,pow(fabs(Pstarmax-Pstarmin)/Pstarmin,1.0));
       to factP=max(0.0,pow(fabs(Pstarmax-Pstarmin)/Pstarmin,1.0)-0.3); to turn off the eigenvalue
       conditioning completely away from shocks (beneficial for ILES with high order schemes)


2019 FEB 02a
   * in cycle/resconv/_MUSCL/resconv.c
     - added FACEINTEG_AOWENO5


2019 FEB 01b
   * in cycle/resconv/_MUSCL/doc/report.tex
     - improved WENO section


2019 FEB 01a
   * in cycle/resconv/_MUSCL/doc/report.tex
     - improved WENO section


2019 JAN 31a
   * in cycle/resconv/_MUSCL/doc/report.tex
     - added WENO section


2019 JAN 28a
   * in cycle/resconv/_MUSCL/resconv.c
     - added FACEINTEG_CENTRAL5


2019 JAN 26a
   * in cycle/resconv/_MUSCL/doc/report.tex
     - added 5th order central integration scheme


2019 JAN 25b
   * in cycle/share/res_share.c
     - substituted eps=1e-49 by eps=WENO_EPSILON in various locations 
     - added definition of WENO_EPSILON at top of file and set it to 1e-18


2019 JAN 25a
   * renamed 
     - FACEINTEG_SECONDORDER to FACEINTEG_CENTRAL3
     - FACEINTEG_FIRSTORDER to FACEINTEG_CENTRAL1


2019 JAN 24b
   * in cycle/res/_generic/res.c
     - in find_residual(), added zoneext 
   * in cycle/resconv/_MUSCL/resconv.c
     - in find_Fstar_interfaces(), only store Fstar at interfaces if FACEINTEG!=FACEINTEG_FIRSTORDER
     - in integrate_Fstar_interface(), made code more efficient
     - in add_dFstar_residual(), added old code for FACEINTEG=FACEINTEG_FIRSTORDER that doesn't use
       the stored Fstar at the interfaces
    


2019 JAN 24a
   * in cycle/res/_generic/res.c
     - in find_residual(), added init_Fstar_interfaces()
   * in cycle/resconv/_MUSCL/resconv.c
     - in write_disc_resconv_template() and read_disc_resconv_actions(), added FACEINTEG
     - in find_Fstar_interface(), changed the AOWENO7 and AOWENO9 boundary conditions (gammalo and gammahi
       are now fixed to 0.95)
     - added find_Fstar_interfaces()
     - added init_Fstar_interfaces()
     - added integrate_Fstar_interface()
     - in add_dFstar_residual(), now call integrate_Fstar_interface() instead of find_Fstar_interface()
   * in cycle/resconv/_MUSCL/
     - added the directory doc
   * in src/common.c
     - in resume_node(), added np->wk->Fp1h=NULL;
   * in src/common.h
     - moved flux_t Fp1h; from npbs_t to npwk_t


2019 JAN 23a
   * in cycle/resconv/_MUSCL2/resconv.c
     - in find_Fstar_interface(), made modifications to AOWENO7 and AOWENO9 fluxes when close to
       boundary: now fix gammalo=gammahi=0.95 for AOWENO when close to bdry node
 

2019 JAN 22a
   * in cycle/resconv/_MUSCL2/resconv.c
     - made modifications


2019 JAN 21b
   * in bin
     - modified cylinder_in_freestream2.wrp, forward_step.wrp, impinge.wrp, titarev_toro.wrp


2019 JAN 21a
   * in bin
     - modified bump.wrp, cylinder_in_freestream2.wrp, hyperbdry.wrp and impinge.wrp


2019 JAN 19a
   * in cycle/resconv/_MUSCL/resconv.c and cycle/resconv/_MUSCL2/resconv.c 
     - in find_Fstar_interface(), changed the algorithm for the boundary condition when using AOWENO9:
       now, use AOWENO7, AOWENO5 instead of only AOWENO5.
   * in cycle/share/res_share.c
     - renamed _f_AOWENO7 to _f_AOWENO7_old
     - renamed _f_AOWENO9 to _f_AOWENO9_old
     - rewrote _f_AOWENO9 so that it switches only between CWENO9 and CWENO3
     - rewrote _f_AOWENO7 so that it switches only between CWENO7 and CWENO3
   * in model/share/fluid_share.c
     - in find_Gamma(), renamed PRECON_LOCALEIGENVALUE2 to PRECON_LOCALEIGENVALUE and vice-versa


2019 JAN 17b
   * in cycle/resconv/_MUSCL2/resconv.c
     - improved integrate_Fstar_interface()


2019 JAN 17a
   * in cycle/res/_generic/res.c
     - in find_residual(), added code specific to _RESCONV_STORAGE_FSTAR
   * in cycle/resconv/_MUSCL2/resconv.c, changed many things
   * in src/common.h
     - in npbs_t, added Fp1h when _RESCONV_STORAGE_FSTAR is defined


2019 JAN 16b
   * in cycle/resconv/_MUSCL2/doc/report.tex
     - made changes


2019 JAN 16a
   * make config
     - updated file config/removeproprietary.sh


2019 JAN 15a
   * in cycle/resconv/
     - added _MUSCL2
   * in lib/latex/warpdoc.cls
     - got rid of mtpro2
   * in lib/latex
     - added eg


2019 JAN 10a
   * in cycle/restime/_CDF+/restime.c
     - in write_disc_restime_template(), changed xi1,xi2,xi3 to xi[1..nf] and set all xi to 0.5
       except for the tke and psi fluxes where xi is set to 0.25 
     - in read_disc_restime_actions(), changed xi1,xi2,xi3 to xi[1..nf]
     - in _psi(), xi is now set to gl->cycle.restime.xi[flux]
   * in cycle/restime/_CDF+/restime.hh
     - changed xi1,xi2,xi3 to xi[nf] within gl_cycle_restime_t


2019 JAN 07a
   * in LICENSE
     - updated year of copyright
   * in README
     - updated year of copyright
   * in src/control.c
     - updated year of copyright
   * in bin
     - added flat_plate_turbulent_unsteady.wrp
   * in cycle/share/cycle_share.h
     - added PRECON_LOCALEIGENVALUE2 (new preconditioner that works better for 2-equation turbulence
       models and nitrogen vibrational energy in non-equilibrium)
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added PRECON_LOCALEIGENVALUE2
   * in cycle/*/cycle.c
     - in runtime_actions_cycle_specific(), added PRECON_LOCALEIGENVALUE2
   * in model/share/fluid_share.c
     - in find_Gamma(), added PRECON_LOCALEIGENVALUE2


2018 DEC 22a
   * in src/control.c
     - renamed _Omega_DISTMPI_compatible to _Omega_DISTMPI_global
     - renamed _x_DISTMPI_compatible to _x_DISTMPI_global
     - added _x_DISTMPI_local()
     - in read_control_functions(), added calls to _x_DISTMPI_local
     - in readcontrol_actions(), added variables domain.* to codex after grid is generated
   * in bin/noh2D.wrp and bin/taylor_green_vortex.wrp and bin/taylor_green_vortex_2.wrp
     - changed control file so that the loops use domain.is, domain.ie, etc


2018 DEC 21a
   * in src/bdry.c
     - in read_bdry_actions() and find_link_direc(), added an extra optional parameter to the Link() 
       command (the direction of the stencil beyond the inner node) 
       -> not needed generally, avoid to use this unless you know what you are doing
   * in src/common.h
     - added the constants LINKDIMSGN_NONE and LINKDIMSGN_BASE
   * in bin
     - updated noh2D.wrp and cylinder_in_freestream.wrp


2018 DEC 12a
   * in bin
     - updated sod.wrp
     - updated sedov.wrp


2018 NOV 29b
   * in bin
     - modified bdrylayer.wrp
     - added bdrylayer_Cf.eqn
     - modified Cf_wall.sty


2018 NOV 29a
   * in cycle/resconv/_MUSCL+/resconv.c
     - in find_Fstar_interface(), fixed a bug related to the arguments passed to
       function find_Fstar_interface_FVS_muscl() when CDF is not defined
   * in bin
     - added noh2D_exact.soap
     - modified noh2D.wrp


2018 NOV 27a
   * in bin/noh2D.wrp
     - made adjustments
   * in cycle/resconv/_MUSCL+/resconv.c
     - added option FVSplusFilter


2018 NOV 24b
   * renamed cycle/resconv/_FVS+Filter to cycle/resconv/_FVS+
   * in cycle/share/res_share.c
     - in filter_Fstar_interface_positivity_preserving_MultiD(), changed initialization of
       Vp0 and Vp1 such that the distribution is symmetric
     - in filter_Fstar_interface_positivity_preserving(), changed initialization of
       Vp0 and Vp1 such that the distribution is symmetric


2018 NOV 24a
   * in bin
     - updated noh2D.wrp, sedov.wrp, riemann.wrp, wavywall.wrp
   * renamed cycle/resconv/_FVS+ to cycle/resconv/_FVSTVD+
   * added cycle/resconv/_FVS+Filter/


2018 NOV 23a
   * in bin
     - updated noh2D.wrp
   * renamed
     - FLUX_FDSplusMultiD -> FLUX_FDSplusFilterMultiD
     - convert_Fstar_interface -> filter_Fstar_interface
   * in cycle/resconv/_MUSCL+/resconv.c
     - added FLUX_FDSplusFilter
   * in cycle/share/res_share.c
     - renamed filter_Fstar_interface_positivity_preserving -> filter_Fstar_interface_positivity_preserving_MultiD
     - added filter_Fstar_interface_positivity_preserving based on L matrix (instead of M) to filter
       the flux


2018 NOV 19a
   * in cycle/resconv/_MUSCL+/resconv.c
     - renamed FLUX_FDSplusgen to FLUX_FDSplusMultiD
   * in bin/*wrp
     - renamed FLUX_FDSplusgen to FLUX_FDSplusMultiD
   

2018 NOV 18b
   * in bin/noh3D.wrp
     - changed aref and zetaA2
   * in bin
     - added noh2D.wrp


2018 NOV 18a
   * in bin
     - updated noh3D.wrp


2018 NOV 13a
   * in bin
     - renamed taylor_green_vortex.wrp to taylor_green_vortex_2.wrp
     - added taylor_green_vortex from Prasanna
     - added noh3D.wrp testcase
   * in CONTRIB
     - added taylor_green_vortex.wrp case by Prasanna
 

2018 NOV 10c
   * in tools/gitnewversion_public.sh
     - fixed a bug with git pull: needed to remove all directories within $warppublic first


2018 NOV 10b
   * in tools/gitnewversion_public.sh
     - fixed a bug with git pull: need to do a git checkout master and git reset --hard first


2018 NOV 10a
   * in bin/ns_SDBD.wrp
     - made modifications


2018 NOV 04a
   * moved model/fluid/doc/Plasma_Model2 to model/fluid/doc/Plasma_Model
   * in model/fluid/doc/Transport_Equations/report.tex
     - made changes to incorporate latest version of the non-stiff plasma model
       (with betag and betaa instead of betaplus and betaminus)
   * in model/thermo/doc/report.tex
     - fixed bug \begin{table*}[|t] should be \begin{table*}[t]


2018 NOV 03a
   * in model/fluid/_drift-diffusion/fluid.c 
     - in find_Dstar(), added electric field term
   * in model/fluid/_*_plasma/fluid_plasma.c
     - in find_Dstar(), added electric field term
   * in model/fluid/doc/Plasma_Model2/report.tex
     - added second possibility for matrix D


2018 NOV 01b
   * renamed 
     - betaminus -> betaa
   * in model/share/fluid_share.c
     - in _betag(), changed the constant for negative ion from -1 to -0.5
     - in _betaa(), set betaa=_betag(k)-_s(k) for the charged species
     - in find_Y1star_at_interface(), added dependence on betag
     - in find_Y2star_at_interface(), added dependence on betaa
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - in find_H1() and find_dH1_dUstar(), removed dependence on betag
     - in find_H2() and find_dH2_dUstar(), removed dependence on betaa
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in find_H1() and find_dH1_dUstar(), removed dependence on betag
     - in find_H2() and find_dH2_dUstar(), removed dependence on betaa
   * in model/fluid/_drift-diffusion/fluid.c
     - in find_H1() and find_dH1_dUstar(), removed dependence on betag
     - in find_H2() and find_dH2_dUstar(), removed dependence on betaa
   * in model/fluid/doc/Plasma_Model2/report.tex
     - made improvements
           

2018 NOV 01a
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - changed call to _betaminus() to call to _betaa()
   * in model/share/fluid_share.c
     - changed call to _betaminus() to call to _betaa()
   * in model/fluid/doc/Plasma_Model2/report.tex
     - made improvements


2018 OCT 30a
   * in model/fluid/doc/Plasma_Model2/report.tex
     - made improvements


2018 OCT 29b
   * in model/fluid/doc/Plasma_Model2/report.tex
     - made improvements


2018 OCT 29a
   * in model/fluid/doc/Plasma_Model2/report.tex
     - made improvements


2018 OCT 28a
   * in model/fluid/doc
     - added Plasma_Model2


2018 OCT 17c
   * in bin
     - added LES_bdrylayer.wrp


2018 OCT 17b
   * updated CHANGELOG


2018 OCT 17a
   * renamed
     - JoinAll -> JoinPlanes
    

2018 OCT 10a
   * in bin
     - improved taylor_green_vortex.wrp
     - added taylor_green_vortex.mcr


2018 OCT 09b
   * in lib/gridg/share.c
     - in GRIDG_fatal_error(), changed the output to stderr instead of stdout
   * in lib/soap/soap.c
     - in SOAP_fatal_error(), changed the output to stderr instead of stdout
     - in SOAP_store_file_as_string(), changed the output to stderr instead of stdout
   * in tools/README
     - added description of integrate.sh


2018 OCT 09a
   * in bin
     - updated ns_SDBD.wrp
   * in model/share/fluid_share.c
     - in _betag(), changed betag from -0.01 to -0.001 for the electrons (better resolution)


2018 OCT 04d
   * in tools/gitnewversion_public.sh
     - fixed a bug


2018 OCT 04c
   * in tools/gitnewversion_public.sh
     - got rid of check of file changes within public warp


2018 OCT 04b
   * in tools/gitnewversion_public.sh
     - fixed a bug: should user refuse to upload changed to warp on public github,
       then need to do a hard reset 
 

2018 OCT 04a
   * in bin/taylor_green_vortex.wrp
     - made small modifications
   * in tools
     - added integrate.sh
   * in bin
     - added taylor_green_vortex_norm.eqn


2018 OCT 03a
   * in bin
     - added taylor_green_vortex.wrp
     - added tke.eqn
     - added tke_average.mcr
   * in model/share/fluid_share.c
     - in _betag(), set betag to 0.01 for electrons 


2018 SEP 18a
   * in model/emfield/_Ohm*/emfield.c
     - in _E_dot_J_recast(), fixed a bug: the type for Vk should be EXM_vec3D_t not dim_t
   * in bin/dischargemagnetic.wrp
     - added DualTimeStepping() and CDFplus()
   * in bin/discharge.wrp
     - changed UpdateEMField() so that it calls TSEMF_SOR 


2018 SEP 16c
   * in tools/README
     - added description of upgrade.sh


2018 SEP 16b
   * in tools
     - added upgrade.sh


2018 SEP 16a
   * in config/config.c
     - added SANITIZE (for gcc)
     - in output_makefileheader(), added flag -fno-omit-frame-pointer when DEBUGGER is set
       and when the compiler is gcc or mpicc (needed to yield adequate debugging info along
       with -O flag)


2018 SEP 10c
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), merged the EMFIELD code with the FLUID code within the MPI
       section


2018 SEP 10b
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), fixed a bug related to sendvars not being realloced properly
       when receiving with MPI


2018 SEP 10a
   * in bin/periodic_domain_3D.wrp
     - made some changes


2018 SEP 09a
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), made change to how data is passed with MPI: now, the data is
       regrouped in one large packet and sent through only two calls from one process to another
       (much faster than sending one packet at a time with MPI_Bsend)
 

2018 SEP 08b
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), made sure buffersize can not be higher than INT_MAX
     - in update_linked_nodes(), improved MPI performance by not sending and receiving within
       the same loop: now, the packets are all sent, and then all received
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_backward, made sure buffersize can not be higher than INT_MAX
   * in cycle/tsemf/_GS/tsemf.c
     - in update_dUstar_emfield_SOR2_forward(), made sure buffersize can not be higher than INT_MAX


2018 SEP 08a
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), changed MPI_Isend by MPI_Bsend
       o added buffer and calls to MPI_Buffer_attach 
   * in bin/periodic_domain_3D.wrp
     - added dependence on mf


2018 SEP 07a
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), fixed a memory leak bug: after calling MPI_Isend(), need to free 
       the MPI_Request1 variable 
   * in src/bdry.c
     - in read_bdry_actions(), fixed a bug related to checking the link dimension 


2018 SEP 01a
   * in bin
     - added periodic_domain_3D.wrp
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), added cntlink loop that goes from 0 to _num_node_link()
     - added lbdry parameter to _al_link() and to _nodes_between_link_and_bdry_limited()
     - added parameter cntlink to calls to _node_link()
   * in cycle/share/res_share.c
     - added parameter cntlink to calls to _node_link()
   * in src/bdry.c
     - in read_bdry_actions() added error message should linkdim not be within 1 and nd
     - added parameter cntlink to calls to _node_link()
     - in display_node_type_window(), got rid of message that boundary nodes greater than 9 will be
       displayed as A, B, etc. (not valid anymore)
   * in src/common.c
     - in _node_link(), added parameter cntlink
     - added parameter cntlink to calls to _node_link()
     - in is_node_link(), determine if node is a link using numlink rather than link
     - added function _num_node_link()
   * in src/common.h
     - in npbs_t, fixed bug related to TSEMF_UPDATED (was within a ifdef related to SOR2, needed to
       be taken out of it)

  
2018 AUG 31a
   * in bin/periodic_domain.wrp
     - made changes
   * in src/common.h
     - in np_t added linkarray and numlink
   * in src/common.c
     - in _al_link(), added lbdry as a parameter
     - in _nodes_from_bdry_through_links_limited(), changed call to find_link_direc to include lbdry
     - in _nodes_between_link_and_bdry_limited(), added lbdry as a parameter
     - in _node_link(), added an assert to ensure the node is a bdry node
   * in src/bdry.c
     - in read_bdry_actions(), added extra parameter to Link() action: the dimension perpendicular
       to the surface 
     - in read_bdry_actions(), added initialization of numlink and linkarray
     - in find_link_direc(), added code to set link dimension to the one that is user specified
       (if applicable)
     - in display_node_type_window(), now calls is_node_link instead of _node_link to determine if
       a node is a link node 
     - in display_node_type_window(), fixed a few MPI bugs in the 2nd and 3rd loops
     - in read_bdry(), init numlink to 0 and linkarray to NULL      
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), update all bdry instead of inner nodes (makes a difference if an
       inner node is linked to more than 1 bdry node)
   * in cycle/share/res_share.c
     - in find_musclvars_offset(), changed the call to _al_link


2018 AUG 30a
   * in src/bdry.c
     - in display_node_type_window(), fixed a bug: the link nodes were node displayed properly
       for the j constant cut
   * in lib/soap/soap.c
     - added BA_for_parallel()
     - in SOAP_init_codex() and SOAP_copy_codex(), set codex->ACTIONPROCESSED=FALSE
   * in lib/soap/doc/report.tex
     - added section for_parallel


2018 AUG 29a
   * in bin/ns_SDBD.wrp
     - made changes
   * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
     - in find_Sstar(), added body force source terms to total energy flux


2018 AUG 21a
   * in model/share/fluid_share.c
     - in find_Y1star_at_interface() and find_Y2star_at_interface() took away dependence of
       Y1star abd Y2star on betag and betaminus (not needed anymore)


2018 AUG 04a
   * in tools/search.sh
     - fixed bug related to filename pattern matching


2018 AUG 01a
   * in bin
     - updated DBD_actuator.wrp
     - updated ns_SDBD.wrp
     - updated ns_SDBD_N2.wrp


2018 JUL 31c
   * in model/beam/
     - relinked active to none


2018 JUL 31b
   * in bin
     - modified MHD_generator.wrp, discharge.wrp and dischargemagnetic.wrp


2018 JUL 31a
   * in model/share/fluid_share.c
     - moved here find_Y1star_at_interface() and find_Y2star_at_interface() from fluid_plasma.c
   * in model/fluid/_drift-diffusion/fluid.c and model/fluid/*_plasma/fluid_source.c
     - in find_Semfield() changed _betaplus for _betag
     - in find_dSemfield_dU(), changed _betaplus for _betag
     - in find_dSemfield_dU(), changed the linearization to full linearization and
       put partial linearization within #ifdef OLDIMPLEMENTATION
     - in find_dSemfield_dU(), fixed a bug: in various terms, rhoc/(epsilon0*_epsilonr(np[l],gl))
       should read (rhoc/(epsilon0*_epsilonr(np[l],gl))-sum)
   * in model/fluid/_drift-diffusion/fluid.c and model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - replaced find_H() by find_H1() and find_H2() 
     - replaced find_dH_dUstar by find_dH1_dUstar and find_dH2_dUstar


2018 JUL 30c
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - in find_Y1star_at_interface(), changed _betag(spec) to fabs(_betag(spec))
     - in find_Y2star_at_interface(), changed _betaminus(spec) to fabs(_betaminus(spec))


2018 JUL 30b
   * in cycle/res/_generic/res.c
     - in add_Ystar_dH_residual(), changed the call from find_Ystar_at_interface to
       find_Y1star_at_interface and find_Y2star_at_interface and from find_H to find_H1 and find_H2
   * in cycle/share/ts_share.c
     - in add_Ystar_dH_dUstar_to_TDMA(), changed the call from find_Ystar_at_interface to
       find_Y1star_at_interface and find_Y2star_at_interface and from find_H to find_H1 and find_H2
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - replaced find_H by find_H1 and find_H2
     - replaced find_dH_dUstar by find_dH1_dUstar and find_dH2_dUstar
     - replaced find_Ystar_at_interface by find_Y1star_at_interface and find_Y2star_at_interface
   * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
     - in find_Semfield(), changed _betaplus by _betag
     - in find_dSemfield_dU(), changed _betaplus by _betag
     - in find_dSemfield_dU(), changed the linearization to full linearization and moved the
       partial linearization to within #define OLDIMPLEMENTATION
   * in model/share/fluid_share.c
     - added _betag()
   * in src/test.c
     - replaced test_dH_dUstar by test_dH1_dUstar and test_dH2_dUstar


2018 JUL 30a
   * in lib/latex/warpdoc.cls
     - added \RequirePackage{amsmath} just before calling the fonts (needed to prevent
       errors with newer LaTeX and amsmath versions)


2018 JUL 29a
   * in tools/substr.sh
     - made rpl the default mode
     - changed -word flag to -w
   * in tools/search.sh
     - added flags -git and -filename
     - improved error message
     - added help on flags and examples


2018 JUL 28b
   * in tools/substr.sh
     - added automatic escaping of \, /, and $ signs when perl is specified
     - changed flag -replace to -sub (more clear)


2018 JUL 28a
   * in tools/substr.sh
     - improved the help by listing how to escape various characters in perl and rpl
     - fixed a bug when calling perl: needed to enclose the stringtofind and stringtoreplace 
       within double quotes
     - added flag -dryrun


2018 JUL 27a
   * in tools
     - deleted subword*.sh
     - deleted sub*perl*.sh
     - deleted sub*rpl*.sh
     - added substr.sh 
       o Combines all the substr* and subword* scripts in one script with
         options
       o needs further testing
   * in tools/README
     - updated the list of tools accordingly


2018 JUL 24a
   * in tools
     - deleted searchstr.sh
     - deleted searchword.sh
     - created search.sh that combines searchstr.sh and searchword.sh
     - modified the README in consequence
   * in tools/gitnewversion.sh
     - added make cleanall and make cleanbin before calling git
   

2018 JUL 21h
   * in src/test.c
     - removed test_Parent_averaging()
   * in COMPILE and USAGE
     - improved the text 
   * in config/config.c
     - in main(), made sure that the script removeproprietary.sh is not overwritten with an 
       incomplete file
   * in cycle/resconv/_FDS+/resconv.c, cycle/resconv/_FDS_Cauchy/resconv.c, cycle/resconv/_MUSCL+/resconv.c
     - got rid of AVERAGING_PARENT
   * in cycle/share/res_share.c
     - in find_jacvars_at_interface_from_jacvars(), got rid of call to 
       find_jacvars_at_interface_Parent_average()
   * in model/fluid/*/fluid_conv.c and model/fluid/_drift-diffusion/fluid.c
     - got rid of find_jacvars_at_interface_Parent_average()


2018 JUL 21g
   * in tools/gitnewversion.sh
     - fixed bug: gitnewversion_public.sh should be called with argument $1


2018 JUL 21f
   * in tools
     - renamed gitnewversion_open.sh to gitnewversion_public.sh
   * in tools/gitnewversion_public.sh
     - added question on whether to commit files to github or not
   * in tools/gitnewversion.sh
     - added question  on whether to commit files to private server or not
     - got rid of make cleanall and make cleanbin
     - added call to tools/gitnewversion_public.sh
   * in tools/README
     - renamed gitnewversion_open.sh to gitnewversion_public.sh


2018 JUL 21e
   * in tools/gitnewversion_open.sh
     - fixed bug: the $tmpfile was not deleted before calling git


2018 JUL 21d
   * in tools/README
     - Rewrote most of the README (was out of date significantly)
   * in tools/gitnewversion_open.sh
     - added additional checks
     - now does not call gitnewversion.sh within warpopen but calls git directly
     - does not call make config within warpopen
   * in tools/tarwarp.sh
     - added additional checks


2018 JUL 21c
   * in tools/gitnewversion_open.sh
     - fixed a few bugs


2018 JUL 21b
   * in tools/gitnewversion_open.sh
     - changed automatic creation of warpopen directory in case it doesn't exist to clone 
       from github


2018 JUL 21a
   * in tools/gitnewversion_open.sh
     - added automatic creation of warpopen directory in case it doesn't exist
   * in config/config.c
     - in read_config_file(), added code to take care of optionPX
     - in main(), got rid of section COMPILATION
   * in config/_proprietary/proprietary.c
     - changed default message


2018 JUL 20e
   * in tools/gitnewversion_open.sh
     - added more error checks


2018 JUL 20d
   * in COMPILE and CONTRIB
     - made info up to date


2018 JUL 20c
   * removed GIT helpfile


2018 JUL 20b
   * in .config files
     - changed various options as proprietary
   * in tools
     - added gitnewversion_open.sh 


2018 JUL 20a
   * in config/config.c and in all .config files
     - renamed choice to option
   * in config/
     - made directory _proprietary
   * in config/config.c
     - made various changes to include the creation of a script file to remove the 
       proprietary modules
   * in tools
     - added substr_rpl_.configfiles.sh
     

2018 JUL 19b
   * in config/config.c
     - got rid of functions not used anymore
     - cleaned up some code indentation


2018 JUL 19a
   * in config/config.c
     - renamed ERRORFOUND to ERRORFLAG
     - renamed HELPFOUND to HELPFLAG
     - made modifications for configP (proprietary modules)
   * in Makefile and config/Makefile
     - made modifications for make configp


2018 JUL 01a
   * in bin/ns_SDBD.wrp
     - made changes to permit robust integration after nanosecond discharge is finished
   * in cycle/resconv/_MUSCL+/resconv.hh
     - changed CONVJACOBIAN from CONVJACOBIAN_FDSPLUS to CONVJACOBIAN_FVSPLUS
   * in cycle/share/ts_share.c
     - added condition_dFstar_dUstar_interface(); the latter does some conditioning of the Aabs
       matrices; has no effect for now but could be used later.
   * in model/share/fluid_share.c
     - in is_bdry_cathode(), made Nplus and Nminus function of _Charge_number instead of
       of _betaminus and _betaplus: gives the same answer if betaminus is defined as usual but
       gives a different answer if betaminus is 0 for the negative ions


2018 JUN 23a
   * in config/config.c 
     - in strwrpind(), added line break for dash
   * in lib/exm/exm.c
     - in strwrpind(), added line break for dash
     - in strwrp(), added line break for dash
   * in model/metrics/
     - deleted _finite_volume
   * in src/common.h
     - deleted minlinewidth definition
   * in src/main.c, src/test.c, src/control.c
     - set minlinewidth manually     
   

2018 JUN 22a
   * in LICENSE
     - changed the license to BSD 2-clause
   * in src/main.c
     - in write_options(), added option -l
     - in main(), added code to process option -l
   * in src/control.c
     - added write_license()
     - in write_modules(), added help line for licensing terms 
   * in config/config.c
     - in main(), added COMPILATION section


2018 JUN 21a
   * in lib/gridg/2Dbase.c
     - in JoinAll2D(), checked validity of zone limits
   * in lib/gridg/3Dbase.c
     - in JoinAll3D(), checked validity of zone limits
     - in Plane(), checked validity of zone limits


2018 JUN 18a
   * in cycle/tsemf/
     - renamed _IMAF to _AF
     - renamed _SOR to _GS
   * in cycle/tsemf/tsemf.c
     - added DDADI scheme
   * in cycle/tsemf/
     - deleted _DDADI, _ADI, _Newton, _split


2018 JUN 17b
   * in various .config files
     - added help
   * in config/config.c
     - in handle_choices(), implemented better handling of errors (wrong input or asking twice for
       help, etc)


2018 JUN 17a
   * in config/config.c
     - renamed strins to strins2
     - added strins and strwrpind from lib/exm/exm.c
     - in get_one_letter, added helpflag
     - in get_str1_str2(), handle_choices(), process_config_file(), and read_config_file() 
       added code for help
     - added function print_section_title()
     - in ask_yesno_question(), get_makefile_vars(), and ask_number_question() now calls 
       print_section_title


2018 JUN 16a
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR2_node(), update_dUstar_emfield_SOR2_forward(),
       update_dUstar_emfield_SOR2_backward(), implemented planetype[]
     - in update_dUstar_emfield_SOR2_forward(), update_dUstar_emfield_SOR2_backward(),
       got rid of the corner fluxes exchanged through MPI


2018 JUN 15a
   * in cycle/share/tsemf_share.c
     - added find_tsemf_SOR_numsubiter_numcycle()
     - in update_dUstar_emfield_SOR(), added call to find_tsemf_SOR_numsubiter_numcycle() 
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR2(), added call to find_tsemf_SOR_numsubiter_numcycle()


2018 JUN 14a
   * in src/common.h
     - in npbs_t, got rid of tsemf_coeff
   * in cycle/tsemf/_SOR/tsemf.c
     - got rid of init_dUstar_emfield_SOR2_old(), update_dUstar_emfield_SOR2_istation_old()
     - made various changes to accomodate for DISTMPI of SOR2 


2018 JUN 13a
   * in src/common.h
     - in npbs_t, added double *tsemfcoeff; long *tsemfnode; long tsemfnodenum;
   * in src/common.c
     - in create_node(), initialize np->bs->tsemfcoeff, np->bs->tsemfnode and np->bs->tsemfnodenum
   * in cycle/tsemf/_SOR/tsemf.c
     - renamed init_dUstar_emfield_SOR2() to init_dUstar_emfield_SOR2_old()
     - renamed update_dUstar_emfield_SOR2_istation() to update_dUstar_emfield_SOR2_istation_old()
     - added a new init_dUstar_emfield_SOR2()
     - added a new update_dUstar_emfield_SOR2_istation()
     - added add_to_tsemf_coefficients()


2018 JUN 12b
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR2_istation(), now computes standard SOR for nodes 
       where mod(i+j,2)==0


2018 JUN 12a
   * in bin
     - added triangle_in_freestream.wrp


2018 JUN 11a
   * in cycle/tsemf/_SOR/tsemf.c
     - deleted update_dUstar_emfield_SOR2_old() and update_dUstar_emfield_SOR2_notsoold()


2018 JUN 10a
   * in cycle/share/tsemf_share.c
     - got rid of update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward()
     - renamed update_dUstar_emfield_SOR_forward_test() to update_dUstar_emfield_SOR_forward()
     - renamed update_dUstar_emfield_SOR_backward_test() to update_dUstar_emfield_SOR_backward()


2018 JUN 09e
   * in cycle/share/tsemf_share.c
     - improved update_dUstar_emfield_SOR_backward_test()
     - added update_dUstar_emfield_SOR_forward_test()


2018 JUN 09d
   * in cycle/share/tsemf_share.c
     - improved update_dUstar_emfield_SOR_backward_test()


2018 JUN 09c
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward()
       moved MPI_Buffer_attach() and MPI_Buffer_detach() within iter loop
   

2018 JUN 09b
   * in cycle/share/tsemf_share.c
     - added update_dUstar_emfield_SOR_backward_test()
   * in src/common.h
     - added the macros ifdebug() and ifndebug()
     

2018 JUN 09a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward()
       o Implemented buffer for MPI
       o changed MPI_Isend to MPI_Bsend
       o speeds things up on fine meshes that fill up the buffer


2018 JUN 07b
   * in bin
     - updated cylinder_in_freestream3.wrp
     - added compressionfan.wrp


2018 JUN 07b
   * in bin
     - updated cylinder_in_freestream3.wrp


2018 JUN 07a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_forward() and update_dUstar_emfield_SOR_backward(), improved
       algorithm by storing nodes used in each plane in ram within lplane[] array
   * in model/beam/.config
     - made ebeam_fixed experimental


2018 JUN 06a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_backward(), update_dUstar_emfield_SOR_forward(), 
       update_dUstar_emfield_SOR(), fixed the indent spacing


2018 JUN 05a
   * in cycle/share/tsemf_share.c
     - deleted: update_dUstar_emfield_SOR_test(), update_dUstar_emfield_SOR_istation(), 
       update_dUstar_emfield_SOR_old(), update_dUstar_emfield_SOR_notthreadsafe()
     - in update_dUstar_emfield_SOR_node(), added error checking for backward SOR sweep
     - added update_dUstar_emfield_SOR_backward()
     - in update_dUstar_emfield_SOR(), added call to  update_dUstar_emfield_SOR_backward()


2018 JUN 03a
   * in src/control.c
     - added 2 new bib cites
   * in cycle/resconv/*/resconv.hh
     - added cites to eigenvalue conditioning methods HARTEN, GNOFFO, PECLET, PARENT


2018 JUN 02a
   * in bin
     - improved sedov.wrp


2018 MAY 31b
   * in src/post.c
     - in integrate_heat_to_surface_on_bdry(), fixed a bug: the matrix Kstar should be made
       diagonal prior to being multiplied by G. Otherwise, the viscous terms get added to the
       thermal conduction


2018 MAY 31a
   * in src/post.c
     - in integrate_shear_force_on_bdry(), 
       multiplied Fwall_shear[dim] by sign(metricsp1h.Omega)
     - in integrate_heat_to_surface_on_bdry(, 
       multiplied (*heat_to_surface) by sign(metricsp1h.Omega)
     - in integrate_pressure_force_on_bdry(), 
       multiplied Fwall_P[dim] by sign(metricsp1h.Omega)


2018 MAY 29b
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR(), replaced the dynamic threads by static threads


2018 MAY 29a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR(), took away the mpi calls from the plane loop


2018 MAY 28a
   * in cycle/share/tsemf_share.c
     - added update_dUstar_emfield_SOR_node()
     - recoded update_dUstar_emfield_SOR()
   * in model/emfield/_Ohm/emfield.c and model/emfield/_Ohm_generalized/emfield.c
     - in _Nk_smoothed_i(), fixed a bug within asserts
   * in src/common.h
     - in  npbs_t, added TSEMF_UPDATED if NDEBUG is not defined


2018 MAY 26b
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR_istation() added DISTMPI capabilities


2018 MAY 26a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR() added DISTMPI capabilities


2018 MAY 25a
   * renamed
     - TSEMF_SORMG2 to TSEMF_SOR2  
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR(), changed the parallelization algorithm to a more efficient 
       strategy
   * in cycle/tsemf/_SOR/tsemf.c
     - added SOR2 and NEWTON strategy
   * deleted cycle/tsemf/_multigrid


2018 MAY 24b
   * in tools
     - renamed bdry to bdrylayer
     - renamed shear to shearlayer
     - renamed shock to normalshock
     - renamed wedge to obliqueshock
     - renamed prandtlmeyer to compressionfan
   * in tools/compressionfan.c
     - made improvements (changed flag -L to -H, and improved output)
   * in tools/obliqueshock.c
     - improved output


2018 MAY 24a
   * in cycle/tsemf/_multigrid/tsemf.c
     - finalized algorithm
     - implemented threading
   * in cycle/share/tsemf_share.c
     - made update_dUstar_emfield_SOR_istation() non static


2018 MAY 23a
   * in cycle/tsemf/_multigrid/tsemf.c
     - added code related to tsemf_coeff[]
   * in src/common.h
     - in npbs_t, added tsemf_coeff[] and tsemf_rhs when _TSEMF_MULTIGRID2 is defined


2018 MAY 22c
   * in cycle/_standard/cycle.hh
     - renamed Standard for DualTimeStepping
     - renamed StandardSteady for SteadyState
   * in bin/*wrp
     - renamed Standard( for DualTimeStepping(
     - renamed StandardSteady( for SteadyState(
     

2018 MAY 22b
   * in cycle/share/cycle_share.c
     - got rid of TSEMF_ADI_GRID2 and TSEMF_DDADI_GRID2
     - added TSEMF_SORMG2
   * in cycle/tsemf/_multigrid/tsemf.c
     - rewrote the algorithm completely 


2018 MAY 22a
   * renamed
     - find_Fstar_interface_positivity_preserving() to convert_Fstar_interface_positivity_preserving()
   * in cycle/share/res_share.c
     - made small adjustments to convert_Fstar_interface_positivity_preserving()
     - shouldn't change the algorithm


2018 MAY 20a
   * in cycle/resconv/_MUSCL/resconv.c
     - added TVD2_SMART limiter
   * in cycle/resconv/doc/report.tex
     - added a section on first-order schemes
     - improved explanation of 2nd order TVD schemes
   * in cycle/share/res_share.c
     - added LIMITER_SMART to _limiter_TVD()


2018 MAY 17b
   * in cycle/resconv/doc/report.tex
     - modified section on TVD


2018 MAY 17a
   * in cycle/resconv/doc/report.tex
     - modified section on TVD


2018 MAY 16a
   * in bin
     - added cylinder_in_freestream3.wrp


2018 MAY 15a
   * in cycle/resconv/doc/report.tex
     - added section on WENO


2018 MAY 14a 
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_SOR(), added threading with OPENMPTHREADS
     - in update_dUstar_emfield_SOR(), now do gl->numsubiter_tsemf in the standard direction followed
       by gl->numsubiter_tsemf in the reverse direction (used to be alternating between standard and
       reverse from one iteration to the next)


2018 MAY 13a
   * in src/test.c
     - in test_M(), added a matrix inversion using Gaussian elimination (Mgauss) and compared it to M
       analytical
     - in main (), added -dim flag
   * in src/common.c
     - added is_node_in_zone_2()
   * in cycle/resconv/_MUSCL/resconv.c
     - added INTERPOL_SECONDORDER


2018 MAY 12a
   * in model/fluid/_Navier-Stokes_perfect/mathematica/
     - added M_Minv_2D.txt and M_Minv_3D.txt
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - rewrote find_M_from_jacvars() in 3D
     - made changes to find_Minv_from_jacvars()


2018 MAY 04a
   * in cycle/resconv/_MUSCL/resconv.c
     - added INTERPOL_FIRSTORDER
     - in read_disc_resconv_actions(), added code for INTERPOL_FIRSTORDER
   * in cycle/share/res_share.c


2018 APR 30a
   * in model/fluid/*/fluid_conv.c
     - added find_MUstar_from_jacvars()
   * in model/fluid/_Navier-Stokes/fluid_post.c
     - in find_post_variable_value_fluid(), got rid of Ptest=.. (should have been commented a couple
       of versions back)
   * in model/fluid/_drift-diffusion/fluid.c
     - added find_MUstar_from_jacvars()
   * in src/test.c
     - added test_MUstar(), test_Minv(), test_M


2018 APR 29b
   * in cycle/tsemf/_IMAF/tsemf.c
     - renamed IMAF_alpha to gl->relaxEMF
     - renamed update_U_from_dUstar_emfield to update_U_from_dUstar_emfield_without_relaxation


2018 APR 29a
   * in model/emfield/_Ohm/emfield.c and 
     - renamed _Nk_smoothed() to _Nk_smoothed_old()
     - added  _Nk_smoothed_i()
     - rewrote _Nk_smoothed(): instead of taking an average of the smoothing in each dimension, 
       it applied the smoothing in a genuinely multidimensional manner


2018 APR 27a
   * in cycle/resconv/*/resconv.c
     - added gl->cycle.resconv.EIGENVALCOND to the parameters of 
       find_conditioned_Lambda_absolute_from_jacvars(), condition_Lambda_plus_minus(),
       find_Lambda_plus_dtau_FDS_from_jacvars(), find_Fstar_interface_FVSplus_muscl(),
       find_Lambda_minus_dtau_FDS(), find_Lambda_plus_dtau_FDS(), find_Fstar_interface_FDSplus_muscl()
   * in in cycle/resconv/_MUSCL+/resconv.c
     - in find_Fstar_interface(), changed the way the flux is computed for FLUX_FDSplusgen
   * in cycle/share/res_share.c
     - added EIGENVALCOND in parameters of find_Lambda_minus_dtau_FVS(), find_Lambda_minus_dtau_FDS_from_jacvars(), 
       find_Lambda_minus_plus_FVSplus_muscl(), find_Lambda_minus_plus_FDSplus_muscl(), 
       find_Fstar_interface_positivity_preserving(), find_conditioned_Lambda_absolute_from_jacvars(), 
       condition_Lambda_plus_minus(), find_Lambda_plus_dtau_FDS_from_jacvars(), 
       find_Fstar_interface_FVSplus_muscl(), find_Fstar_interface_FDSplus_muscl(),
       find_Lambda_minus_dtau_FDS(), find_Lambda_plus_dtau_FDS()
   * in cycle/share/ts_share.c
     - added EIGENVALCOND_DEFAULT in parameters of find_conditioned_Lambda_absolute_from_jacvars(),
       condition_Lambda_plus_minus()
   * in model/share/fluid_share.c
     - in find_conditioned_Lambda_absolute_from_jacvars(), added EIGENVALCOND in parameters and added
       a switch for EIGENVALCOND_NONE and set EIGENVALCOND to jacvars.EIGENVALCOND if 
       EIGENVALCOND=EIGENVALCOND_DEFAULT
     - in condition_Lambda_plus_minus(), added EIGENVALCOND in parameters and added a switch
       for EIGENVALCOND_NONE and set EIGENVALCOND to EIGENVALCOND=gl->cycle.resconv.EIGENVALCOND if 
       EIGENVALCOND=EIGENVALCOND_DEFAULT
   * in model/fluid/*/fluid_conv.c
     - added empty find_M_from_jacvars() and find_Minv_from_jacvars() when missing 


2018 APR 25b
   * in model/fluid/_Navier-Stokes/fluid_post.c
     - in find_post_variable*(), added code to test if P is indeed rho*a2/(1+dPdrhoE)
       [this is left commented]
 

2018 APR 25a
   * in cycle/resconv/_MUSCL+/resconv.c
     - added constant FLUX_FDSplusgen
     - in find_Fstar_interface(), added option FLUX_FDSplusgen which calls 
       find_Fstar_interface_FDSplus_muscl() followed by make_flux_positive()
   * in cycle/share/res_share.c
     - added make_flux_positive()
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_Linv_from_jacvars() and find_L_from_jacvars(), fixed a possible mistake: -1+g should be -1.0+g
     - added find_M_from_jacvars()
     - added find_Minv_from_jacvars()
     

2018 APR 12a
   * in src/post.c
     - commented out integrate_shear_force_on_bdry() and integrate_pressure_force_on_bdry() if fluxmom<0
     - commented out integrate_heat_to_surface_on_bdry() and integrate_metotal() if fluxet>0
   * in model/emfield/_Ohm/emfield.c
     - removed _sigma_interface_limited()
     - in find_linearization_coefficients_inner_node_emfield(), replaced call to _sigma_interface_limited(
       by call to _sigma_interface()
     - in write_model_emfield_template(), got rid sigmaminfluid
     - in read_model_emfield_actions(), got rid of reading sigmaminfluid


2018 APR 11b
   * in cycle/share/tsemf_share.c
     - added init_dUstar_emfield_SOR()
     - added update_dUstar_emfield_SOR()
     - added update_U_emfield_SOR()
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_U_emfield(), added SOR option
   * in cycle/tsemf/_SOR/tsemf.c
     - deleted init_dUstar_emfield_SOR(), update_dUstar_emfield_SOR(), update_U_emfield_SOR()


2018 APR 11a
   * in cycle/share/cycle_share.c 
     - in update_prim_emfield_mem_in_zone_4(), renamed dtau_emf to dtauemfield[flux]
   * in cycle/tsemf/_IMAF/tsemf.c
     - in various functions, got rid of find_dtau_emfield() (this is now determined in
       update_prim_emfield_mem_in_zone_4()
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR(), renamed dtau_emf to dtauemfield[flux]
   * in model/emfield/_Ohm/emfield.c
     - added _sigma_interface_limited()
     - in find_linearization_coefficients_inner_node_emfield(), added call to 
       _sigma_interface_limited()
     - in read_model_emfield_actions(), added read of sigmaminfluid
     - deleted find_dtau_emfield_test()


2018 APR 10c
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR(), implemented a "reverse sweep" for every odd iteration


2018 APR 10b 
   * in cycle/share/cycle_share.c
     - in update_prim_emfield_mem_in_zone_4(), added call to find_dtau_emfield()
     - in read_UpdateEMField_arguments(), added a fatal_error if relaxEMF is set to more than 2 
     - in read_UpdateEMField_arguments(), added reading in subiter within last argument for TSEMF_SOR 
   * in cycle/share/tsemf_share.c
     - added update_U_from_dUstar_emfield_without_relaxation()
     - removed update_U_and_Res_from_dUstar_emfield()
   * in cycle/tsemf/_SOR/tsemf.c
     - in update_dUstar_emfield_SOR(), added 1/dtau to central coefficient
     - renamed alpha to gl->relaxEMF
     - in update_U_emfield_SOR(), added loop function of gl->numsubiter_tsemf
     - in update_U_emfield_SOR(), now calls update_U_from_dUstar_emfield_without_relaxation() instead
       of update_U_from_dUstar_emfield()
   * in src/common.h
     - in npbs_t, added dtau_emf if _TSEMF_STORE_COEFFICIENTS is defined


2018 APR 10a
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added TSEMF_SOR
   * in cycle/tsemf/_SOR/doc/report.tex
     - added a tensor form of the SOR
   * in cycle/tsemf/_SOR/tsemf.c
     - improved algorithm


2018 APR 09a
   * in  cycle/tsemf
     - added _SOR
   * in cycle/tsemf/_multigrid
     - added doc
   * deleted
     - cycle/tsemf/doc
   * in src/control.c
     - in bibname, added young1950a and frankel1950a


2018 APR 05a
   * in cycle/res/_generic/res.c
     - changed TVDLIMITER from LIMITER_MINMOD to LIMITER_VANLEER
     - in add_Ystar_dH_residual(), made scheme second-order through TVD upwinded stencils


2018 APR 04a
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex() added TSEMF_DDADI_GRID2
   * in cycle/tsemf/_multigrid/tsemf.c
     - added update_dUstar_emfield_DDADI_multigrid(), update_dUstar_emfield_DDADI() 


2018 APR 03a
   * in src/common.c
     - added _l_minus_two() and _l_plus_two()
   * in cycle/tsemf/_multigrid/tsemf.c
     - made improvements


2018 APR 02a
   * in src/common.h
     - in npbs_t, added  coeffp0sum and TSEMF_UPDATED
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added TSEMF_ADI_GRID2
     - in update_prim_emfield_mem_in_zone_4(), added np[l].bs->coeffp0sum
   * in cycle/tsemf/_multigrid/tsemf.c
     - various changes


2018 APR 01a
   * in various files
     - updated the call to sweep_with_1D_segments() to add GRIDLEVEL_ONE as the last parameter 
   * in cycle/restime/_CDF+/restime.c
     - replaced xi by xi1, xi2, xi3
   * in cycle/share/cycle_share.c
     - in sweep_with_1D_segments(), added parameter GRIDLEVEL
     - in sweep_with_1D_segments(), added code related to GRIDLEVEL
   * in cycle/tsemf/_multigrid/tsemf.c
     - improved several functions
   * in cycle/tsemf/doc/report.tex
     - made changes to multigrid 1D 


2018 MAR 30a
   * in bin
     - added titarev_toro.wrp
   * in cycle/resconv/_FVS/resconv.c
     - added AOWENO7 and WENO7 interpolations


2018 MAR 28b
   * in lib/exm/exm.c
     - in EXM_find_root_Newton_Raphson(), added more error handling and better adjustment
       of droot_init
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c
     - in Equation_argum(), changed drootinit/=1.0e-7 to drootinit/=1e7


2018 MAR 28a
   * in bin
     - added cylinder_in_freestream2.wrp
   * in src/control.c
     - in readcontrol_actions(), only read Bdry() and Model() and Init(), and Disc()
       modules if GRIDONLY is FALSE
     - in read_control(), added GRIDONLY as a parameter
     - in read_control(), got rid of Disc() module not found error if GRIDONLY
   * in src/main.c
     - renamed OUTPUTPOST_GRIDONLY to GRIDONLY
     - in main(), set CYCLEMODULE to FALSE if GRIDONLY
     - in main(), when calling read_control, added GRIDONLY as a parameter
   * in src/test.c
     - in main(), when calling read_control, added GRIDONLY=FALSE as a parameter


2018 MAR 27b
   * in bin/periodic_domain.wrp
     - added AVERAGING in Disc()


2018 MAR 27a
   * in lib/exm/exm.c
     - in  EXM_find_root_Newton_Raphson(), added code that changes dx should res2-res1==0.0 || x2-x1==0.0
       (prevents a situation where dx is so small that it has no effect on the convergence)
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c 
     - in Equation_argum(), added code for better estimate of drootinit 
     - in Equation_argum(), added code for error handling of EXM_find_root_Newton_Raphson()
 

2018 MAR 25a
   * in cycle/resconv/_MUSCL+/resconv.hh
     - commented #define _RESCONV_INCLUDES_DIFFUSION


2018 MAR 24b
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c, model/fluid/_Navier-Stokes_plasma/fluid.c,
     model/fluid/_drift-diffusion/fluid.c
     - in write_cycle_fluid_template(), changed zetaGammai and zetaGammae default values to 1.0
       (instead of 0.1 and 0.01)


2018 MAR 24a
   * in cycle/res/_generic/res.c
     - in add_dKstar_dG_residual(), fixed bug related to Fp1h_diffusion
   * in cycle/share/res_share.c
     - got rid of find_Lambda_minus_plus_FDSplus_muscl_including_diffusion()
     - in find_Lambda_minus_plus_FDSplus_muscl(), added code for _RESCONV_INCLUDES_DIFFUSION
   * in src/common.h
     - in npwk_t, renamed Fm1h_diffusion to Fp1h_diffusion


2018 MAR 23b
   * in bin
     - added ns_SDBD_N2.wrp
     - modified ns_SDBD.wrp
   * in src/common.h
     - in npwk_t, added flux_t Fm1h_diffusion[nd];
   * in cycle/res/_generic/res.c
     - in add_dKstar_dG_residual(), added code for np[l].wk->Fm1h_diffusion 
       if _RESCONV_INCLUDES_DIFFUSION is defined
   * in cycle/share/cycle_share.c
     - in find_dtau(), added code for LambdaZ (but turned it off by setting it to identity)
   * in cycle/share/res_share.c
     - added find_Lambda_minus_plus_FDSplus_muscl_including_diffusion()
     - in find_Fstar_interface_FDSplus_muscl(), added call to find_Lambda_minus_plus_FDSplus_muscl_including_diffusion()
       if _RESCONV_INCLUDES_DIFFUSION is defined


2018 MAR 23a
   * in cycle/tsemf/_multigrid/tsemf.c
     - made changes
   * in cycle/tsemf/doc/report.tex
     - made changes


2018 MAR 22b
   * in cycle/tsemf/
     - modified cycle/tsemf/_multigrid/tsemf.c   


2018 MAR 22a
   * in cycle/tsemf/
     - deleted _IMAF_ADI
     - added _multigrid


2018 MAR 20a
   * in cycle/tsemf/doc/report.tex
     - improved Multigrid 2D


2018 MAR 19a
   * in cycle/tsemf/doc/report.tex
     - added Multigrid 2D


2018 MAR 16a
   * in cycle/ts/doc/report.tex
     - got rid of multigrid section
   * in cycle/tsemf
     - added doc 
   * in cycle/tsemf/report.tex
     - added 1D and 2D multigrid sections


2018 MAR 09a
   * in config/config.c
     - in output_makefileheader(), took away -march=native from the flags given to gcc
 

2018 MAR 06a
   * in cycle/resconv/_FDS+/resconv.c
     - removed find_jacvars_at_interface()
     - added gl->cycle.resconv.AVERAGING to the calls to find_jacvars_at_interface() 
   * in cycle/resconv/_FDS/resconv.c
     - renamed find_jacvars_at_interface() to find_jacvars_at_interface_local()
     - calls find_jacvars_at_interface_from_jacvars() in find_jacvars_at_interface_local()
   * in cycle/resconv/_FDS_Cauchy/resconv.c
     - in  find_jacvars_at_interface_normal() and find_jacvars_at_interface_cross(), 
       now calls find_jacvars_at_interface()
   * in cycle/resconv/_FVS/resconv.c
     - renamed INTERPOL_BDF1 to INTERPOL_FIRSTORDER
     - in find_Delta_Lambda_for_dtau(), added AVERAGING_ARITH to the parameters of   
       find_Lambda_minus_dtau_FDS() and find_Lambda_plus_dtau_FDS()
   * in cycle/resconv/_MUSCL+/resconv.c
     - in write_disc_resconv_template() and read_disc_resconv_actions(), added AVERAGING* constants
     - in find_Fstar_interface(), added AVERAGING to the call to find_Fstar_interface_FDSplus_muscl()
   * in cycle/resconv/_MUSCL/resconv.c
     - in write_disc_resconv_template() and read_disc_resconv_actions(), added AVERAGING* constants
     - in find_Fstar_interface(), added AVERAGING to the call to find_Fstar_interface_FDS_muscl()
       and find_Fstar_interface_FVSplus_muscl(), and find_Fstar_interface_FDSplus_muscl()
   * in cycle/restime/_CDF+/restime.c
     - deleted find_dFstarxt_dUstar_interface_old()
   * in cycle/share/res_share.c
     - in find_jacvars_at_interface(), added AVERAGING as a parameter
     - in find_jacvars_at_interface(), find_Fstar_interface_FDSplus_muscl(), find_Fstar_interface_FDS_muscl()
       now calls find_jacvars_at_interface_from_jacvars() instead of find_jacvars_at_interface_Roe_average()
     - added find_jacvars_at_interface_from_jacvars()
     - added AVERAGING in parameters for find_Lambda_minus_dtau_FDS(), find_Lambda_plus_dtau_FDS(),
       find_Lambda_plus_minus_dtau_FDS(), find_Fstar_interface_FDSplus_muscl(), find_Fstar_interface_FDS_muscl(),
       find_Fstar_interface_FVSplus_muscl() 
     - in find_Fstar_interface_FVSplus_muscl(), now calls find_jacvars_at_interface_from_jacvars()
       instead of find_jacvars_at_interface_arith_average()
   * in cycle/share/res_share.h
     - added AVERAGING_ARITH, AVERAGING_ROE, AVERAGING_PARENT
   * in src/test.c
     - deleted find_jacvars_at_interface()
     - replaced find_jacvars_at_interface() with find_jacvars_at_interface_from_jacvars() with AVERAGING_ROE specified
     - replaced find_jacvars_at_interface_Roe_average() with find_jacvars_at_interface_from_jacvars() with AVERAGING_ROE specified
     - replaced find_jacvars_at_interface_Parent_average() with find_jacvars_at_interface_from_jacvars() with AVERAGING_PARENT specified
   * in src/control.c
     - in readcontrol_actions(), implemented fatal_error() when glgrid.is!=1 or glgrid.js!=1 or glgrid.ks!=1
   * in bin
     - added stationary_contact_discontinuity.wrp

   
2018 MAR 02c
   * in src/common.c
     - in _l_from_l_all(), added an assert to ensure that the resulting l is within domain_lim


2018 MAR 02b
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), fixed a bug related to _i() and _l_from_l_all which should have 
       been written as _i_all()


2018 MAR 02a
   * in cycle/_standard/cycle.c
     - in init_cycle() and runtime_actions_cycle_specific(),  changed 
       update_prim_emfield_mem_in_zone(...,_zone_intersection(gl->domain_all,_zone_expansion(gl->domain,hbw_mem_emfield)));
       to
       update_prim_emfield_mem_in_zone(..,_zone_intersection(gl->domain_all,_zone_expansion(gl->domain,max(hbw_resplasma_fluid,hbw_mem_emfield))));
   * in cycle/res/_generic/res.hh
     - added hbw_resplasma_fluid
     - changed hbw_res_fluid from hbw_resconv_fluid to max(hbw_resconv_fluid,hbw_resplasma_fluid)
   * in cycle/resconv/*/resconv.hh
     - added hbw_resconvplasma_fluid
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), changed double mpivars[max(nfe,1+nf*hbw_resconv_fluid)] to 
       double mpivars[max(nfe,nf+1+max(0,hbw_resconv_fluid-1)*nf)];
     - in update_linked_nodes(), changed mpivars[nf]=(double)_nodes_between_link_and_bdry_limited(..TYPELEVEL, hbw_resconv_fluid-1)   
       to mpivars[nf]=(double)_nodes_between_link_and_bdry_limited(.. TYPELEVEL, max(0,hbw_resconv_fluid-1));
     - in update_linked_nodes(), fixed bug in MPI_ISend and MPI_Recv
   * in src/bdry.c
     - in read_bdry_actions(), in reallocing linkmusclvars, made sure the size is not negative
   * in src/common.c
     - added _al_check()


2018 MAR 01d
   * renamed in bin only
     - BDRY_WALLTFIXED -> BDRY_WALLTFIXED1  
     - BDRY_WALLADIABATIC -> BDRY_WALLADIABATIC1
   * in src/bdry.c
     - in read_bdry_actions(), changed the call to Unlink() action


2018 MAR 01c
   * renamed
     - WARP to CFDWARP
   * in lib/gridg/2Dbase.c and 3Dbase.c
     - in GRIDG_write_grid_2D_to_file() and GRIDG_write_grid_3D_to_file(), 
       changed slightly default grid module
   * in src/bdry.c
     - in read_bdry_actions(), changed the amount of memory allocated to linkmusclvars from
       (hbw_resconv_fluid+2)*nf*sizeof(double) to (hbw_resconv_fluid-1)*nf*sizeof(double)



2018 MAR 01b
   * in src/data.c
     - in find_NODEVALID_on_domain_all(), now make sure NODEVALID is correct for all processes
       not just process 0 
   

2018 MAR 01a
   * in cycle/resconv/_FVS/resconv.c
     - in find_Fplus_Fminus(), added some asserts
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), fixed a bug related to how MPI sends the variables
   * in cycle/share/res_share.c
     - in find_musclvars_offset(), added an assert
   * in src/bdry.c
     - in read_bdry(), added asserts
   * in src/common.c
     - in _domain_lim_from_domain(), tmp=max(numxnode,numxnode+nodeoverlap) instead of
       tmp=max(numxnode,nodeoverlap)  ---> this is odd. needs further checking


2018 FEB 28b
   * in model/emfield/_Ohm*/emfield.c 
     - in find_linearization_coefficients_bdry_node_emfield(), removed MULTIPLE_DIREC  and
       call to is_multiple_bdry_direc (not used anymore)
   * in src/post.c
     - in integrate_mass(), now only define spec when _FLUID_NUMBERDENSITIES is set (to avoid
       compiler warning)
   * in model/fluid/*/fluid_bdry.c
     - took away line "Vx=300;{m/s}  Vy=0;{m/s}  "if3DL("Vz=0;{m/s}  ")"P=100000;{Pa}  T=300;{K}"
   * in config/config.c
     - in output_makefileheader(), added flag -march=native to gcc compiler


2018 FEB 28a
   * in src/post.c
     - in read_post_actions(), removed the white spaces ahead of the "Writing post file.." statement
   * in src/common.c
     - in _nodes_from_bdry_through_links_limited(), fixed a bug related to counting nodes beyond 
       a link
   * in cycle/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), now calls find_conditioned_Lambda_absolute_from_jacvars()
       when  _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING is defined
     - in find_Lambda_minus_plus_FVSplus_muscl(),  now calls find_conditioned_Lambda_absolute_from_jacvars()
       when  _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING is defined


2018 FEB 27c
   * in bin
     - modified cylinder_in_freestream.wrp


2018 FEB 27b
   * in cycle/resconv/_MUSCL/resconv.hh
     - changed hbw_resconv_fluid from 3 to 5


2018 FEB 27a
   * renamed
     - BDRY_WALLTFIXED -> BDRY_WALLTFIXED1
     - BDRY_WALLADIABATIC -> BDRY_WALLADIABATIC1
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - added BDRY_WALLTFIXED2, BDRY_WALLADIABATIC2
   * in model/share/fluid_share.c
     - in find_V_P_T_bdry_freestream(), if !(*FREESTREAM), now set Pnew to Pinf if MB<1.0
   * in src/main.c
     - in write_options(), for -dom option changed the description nd int to 2 int or 3 int
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c
     - in Spline_argum(), now force at least 4 data points to be used for the spline (only
       3 gives unreliable results)
   * in bin
     - added cube_in_freestream_3D.wrp


2018 FEB 26a
   * in model/metrics/_generic/metrics.c
     - in find_Omega_and_X_at_interface(), got rid of asserts for Omega>0.0


2018 FEB 25a
   * in cycle/share/cycle_share.c
     - in update_linked_nodes(), fixed bugs and added code for EMFIELD (not yet tested fully)
   * in cycle/share/res_share.c
     - in find_musclvars_offset(), fixed bugs
   * in lib/soap/soap.c
     - in BA_exit(), added call to MPI_finalize()
   * in model/emfield/_Ohm/emfield.c
     - in find_linearization_coefficients_inner_node_emfield(), took away the asserts of Omega>0
       and replaced them with asserts that Omega shouldn't be zero and that dt shouldn't be zero
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_linearization_coefficients_inner_node_emfield(), added asserts that Omega and
       dt shouldn't be zero


2018 FEB 24a
   * in bin
     - added cylinder_in_freestream.wrp
   * changed call to update_linked_nodes()
     - took away zone from parameters
   * in cycle/_predictor_corrector/cycle.c and cycle/_standard/cycle.c 
     - in init_cycle(), added call to update_linked_nodes()
   * renamed
     _nodes_from_bdry_excluding_links_limited ->  _nodes_from_bdry_through_links_limited() 
   * in cycle/restime/_BDF/restime.c, cycle/restime/_CDF+/restime.c, cycle/restime/_TVDRK/restime.c
     - in read_disc_restime_actions(), _RESCONV_ACTIONNAME was changed to _RESTIME_ACTIONNAME
   * in cycle/share/cycle_share.c
     - added update_linked_nodes() for DISTMPI
     - in the non DISTMPI update_linked_nodes(), changed zone for gl->domain
   * in cycle/share/res_share.c
     - deleted find_musclvars_offset_notsoold(), find_musclvars_offset_old()
     - moved  _al_link() to src/common.c
     - in find_musclvars_offset(), added code for DISTMPI
   * in model/metrics/_generic/metrics.c
     - in _Omega(), removed assert for Omega>0 (it can be negative and still be valid)
   * in src/bdry.c
     - in read_bdry_actions(), added initialization of linkmusclvars
     - in display_node_type_window(), added code to take care of link nodes
     - in read_bdry(), added gl->domain_lim_all=gl_all.domain_lim and gl->domain_lim_all=gl->domain_lim;
     - in read_bdry(), added init of numlinkmusclvars and linkmusclvars
     - in read_bdry(), added copying of link, numbdryparam, and bdryparam, 
       and numlinkmusclvars, linkmusclvars (for DISTMPI)
   * in src/common.c
     - in _ai_all(), changed domain_all for domain_lim_all
     - added find_ijk_from_l_all()
     - added _l_from_l_all()
     - added _i_all()
     - added _al_link()
     - added _nodes_between_link_and_bdry_limited()
     - in _nodes_from_bdry_through_links_limited(), added code for DISTMPI
     - in init_data_structure(), added gl->domain_lim_all=_domain_lim_from_domain(gl->domain_all,gl);
   * in src/common.h
     - in gl_t added domain_lim_all
     - in gl_t removed NOX
     - in np_t added numlinkmusclvars and linkmusclvars
   * in src/control.c
     - in find_metrics_on_all_nodes(), removed check if Omega is positive
   * in src/data.c
     - in read_data_file_binary_ascii(), NODEVALID and fluxtmp are now malloced 
       for gl->domain_lim_all not gl->domain_all
     - in write_data_file_interpolation(), NODEVALID is now malloced 
       for gl->domain_lim_all not gl->domain_all
   * in src/main.c
     - in write_options() and main(), took away -nox


2018 FEB 23b
   * in bin
     - updated ns_SDBD.wrp
     - updated combustion_vacuum.wrp
   * in model/fluid/_*_plasma/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
     - in find_dSstar_dUstar(), added code to make sure dSstar_dUstar[spec][spec] is negative
       when spec is the electron species or the negative ion species


2018 FEB 23a
   * in src/bdry.c
     - added _bdry_ID()
     - in display_node_type_window(), added call to _bdry_ID()
   * in model/emfield/*/emfield.c
     - in write_bdry_emfield_template(), added call to _bdry_ID()
   * in model/fluid/*/fluid_bdry.c
     - in write_bdry_fluid_template(), added call to _bdry_ID()
     - in write_bdry_fluid_template(), abreviated description of BDRY_FREESTREAM1


2018 FEB 22d
   * in lib/latex/warpdoc.cls
     - changed oddsidemargin
   * in model/fluid/_Favre-Reynolds/fluid.c
     - in read_model_fluid_actions(), deleted zetaA1, zetaA2, zetaA3
   * in model/fluid/_Favre-Reynolds/fluid_bdry.c, model/fluid/_Favre-Reynolds_Tv/fluid_bdry.c, 
     model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c, model/fluid/_Navier-Stokes/fluid_bdry.c,
     model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
     - added BDRY_FREESTREAM1
     - in write_bdry_fluid_template(), added BDRY_FREESTREAM1 and help for Link and Param
     - in add_bdry_types_fluid_to_codex(), added BDRY_FREESTREAM1
     - added update_bdry_freestream()
     - in update_bdry_fluid(), added BDRY_FREESTREAM1
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - in update_bdry_freestream() now calls find_V_P_T_bdry_freestream()
   * in model/share/fluid_share.c
     - added _Rgas()
     - added find_V_P_T_bdry_freestream()
 

2018 FEB 22c
   * in cycle/restime/_steady-state/restime.c
     - added write_disc_restime_template(), read_disc_restime_actions()
   * in lib/exm/exm.c
     - added EXM_find_spline()
     - added EXM_f_from_spline()
   * in lib/gridg/2Dbase.c
     - improved Spline_argum()
     - in actions(), added call to Spline_argum()
   * in lib/gridg/3Dbase.c
     - added Spline_argum()
     - in actions(), added call to Spline_argum()
   * in lib/gridg/doc/report.tex
     - Added Spline section
   * in lib/latex/warpdoc.cls
     - modified top margin


2018 FEB 22b
   * in lib/gridg/2Dbase.c
     - added Spline_argum()


2018 FEB 22a
   * in cycle/*/cycle.hh
     - added gl_cycle_restime_t restime
   * in cycle/_predictor_corrector/cycle.c
     - renamed _RESTIME_PREDICTOR_CORRECTOR_NUMSUBITER to gl->numsubiter_pc
   * in cycle/restime
     - combined BDF1, BDF2, BDF3 into BDF
     - combined RK1, RK2, RK3 into TVDRK
   * in cycle/restime/*/restime.hh
     - added _RESTIME_ACTIONNAME 
     - added gl_cycle_restime_t
   * in cycle/restime/*/restime.c
     - added write_disc_restime_template()
     - added read_disc_restime_actions()
   * in cycle/share/cycle_share.c
     - in write_disc_template(), added write_disc_restime_template()
     - in read_disc_actions(), added read_disc_restime_actions()
     - in read_disc(), init gl->DISC_RESTIME_READ
   * in cycle/ts/*/ts.c
     - added #error directive related to _CYCLE_PREDICTOR_CORRECTOR
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - for BDRY_FREESTREAM1, changed the parameters from Vx,Vy,P,rho to Vx,Vy,P,T
   * in src/common.h
     - in gl_t, added numsubiter_pc and DISC_RESTIME_READ
   * in src/control.c
     - updated citation for "Positivity-Preserving Dual Time Stepping Schemes for Gas Dynamics"


2018 FEB 21c
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - in update_bdry_freestream(), made various improvements so that the BC works well 
       for either supersonic or subsonic flows
   * in src/bdry.c
     - in find_bdry_direc(), fixed a bug: when comparing distances that are equal, round-off
       error could lead to the condition being sometimes true or sometimes false randomly;
       fixed by multiplying the RHS of the condition by 1.001


2018 FEB 21b
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - changed INOUTFLOWSUBSONIC1 for FREESTREAM1
     - deleted update_bdry_subsonic_inoutflow()
     - added update_bdry_freestream()


2018 FEB 21a
   * in cycle/resconv/_FDS+/resconv.c, _FDS/resconv.c, _FDS_Cauchy/resconv.c, _FVS+/resconv.c
     - renamed order_of_accuracy to ACCURACY
     - added ACCURACY_FIRSTORDER and ACCURACY_SECONDORDER constants


2018 FEB 20c
   * renamed
     - AOWENO_GAMMALO -> AOWENO_gammalo
     - AOWENO_GAMMAHI -> AOWENO_gammahi  
   * in cycle/share/res_share.h
     - deleted AOWENO_GAMMALO_COMPRESSIVE, AOWENO_GAMMAHI_COMPRESSIVE, AOWENO_GAMMALO_DIFFUSIVE
       AOWENO_GAMMAHI_DIFFUSIVE, AOWENO_TYPE_DEFAULT, AOWENO_GAMMALO_DEFAULT, AOWENO_GAMMAHI_DEFAULT,
       AOWENO_TYPE_MASSFRACTION, AOWENO_GAMMALO_MASSFRACTION, AOWENO_GAMMAHI_MASSFRACTION 


2018 FEB 20b
   * renamed
     - FLUX_numiter -> numiter
   * in cycle/resconv/*/resconv.c
     - in write_disc_resconv_template(), added EIGENVALCOND
     - in read_disc_resconv_actions(), added EIGENVALCOND
   * in cycle/resconv/*/resconv.hh
     - in gl_cycle_resconv_t, added EIGENVALCOND
   * in cycle/resconv/_none/resconv.c
     - added write_disc_resconv_template()
     - added read_disc_resconv_actions()
   * in cycle/share/res_share.h
     - added #define EIGENVALCOND_HARTEN, #define EIGENVALCOND_GNOFFO, etc
   * in model/fluid/*/fluid.hh
     - took away all EIGENVALCOND
   * in model/fluid/*/fluid_conv.c
     - added _eta_from_jacvars()
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - removed _Re_edge_from_jacvars()
   * in model/share/fluid_share.c
     - in write_disc_fluid_template(), took away EIGENVALCOND
     - in read_disc_fluid_actions(), took away EIGENVALCOND
     - added _Re_edge_from_jacvars()
     - in find_conditioned_Lambda_absolute_from_jacvars(), implemented a switch instead of multiple ifs
     - in condition_Lambda_plus_minus(), implemented a switch instead of multiple ifs


2018 FEB 20a
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - added BDRY_INOUTFLOWSUBSONIC1
     - in write_bdry_fluid_template(), added instructions for Link() command and Param() command
     - in update_bdry_symmetrical(), now set V to zero if BDRYDIRECFOUND FALSE
     - added update_bdry_subsonic_inoutflow()
     - in update_bdry_wall(), added condition for BDRY_INOUTFLOWSUBSONIC1
   * in src/bdry.c
     - added _bdry_param()
     - in read_bdry_actions(), added action "Param"
     - in read_bdry(), initialized numbdryparam to 0 and bdryparam to NULL for all nodes
   * in src/common.h 
     - in np_t added numbdryparam and *bdryparam


2018 FEB 19a
   * in cycle/resconv/_MUSCL*/resconv.c
     - in find_Fstar_interface(), now calls _nodes_from_bdry_excluding_links_limited() instead
       of _nodes_from_bdry_limited()
   * in cycle/share/res_share.c
     - in _al_link(), now calls find_link_direc()
   * in src/bdry.c
     - added find_link_direc()
   * in src/common.c
     - in _nodes_from_bdry() and _nodes_from_bdry_limited(), commented "&& is_node_in_domain_lim(.." 
     - in _nodes_from_bdry() and _nodes_from_bdry_limited(), added fatal_error for DISTMPI
       in case last node is not within domain_lim
     - added _nodes_from_bdry_excluding_links_limited()
   * in src/control.c
     - in write_modules(), added "if (outputfile!=stdout) linewidth=maxlinewidth;" 
     

2018 FEB 18a
   * in cycle/share/res_share.c
     - renamed find_musclvars_offset() to find_musclvars_offset_notsoold()
     - added _al_link()
     - rewrote find_musclvars_offset()
   * in src/common.c
     - started writing the function _nodes_from_bdry_limited_excluding_links()
     - in _node_link(), fixed a bug: tmp should be initialized to LINK_NONE not to np.type


2018 FEB 17a
   * in cycle/share/ts_share.c
     - in add_TDMA_jacobians_non_conservative(), took away code to make sure the diagonal elements
       of B are always positive (reverted to pre-18feb16a versions)
     - in add_dSstar_dUstar_to_TDMA(), added code that ensured that the diagonal elements
       of dSstar_dUstar are always negative (reverted to pre-18feb16a versions)


2018 FEB 16a
   * renamed
     - RESTIME_CAUCHY to RESTIME_CDF
   * in cycle/share/ts_share.c
     - in add_TDMA_jacobians_non_conservative(), added code to make sure the diagonal elements
       of B are always positive
     - in add_dSstar_dUstar_to_TDMA(), removed code that ensured that the diagonal elements
       of dSstar_dUstar are always negative
   * in model/fluid/*_plasma/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
     - in find_dSstar_dUstar(), took away the line that made dSstar_dUstar[speceminus][speceminus]
       always negative


2018 FEB 15b
   * in cycle/tsemf/_Newton/tsemf.c
     - removed init_dUstar_emfield() and update_U_emfield_Newton()
   * in cycle/share/tsemf_share.c
     - added init_dUstar_emfield_Newton() and update_U_emfield_Newton()
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_U_emfield() added TSEMF_NEWTON
     - in update_U_emfield() cleaned up error message


2018 FEB 15a
   * renamed
     - Grid2D to Grid
     - Grid3D to Grid
     - Grid1D to Grid
   * in lib/exm/exm.c
     - in EXM_solve_XDMA(), added some pragamas for openmp threading
   * in model/emfield/_Ohm*/emfield.c
     - in write_model_emfield_template(), took away Ediv
     - in read_model_emfield_actions(), took away Ediv
     - in write_disc_emfield_template(), added a module containing Ediv
     - added an empty read_disc_emfield_actions_2()
     - in read_disc_emfield_actions(), added Ediv
   

2018 FEB 13a
   * renamed 
     - cycle/resconv/_FDS_Cauchy2 to cycle/resconv/_FDS_Cauchy
     - cycle/resconv/_FVS+_VanLeer2 to cycle/resconv/_FVS+
   * deleted 
     - cycle/resconv/_FDS_Cauchy1
   * in cycle/resconv/_FDS_Cauchy/resconv.c and cycle/resconv/_FVS+/resconv.c 
     - added write_disc_resconv_template(), read_disc_resconv_actions()


2018 FEB 12a
   * deleted
     - cycle/resconv/_FDS_Roe1
     - cycle/resconv/_FDS+_Parent1
   * renamed
     - cycle/resconv/_FDS+_STVD2 to cycle/resconv/_FDS+
     - cycle/resconv/_FDS_STVD2 to cycle/resconv/_FDS
   * in cycle/resconv/_FDS/resconv.c, cycle/resconv/_FDS+/resconv.c
     - added write_disc_resconv_template(), read_disc_resconv_actions()
    

2018 FEB 11a
   * in cycle/resconv/
     - added _FVS
   * in cycle/resconv
     - deleted _FVS_StegerWarming1
     - deleted _FVS_VanLeer2  
   * in cycle/share/res_share.c
     - renamed find_musclvars_offset to find_musclvars_offset_old
     - coded new find_musclvars_offset: doesn't require the starting node to be an inner node
       (could be any valid node, including a boundary node)


2018 FEB 10b
   * in cycle/resconv/_MUSCL/resconv.c
     - in find_Fstar_interface(), changed the default flux near bdry to VANLEER limiter
       instead of SUPERBEE


2018 FEB 10a
   * in cycle/resconv/*/resconv.hh
     - took away _RESCONV_BW and _RESCONV_ORDER
   * in cycle/resconv/
     - renamed _MUSCL_HigherOrder to _MUSCL
   * in cycle/resconv/_MUSCL+/resconv.c
     - in find_Fstar_interface(), added parameter EIGENVALUES_ENFORCED_POSITIVE when calling 
       find_Fstar_interface_FDSplus_muscl()
   * in cycle/share/res_share.c
     - deleted find_Fstar_interface_FDS_muscl_for_Cauchy_restime()
     - in find_Fstar_interface_FDSplus_muscl(), added parameter EIGENVALUES
     - in find_Lambda_minus_plus_FVSplus_muscl(), added code for EIGENVALUES_NOT_ENFORCED_POSITIVE
     - in find_Fstar_interface_FVSplus_muscl(), added parameter EIGENVALUES


2018 FEB 09b
   * in src/control.c
     - fixed typo in  M Kaser name
   * in lib/soap/soap.c
     - in SOAP_add_int_to_vars(), fixed bug related to sprintf return value
   * in cycle/resconv/
     - deleted _FDS+_WENO7, _FDS+_WENO9, _FDS+_WENO_ADER5, _FDS+_WENO_ADER6, _FDS+_WENO_AO7, 
       _FDS+_WENO_AO9, _FDS_TVD2, _FDS_WENO5, _FDS_WENO7, _FDS_WENO_AO5, _FVS_TVD2, _FVS_WENO_AO5
   * in cycle/resconv
     - added _MUSCL_HigherOrder


2018 FEB 09a
   * renamed cycle/resconv/_MUSCL5+ to cycle/resconv/_MUSCL+
   * in  cycle/resconv/_MUSCL+
     - added user-defined variables such as AOWENO_TYPE, AOWENO_GAMMALO, etc


2018 FEB 08a
   * renamed
     - WENO_ADER -> CWENO
     - WENO_AO -> AOWENO
   * deleted
     - cycle/resconv/_FDS+_TVD2
     - cycle/resconv/_FDS+_TVD5
     - cycle/resconv/_FDS+_WENO3
     - cycle/resconv/_FDS+_WENO5
     - cycle/resconv/_FDS+_WENO_ADER3
     - cycle/resconv/_FDS+_WENO_AO5
     - cycle/resconv/_FVS+_TVD2
     - cycle/resconv/_FVS+_WENO_AO5
   * in cycle/resconv
     - added _MUSCL5+
   * in cycle/share/cycle_share.c
     - in runtime_actions(), added action Disc
     - added write_disc_template()
     - added read_disc_actions()
     - added read_disc()
   * in lib/latex/warpdoc.cls
     - made small changes
   * in model/emfield/_*/emfield.c
     - added write_disc_emfield_template()
     - added read_disc_emfield_actions()
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), removed zetaA1, zetaA2, zetaA3, zetaD, aref, EIGENVALCOND
     - in read_model_fluid_actions(), removed zetaA1, zetaA2, zetaA3, zetaD, aref, EIGENVALCOND
   * in model/share/fluid_share.c
     - added write_disc_fluid_template(), read_disc_fluid_actions_2(), read_disc_fluid_actions()
   * in src/common.h
     - in gl_t, added DISC_FLUID_READ,DISC_EMFIELD_READ,DISC_RESCONV_READ
   * in src/control.c
     - in write_control(), added call to write_disc_template()
     - in readcontrol_actions(), added action Disc
     - in read_control(), after SOAP_process_code(), changed the error checking. Now, Disc must be checked instead of Init
       and readcontrolarg.module_level must be increased by 1


2018 FEB 06c
   * in src/post.c
     - in integrate_metotal(), fixed a bug: shouldn't divide by the volume
     - in integrate_mass(), fixed a bug: shouldn't divide by the volume


2018 FEB 06b
   * in model/fluid/_drift-diffusion/fluid.hh
     - added _FLUID_NUMBERDENSITIES
   * in src/post.c
     - in integrate_mass(), do not integrate U[spec] if _FLUID_NUMBERDENSITIES is defined


2018 FEB 06a
   * in src/post.c
     - added integrate_metotal()
     - added integrate_mass()
     - in write_post_template(), added template for m and metotal
     - in read_post_functions(), added functions _metotal and _m
   * in bin
     - updated the Post() module of several wrp files


2018 FEB 05b
   * in bin
     - updated ns_SDBD.wrp


2018 FEB 05a
   * in bin
     - updated ns_SDBD.wrp


2018 FEB 04a
   * in cycle/_*/cycle.c
     - in runtime_actions_cycle_specific(), added calls to update_linked_nodes()
   * in cycle/share/cycle_share.c
     - in update_bdry_node(), added code so that when the boundary node is a link, it shouldn't be
       updated
     - added update_linked_nodes()
     - in update_bdry_node_emfield(), added code so that when the boundary node is a link, it shouldn't be
       updated
   * in lib/soap/soap.c
     - in SOAP_copy_codex(), fixed bug: need to set copy->action_being_processed to NULL if
       orig->action_being_processed is NULL
   * in src/bdry.c
     - in display_node_type_window(), added code to show linked nodes as L
   * in src/common.c
     - added is_node_link(), _node_link()
   * in bin
     - added periodic_domain.wrp


2018 FEB 02b
   * in src/bdry.c
     - in read_bdry_actions(), added Unlink() action


2018 FEB 02a
   * in bin
     - added combustion_vacuum.wrp
     - modified shock_density_wave_interaction.wrp
     - modified sod.wrp
   * in cycle/share/res_share.c
     - removed option EIGENVALUES_ENFORCED_POSITIVE_V2_BETA
     - removed function_f_TVD_AO5()
     - in find_Lambda_minus_plus_FDSplus_muscl(), took away option EIGENVALUES_ENFORCED_POSITIVE_V2_BETA
     - in find_Lambda_minus_plus_FDSplus_muscl(), now use lambdaxt_p1 and lambdaxt_p0 to evaluate
       the flux, and not just lambdaxt_p1h (makes a very small difference, but more elegant)
   * in cycle/resconv/_FDS+_Parent1/resconv.c and cycle/resconv/_FDS+_STVD2/resconv.c
     - in find_Lambda_minus_plus_Roeplus(), now use lambdaxt_p1 and lambdaxt_p0 to evaluate
       the flux, and not just lambdaxt_p1h (makes a very small difference, but more elegant)


2018 FEB 01a
   * in src/bdry.c
     - in read_bdry_actions(), added action Link
     - in read_bdry(), added initialization of link and link_emf for all nodes
   * in src/common.h
     - added definition of LINK_NONE
     - in np_t, added link and link_emf


2018 JAN 26a
   * in cycle/share/res_share.c
     - added _f_TVD2()
   * in cycle/resconv/_FDS_WENO_AO5/resconv.c
     - in find_Fstar_interface(), replaced _f_TVD5 by f_TVD2 at boundary nodes
   * in cycle/resconv/_FVS_WENO_AO5/resconv.c
     - in find_Fstar_interface(), replaced _limiter_TVD by f_TVD2 at boundary nodes
   * in cycle/resconv/_FDS_TVD2/resconv.c
     - in find_Fstar_interface(), replaced _limiter_TVD by f_TVD2 
   * in cycle/share/res_share.h
     - changed WENO_AO_GAMMALO_DEFAULT from 0.95 to 0.85
     - changed WENO_AO_GAMMAHI_DEFAULT from 0.95 to 0.85


2018 JAN 23c
   * in cycle/resconv/_FVS_TVD2/resconv.c
     - took away error when used with CDF scheme (it is now compatible)
   * in cycle/resconv/_FVS_WENO_AO5/resconv.c
     - now use TVD2 near boundary nodes instead of TVD3


2018 JAN 23b
   * in cycle/resconv
     - added _FVS_WENO_AO5


2018 JAN 23a
   * in bin
     - updated sod.wrp
   * in cycle/_predictor_corrector/cycle.c
     - in init_cycle(), uncommented update_bdry_nodes(), update_residual(), and find_ximax()
       ( necessary to prevent uninitialized variables with valgrind )


2018 JAN 21a
   * in cycle/restime/_CDF+/restime.c
     - made various modifications for the new implementation of Lambdaxt which is more simply
       defined by avoiding the limiter phi()


2018 JAN 16a
   * in src/control.c
     - in  write_modules(), moved compiler and options and compile time to table


2018 JAN 15a
   * renamed
     - zetaAclip -> zetaA2
     - zetaA -> zetaA1
     - zetaAden -> zetaA3
   * in model/share/fluid_share.c
     - in condition_Lambda_plus_minus_Harten(), condition_Lambda_plus_minus_Peclet(), 
       condition_Lambda_plus_minus_Parent(), condition_Lambda_plus_minus_Gnoffo(), changed the way 
       zetaA2 acts on aref (used to be a multiplication, now a division)
     - in condition_Lambda_plus_minus(), added fatal_error should zetaA2 be negative or greater than 1   
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), changed the default for zetaA2 from 4.0 to 0.3
   * in bin/*wrp
     - changed zetaA2 value from 2.0 to 0.5, 3.0 to 0.3, etc


2018 JAN 14a
   * in cycle/restime/_CDF+/restime.c
     - in find_Lambdaxt(), multiplied Lambaxt by 2
     - in find_Lambdaxt_interface(), multiplied Lambaxt by 2
     - added find_Phi_interface()
     - added maxminmod()
     - in find_Deltaxt(), took away CDF_LIMITER code and multiplier phi/0.5
     - in find_Deltaxt_interface(), rewrote the code associated with CDF_INTERFACE_AVERAGING_DIFFUSIVE
       and now call maxminmod() function and find_Phi_interface()
   * in bin
     - small changes to various wrp files


2018 JAN 13a
   * in src/post.c
     - added find_surface_area_given_metrics()
     - added integrate_area_on_bdry()
     - renamed _on_surface to _on_bdry
     - renamed BDRYTYPE_SURFACE to BDRYTYPE
     - in write_post_template(), added _Area() call


2018 JAN 05a
   * in tools
     - renamed mvformat.sh to renamebatch.sh
     - added several options to renamebatch.sh


2018 JAN 04d
   * in bin
     - fixed several wrp files that erroneously had StandardSteady() instead of Standard()
       or MultizoneSteady() instead of Multizone()


2018 JAN 04c
   * in tools
     - renamed makenumshort.sh to mvformat.sh


2018 JAN 04b
   * in tools
     - added makenumshort.sh


2018 JAN 04a
   * in tools/makepng.sh
     - added flag -reorderstart


2018 JAN 03b
   * in tools
     - modified makemovie.sh and makepng.sh


2018 JAN 03a
   * in tools/makepng.sh
     - added options -modulo, -imagewidth, and -fontsize
     - changed default image width to 800 from 1600


2018 JAN 02b
   * in tools/makepng.sh
     - made changes so that unexisting files are skipped instead of forcing an exit
 

2018 JAN 02a
   * in bin
     - updated ns_SDBD.wrp


2018 JAN 01c
   * in bin/sod.wrp
     - added an "acoustic" test case with very small pressure difference 


2018 JAN 01b
   * in cycle/share/cycle_share.c
     - in update_bdry_node_emfield(), changed the call to update_bdry_emfield()
   * in model/emfield/_Ohm/emfield.c and model/emfield/_Ohm_generalized/emfield.c
     - changed the parameters to update_bdry_emfield()
     - call _f_extrapol() and _f_symmetry()
   * in model/fluid/*/fluid_bdry.c 
     - added #include <model/share/model_share.h>
   * in model/share/fluid_share.c
     - took away _f_extrapol() and _f_symmetry()
   * in model/share/model_share.c
     - added _f_extrapol() and _f_symmetry()


2018 JAN 01a
   * in README, LICENSE, src/control.c
     - changed Copyright 1998-2017 to Copyright 1998-2018
   * in model/share/fluid_share.c
     - changed the call to find_P_bdry_symmetrical() and made it function of lD  
     - changed the call to find_Pstar_bdry_wall()
     - changed the call to find_w_V_P_T_bdry_inflow_reservoir()
     - changed the call to find_w_V_P_T_bdry_inflow_reservoir_2()
     - changed the call to find_w_V_P_T_bdry_symmetrical()
   * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c
     - in is_node_bdry_no_cross(), changed the numbers 9,12,14 to BDRY_SLIPWALL1, BDRY_SYMMETRICAL1,
       BDRY_SYMMETRICAL2
     - made various changes to how functions are called in sync with changes to function calls
       in model/share/fluid_share.c
   * in model/fluid/_Navier-Stokes_perfect/fluid.hh
     - changed hbw_bdry_fluid from 2 to 3
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - added BDRY_SYMMETRICAL3
     - in update_bdry_symmetrical(), made changes to accomodate for BDRY_SYMMETRICAL3
     - in update_bdry_fluid(), added fatal_error if boundary condition not valid
   * in src/bdry.c
     - just before adjust_node_type(), took away error message if hbw_bdry_fluid!=2
   * in cycle/share/cycle_share.c
     - in update_bdry_node(), added l_D and BDRYDIRECFOUND to parameters passed to update_bdry_fluid


2017 DEC 31a
   * in model/share/fluid_share.c
     - got rid of _fBC_extrapol(), _fBC1(), _fBC2()
     - added _f_extrapol(), _f_symmetry()
     - modified calls from _fBC_extrapol(), _fBC1(), _fBC2() to _f_symmetry() and f_extrapol()
   * renamed 
     - BDRY_DIREC_FOUND -> BDRYDIRECFOUND 
   * in model/fluid/*/fluid_bdry.c
     - modified calls from _fBC_extrapol(), _fBC1(), _fBC2() to _f_symmetry() and f_extrapol()
     
 

2017 DEC 30c
   * renamed
     - valA <->  valC
     - npC <->  npA
     - lC <-> lA
     - l_C <-> l_A
     - DA <-> DC
   * renamed in model/fluid
     - kC -> kwall
     - wC -> wwall
     - NeC -> Newall
     - Vc -> Vwall
     - psiC -> psiwall
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - in update_bdry_symmetrical(), got rid of rhoC, sum, and VstarBC (not used)
   * in model/share/fluid_share.c
     - in find_w_V_P_T_bdry_symmetrical(), got rid of VstarBC and sum (not used)


2017 DEC 30b
   * in bin
     - fixed Standard() to StandardSteady() and Multizone() to MultizoneSteady() when applicable


2017 DEC 30a
   * renamed
     - EIGENVALCOND_STANDARD --> EIGENVALCOND_HARTEN
     - EIGENVALCOND_DELTAP --> EIGENVALCOND_PARENT
     - condition_Lambda_absolute_standard -> condition_Lambda_absolute_Harten
     - condition_Lambda_plus_minus_standard -> condition_Lambda_plus_minus_Harten
     - condition_Lambda_plus_minus_DeltaP -> condition_Lambda_plus_minus_Parent


2017 DEC 29a
   * in src/control.c
     - in write_modules(), did cosmetic changes
   * in cycle/restime/_CDF+/restime.c
     - renamed CDF_PHI_METHOD to CDF_LIMITER
     - added definitions for CDF_INTERFACE_AVERAGING
     - in find_Deltaxt_interface(), cleaned up the code and only kept two ways of doing the averaging:
       either DIFFUSIVE or COMPRESSIVE
   * in src/common.c
     - in write_options_row(), took away one column
   * in src/main.c
     - in write_options(), took away the "Required?" column in each option
   * in src/test.c
     - in main(), took away the "Required?" column in each option of write_options_row


2017 DEC 28a
   * in cycle/restime/_CDF+/restime.c
     - in find_Deltaxt_interface(), made Deltaxt symmetric by using two superbee limiters and
       taking the arithmetic average
   * in lib/exm/exm.c
     - added function maxmag()
   * in src/control.c
     - in write_modules(), renamed Integration to Relaxation


2017 DEC 27a
   * in cycle/share/res_share.h
     - changed WENO_AO_GAMMALO_DEFAULT from WENO_AO_GAMMALO_DIFFUSIVE to WENO_AO_GAMMALO_COMPRESSIVE
     - changed WENO_AO_GAMMAHI_DEFAULT from WENO_AO_GAMMAHI_DIFFUSIVE to WENO_AO_GAMMAHI_COMPRESSIVE


2017 DEC 26a
   * in src/control.c
     - in write_modules(), rephrased "compiled on" to "was compiled on"
   * in bin
     - added leblanc.wrp
   * in model/fluid/_Navier-Stokes_perfect/fluid_init.c
     - added INIT_TYPE3, init_node_3()
   * in model/fluid/_Navier-Stokes_perfect/fluid.hh
     - changed totalinitvartypefluid from 2 to 3


2017 DEC 25a
   * in src/control.c
     - in write_modules(), made modifications so that the Copyright is written after the citations


2017 DEC 23b
   * moved README.git to GIT
   * in cycle/_multizone/cycle.hh 
     - changed _CYCLE_ACTIONNAME to "MultizoneSteady" when UNSTEADY is not set
   * in cycle/_standard/cycle.hh 
     - changed _CYCLE_ACTIONNAME to "StandardSteady" when UNSTEADY is not set
   * in lib/exm/exm.c
     - in strwrpind(), fixed a bug: if (cnt-cntbreak>width) should be if (cnt-cntbreak>width-1)
   * in src/control.c
     - in write_modules(), made small changes to improve readability   
   * in src/main.c
     - in write_options(), added flag -h
     - in main(), now calls write_modules() instead of write_options if warp is called without an 
       argument
     - now calls write_options() only if -h is specified on command line
 

2017 DEC 23a
   * in cycle/restime/_CDF+/restime.c
     - changed CDF_PHI_METHOD to CDF_PHI_METHOD_VARIABLE
     - in find_Deltaxt_interface(), Deltaxt is now determined through a SUPERBEE limiter
       halved down (introduces less compression in areas with low changes in gradients)


2017 DEC 20a
   * in cycle/resconv
     - deleted _FDS+_PCL*
     - deleted _FDS+_WENO_PL5
   * in cycle/share/res_share.c
     - deleted _f_PCL2(), _f_PCL3(), _f_PCL5()
     - added _f_TVD_AO5()
   * in cycle/share/res_share.h
     - changed WENO_AO_TYPE_DEFAULT to  WENO_AO_TYPE_COMPRESSIVE
   * in bin/shock_density_wave_interaction.wrp, bin/blast_waves.wrp
     - changed zetaA from 0 to 0.1


2017 DEC 14a
   * in cycle/_predictor_corrector/cycle.c
     - in write_runtime_template(), moved WriteDataFile() calls to before UpdateFluid()
   * in bin/
     - modified blast_waves.wrp, contactsurface.wrp, forward_step.wrp, shock_density_wave_interaction.wrp
       so that WriteDataFile() is called before UpdateFluid()


2017 DEC 13a
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - added #define SYMMETRY_TOTAL_ENTHALPY_CONSERVED FALSE
     - in void update_bdry_symmetrical(), added option to conserve total enthalpy at symmetry node
       if SYMMETRY_TOTAL_ENTHALPY_CONSERVED is set to TRUE (turned off for now)


2017 DEC 12a
   * in bin
     - added README.GNUPLOT
   * in src/post.c
     - in write_post_file_gnuplot(), added blank lines to indicate end of matrix row


2017 DEC 11b
   * in cycle/resconv/_FDS+_WENO_ADER3/resconv.c
     - in find_Fstar_interface(), now calls _f_TVD5 instead of _f_WENO5 for near bdry nodes
   * in cycle/share/res_share.c
     - define WENO_ADER_IS_EXP 2
     - define WENO_AO_IS_EXP 2
     - in _f_WENO_ADER3(), _f_WENO_ADER5(), _f_WENO_ADER6(), changed the weights for wtil1: used
       to be proportional to 1/IS^2, now are set prop to 1/IS^WENO_ADER_IS_EXP
     - in _f_WENO_AO(), changed the weights for wtil: used
       to be proportional to 1/IS^2, now are set prop to 1/IS^WENO_AO_IS_EXP  
   * in cycle/share/res_share.h
     - changed WENO_AO_TYPE_DEFAULT from WENO_AO_TYPE_COMPRESSIVE to WENO_AO_TYPE_DIFFUSIVE  
   * in src/control.c
     - changed title for parent2017a


2017 DEC 11a
   * in cycle/share/res_share.c
     - in _f_WENO_ADER3(), _f_WENO_ADER5(), _f_WENO_ADER6(), changed the weights for wtil1: used
       to be proportional to 1/IS^1, now are set prop to 1/IS^2
     - in _f_WENO_AO(), changed the weights for wtil: used
       to be proportional to 1/IS, now are set prop to 1/IS^2 (as in pre-17DEC10c versions) 
   * in cycle/share/res_share.h
     - changed WENO_AO_TYPE_MASSFRACTION from WENO_AO_TYPE_COMPRESSIVE to WENO_AO_TYPE_DIFFUSIVE


2017 DEC 10c
   * in bin
     - updated blast_waves.wrp
     - updated shock_density_wave_interaction.wrp
   * in cycle/share/res_share.c
     - in _f_WENO_ADER3(), _f_WENO_ADER5(), _f_WENO_ADER6(), changed the weights for wtil1: used
       to be proportional to 1/IS^4, now are set prop to 1/IS
     - in _f_WENO_AO(), changed the weights for wtil: used
       to be proportional to 1/IS^2, now are set prop to 1/IS 
   * in cycle/share/res_share.h
     - changed WENO_AO_TYPE_MASSFRACTION from WENO_AO_TYPE_DIFFUSIVE to WENO_AO_TYPE_COMPRESSIVE
   * in src/main.c
     - in write_options(), added option -py
     - in main(), added "gnuplot" to the list of possible strings following -pt flag
     - in main(), added code to process -py
   * in src/post.c   
     - added write_post_file_gnuplot()
     - in write_post_file(), added call to write_post_file_gnuplot()
     - added create_domain_of_cuts_along_y()


2017 DEC 10b
   * in src/control.c
     - in write_modules(), renamed "WARP version" to "CFDWARP version"


2017 DEC 10a
   * in bin
     - renamed blastwaves.wrp to blast_waves.wrp
     - renamed tunnel.wrp to forward_step.wrp
     - added shock_density_wave_interaction.wrp


2017 DEC 09a
   * in bin
     - added blastwaves.wrp
     - updated contactsurface.wrp
   * in cycle/_predictor_corrector/cycle.c
     - fixed bug: in runtime_actions_cycle_specific(), added 
       add_double_to_codex(codex,"time",gl->time) after time is updated by dt


2017 DEC 08b
   * in bin
     - modified ringleb.wrp
     - added Pdiff_norm.eqn


2017 DEC 08a
   * in bin
     - added ringleb.wrp   
   * in tools/ringleb.c
     - in main(), when wiritng out Region() command, renamed "1" to "INIT_TYPE1"


2017 NOV 26b
   * in bin
     - updated 3DDBD_actuator_perfect.wrp


2017 NOV 26a
   * in bin
     - updated 3DDBD_actuator.wrp, 3DDBD_actuator_perfect.wrp
   * in model/thermo/_generic/thermo.c
     - in double _T_from_w_e(), took away elaborate explanations when a crash happens: 
       could be misleading


2017 NOV 25a
   * in cycle
     - added _predictor_corrector
   * in cycle/restime
     - added _RK1, _RK2, _RK3, _RK4
   * in cycle/ts
     - added _none
   * in cycle/restime/_restime.h
     - added update_U_predictor_corrector()
   * in src/common.h
     - in gl_t, added subiter_pc
     - in npbs_t, added dUstar1,dUstar2,dUstar3,dUstar4 if _RESTIME_RK4 is defined
   * in src/control.c
     - in  bibname, added gottlieb1998a


2017 NOV 24a
   * in lib/latex
     - modified the WARP logo to CFD^WARP


2017 NOV 23a
   * in cycle/share/cycle_share.c
     - renamed 2147483647 to LONG_MAX
   * in lib/exm/exm.c
     - in argrank(), added code to check if a flag is called twice; if so, call EXM_fatal_error()
   * in src/common.h
     - added #include <limits.h>
   * in src/control.c
     - renamed WARP to CFDWARP
   * in src/main,c
     - in main(), improved error handling of flags
   * in README
     - renamed WARP to CFDWARP


2017 NOV 22a
   * in src/control.c
     - in readcontrol_actions(), rewrote the part about DISTDOMAIN_METHOD: now leaves 
       gl->numdomain_* intact should DISTDOMAIN_METHOD be set to DISTDOMAIN_METHOD_USERSPEC
   * in src/common.h
     - now define DISTDOMAIN_METHOD_AUTO and DISTDOMAIN_METHOD_USERSPEC
   * in src/main.c
     - in write_options(), updated the info for -dom flag
     - in main(), rewrote the part about the processing of the -dom flag


2017 NOV 21a
   * in src/common.h
     - added definitions of DISTDOMAIN_METHOD_*
     - in gl_t added DISTDOMAIN_METHOD
   * in src/common.c
     - in fatal_error(), renamed WARP to CFDWARP
   * in src/control.c
     - in readcontrol_actions(), added a switch for gl->DISTDOMAIN_METHOD when determining
       gl->numdomain_i, gl->numdomain_j, gl->numdomain_k
   * in src/main.c
     - in write_options(), added the option -dom
     - in main(), added code to handle -dom option


2017 NOV 20a
   * in cycle/tsemf/_Newton/tsemf.c
     - removed update_dUstar_emfield_Newton_1()
     - removed update_dUstar_emfield_Newton_2()
     - in update_U_emfield_Newton(), now call update_dUstar_emfield_Newton_ij()
   * in cycle/share/tsemf_share.c
     - renamed update_dUstar_emfield_Newton_ij() to update_dUstar_emfield_Newton_ij_2()
     - added update_dUstar_emfield_Newton_ij_1()
     - added a new update_dUstar_emfield_Newton_ij() which decides to call either 
       update_dUstar_emfield_Newton_ij_1() or update_dUstar_emfield_Newton_ij_2() depending
       on which is faster


2017 NOV 18a
   * in cycle/*/cycle.c
     - in runtime_actions_cycle_specific(), added error checking for parameters passed to
       UpdateFluid() such as dt, CFL, sigma1, phi1, phi2, etc
   * in cycle/share/cycle_share.c
     - in read_UpdateEMField_arguments(), added error checking for parameters Lc, relaxEMF,
       numsubiter_emf, dt


2017 NOV 16b
   * in src/control.c
     - in find_metrics_on_all_nodes(), reverted the loops zone.is-1, zone.js-1 to zone.is, zone.js
       to pre-17nov02a versions 


2017 NOV 16a
   * in bin
     - added 3DDBD_actuator_perfect.wrp
     - updated 3DDBD_actuator.wrp
     - updated DBD_actuator.wrp


2017 NOV 15a
   * in bin
     - updated DBD_actuator.wrp
   * in cycle/ts/doc/report.tex
     - added section on multigrid in 2D with contant coefficients
   * in cycle/tsemf/_Newton/tsemf.c
     - in update_U_emfield(), fixed a bug: within fatal_error, %s should be %ld


2017 NOV 14a
   * in COMPILE
     - renamed WARP to CFDWARP
   * in model/fluid/doc/Axisymmetric_Theory/axisym.tex
     - fixed a bug: got rid of rightcaption within {figure}[rightcaption,hb]


2017 NOV 10a
   * in CHANGELOG, LICENSE, USAGE
     - renamed WARP to CFDWARP
   * in model/share/fluid_share.c
     - added find_Z(), find_dZU_dU(), find_LambdaZ() and set those matrices to unity when 
       _FLUID_PLASMA is not defined
   * in model/fluid/_Favre-Reynolds/fluid.c, model/fluid/_Favre-Reynolds_Tv/fluid.c, 
     and model/fluid/_Navier-Stokes/fluid.c model/fluid/_Navier-Stokes_perfect/fluid.c
     - removed find_Z() and find_LambdaZ()


2017 NOV 07d
   * in config/config.c
     - in output_makefileheader(), took away -s flag when COMPILER==CO_GCC (stripping can cause issues
       when debugging)
   * in cycle/tsemf/_IMAF/tsemf.c
     - now set MULTIDIMENSIONAL_BDRY_TREATMENT to true
   

2017 NOV 07c
   * in cycle/tsemf/_IMAF/tsemf.c
     - added update_dUstar_emfield_IMAF_secondsweep()
     - added update_dUstar_emfield_Newton_jk_IMAF()
     - added update_U_emfield_IMAFi()
     - in update_U_emfield_IMAFk(), now call update_dUstar_emfield_IMAF_secondsweep()
     - in update_U_emfield(), added call to update_U_emfield_IMAFi()
   * in cycle/share/cycle_share.c  
     - in add_constants_to_codex(), added var TSEMF_IMAFi
     - in read_UpdateEMField_arguments(), added TSEMF_IMAFi


2017 NOV 07b
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_Newton_ij(), fixed a bug: gl->domain should be zone in a few locations
     - in update_dUstar_emfield_Newton_ij(), fixed another bug: xdma[EXM_ai2(xdmagl,hbw,line)] should
       be set to 1.0 prior to the boundary conditions
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_dUstar_emfield_Newton_ij_IMAF(), fixed a bug: gl->domain should be zone in a few locations


2017 NOV 07a
   * in cycle/share/cycle_share.c and cycle/share/tsemf_share.c and cycle/tsemf/_IMAF/tsemf.c
     - renamed TSEMF_ADI2 to TSEMF_ADIi
     - renamed TSEMF_ADI3 to TSEMF_ADIk
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added TSEMF_IMAFk
     - in read_UpdateEMField_arguments(), added TSEMF_IMAFk to the list of methods that can accept
       a 4th argument
   * in cycle/share/tsemf_share.c
     - in update_U_emfield_ADIk() made changes so this function can be called in 2D as well
   * in cycle/tsemf/_IMAF/tsemf.c
     - turned off MULTIDIMENSIONAL_BDRY_TREATMENT
     - renamed update_dUstar_emfield() to update_dUstar_emfield_IMAF()
     - added update_dUstar_emfield_Newton_ij_IMAF()
     - added update_U_emfield_IMAFk()
     - in update_U_emfield(), added call to update_U_emfield_IMAFk()
 

2017 NOV 06a
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added TSEMF_ADI3
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_Newton_ij(), fixed a bug: end3DL shouldn't be there


2017 NOV 05a
   * in bin
     - updated DBD_actuator.wrp
     - updated ns_SDBD.wrp
   * in cycle/share/tsemf_share.c
     - added update_dUstar_emfield_Newton_ij()
     - added update_U_emfield_ADI3()
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_U_emfield(), added call to update_U_emfield_ADI3()
   * in cycle/tsemf/_Newton/tsemf.c
     - in update_U_emfield(), fixed some bugs (due to updates elsewhere in the code) 


2017 NOV 02d
   * in src/post.c
     - in write_post_file_nodplot(), write_post_file_tecplot(), write_post_file_vtk(),
       got rid of is_node_valid() checks when calling find_post_proc_var_value()
   * in model/_generic/model.c
     - in find_post_proc_var_value(), added *varvalue=0.0; at beginning of function
       to make sure it is always initialized
   * in lib/soap/soap.c
     - in SOAP_insert_line_numbers_in_code(), fixed a bug: cnt should be increased by
       strlen(newlinestr) only if SOAP_strins() was called


2017 NOV 02c
   * in model/_generic/model.c
     - in find_post_proc_var_name(), only call find_post_variable_value_fluid()
       when node is valid (TYPELEVEL_FLUID) and find_post_variable_value_emfield() when
       node is valid (TYPELEVEL_EMFIELD)
   * in model/fluid/*/fluid_post.c
     - in find_post_variable_value_fluid(), commented out assert(is_node_resumed(np[l]));


2017 NOV 02b
   * in bin
     - modified ns_SDBD.wrp


2017 NOV 02a
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_Newton_jk(), fixed a bug: for (DIREC_FOUND && theta==0) added
       xdma[EXM_ai2(xdmagl,hbw,line)]=1.0;
   * in model/emfield/_Ohm*/emfield.c
     - in _sigma(), now calls directly _sigma_mem() instead of using the stored sigma_mem in RAM
   * in src/control.c
     - in find_metrics_on_all_nodes(), fixed a bug: when calling update_metrics_at_interface(),
       needed to set the loop from zone.is-1, zone.js-1, zone.ks-1 instead of zone.is, zone.js, zone.ks


2017 NOV 01a
   * in cycle/share/tsemf_share.c
     - added update_dUstar_emfield_Newton_jk()
     - added update_U_emfield_ADI2()
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_U_emfield(), added call to update_U_emfield_ADI2()
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added TSEMF_ADI2 to SOAP vars


2017 OCT 28a
   * in model/share/fluid_share.c
     - added _sigma_positive(), _alpha(), find_alpha(), find_Z(), find_dZU_dU(), find_LambdaZ()
   * in model/fluid/_drift-diffusion/fluid.c and model/fluid/*/fluid_plasma.c
     - deleted _sigma_positive(), _alpha(), find_alpha(), find_Z(), find_dZU_dU(), find_LambdaZ()
   * in bin
     - altered MHD_generator.wrp


2017 OCT 20a
   * in bin
     - altered DBD_actuator.wrp
     - altered 3DDBD_actuator.wrp
     - deleted DBD_actuator_test.wrp


2017 OCT 16a
   * in bin
     - altered DBD_actuator.wrp
     - altered discharge.wrp
   * in model/fluid/_drift-diffusion/fluid.c
     - added find_dZU_dU()
     - altered find_LambdaZ(): now don't set LambdaZ to the diagonal elements of Z, rather
       define LambdaZ as LambdaZ*U=Z*U with LambdaZ all diagonal
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - added find_dZU_dU()
     - altered find_LambdaZ(): now don't set LambdaZ to the diagonal elements of Z, rather
       define LambdaZ as LambdaZ*U=Z*U with LambdaZ all diagonal


2017 OCT 15b
   * in cycle/restime/_CDF+/restime.c
     - in find_Lambdaxt() and find_Lambdaxt_interface(), made sure LambdaZ is set to zero if negative
   * in model/share/fluid_share.c
     - in find_Gamma(), reverted to OCT 14a version


2017 OCT 15a 
   * in src/test.c
     - moved find_ZUstar() out of #ifdef _FLUID_PLASMA
     - added test_LambdaZ()
     - in main() added flag LambdaZ
   * in model/share/fluid_share.c
     - in find_Gamma(), changed the way the charged species are preconditioned: now the preconditioning
       is function of LambdaZ
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - in find_LambdaZ(), made changes: now don't set LambdaZ to the diagonal elements of Z, rather
       define LambdaZ as LambdaZ*U=Z*U with LambdaZ all diagonal


2017 OCT 14a
   * in src/test.c
     - added find_ZUstar()
     - added test_dZU_dU()
     - in main(), added dZUdU option
   * in src/common.c
     - in write_options_row(), fixed a bug: added 10000 characters to malloc size to prevent running
       out of memory when line gets broken several times
   * in cycle/share/ts_share.c
     - in add_Z_dUstardt_dUstar_to_TDMA(), replaced Z by dZU_dU  
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - added find_dZU_dU()


2017 OCT 10a
   * in model/fluid/_drift-diffusion/fluid.c
     - changed DSTAR_DIAGONAL from FALSE to TRUE
     - added find_Dstar_test()


2017 OCT 09b
   * in src/test.c
     - got rid of process_flag_1() function
     - in main(), now calls process_flag_string() instead of process_flag_1()


2017 OCT 09a
   * in bin
     - deleted DBD_actuator2.wrp
     - altered DBD_actuator.wrp so that it corresponds precisely to the 2D version
       of 3DDBD_actuator.wrp
   * in src/test.c
     - applied automatic indenting/formatting 


2017 OCT 08a
   * in lib/exm/exm.c
     - moved #include "exm.h" after all other includes
   * in src/main.c
     - deleted write_options_row()
     - changed all calls to write_options_row() to include the column widths
   * in src/common.c
     - added write_options_row() with column widths as parameters
   * in src/test.c
     - in test_Dstar(), added comparison between DstartesttimesUstar and DstartimesUstar
     - in main(), added flag -i and -node
     - in main(), added calls to write_options_row()
   * in model/fluid/*/fluid_plasma.c
     - renamed find_Dstar() to find_Dstar_test()
     - added new find_Dstar() that is diagonal and such that DstartesttimesUstar=DstartimesUstar


2017 OCT 04a
   * in cycle/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), added option EIGENVALUES_ENFORCED_POSITIVE_V2_BETA
   * in model/metrics/
     - changed .active from _finite_volume to _generic


2017 SEP 23a
   * in src/post.c
     - in integrate_pressure_force_on_surface(), added code so that pressure on surfaces is found
       using metrics at the interface
     - added constant FSTAR_METRICS at beginning of file
     - set FSTAR_METRICS equal to FSTAR_METRICS_EXTRAPOLATED 
   * in model/metrics/
     - added _finite_volume/


2017 SEP 10a
   * in cycle/restime/_CDF+/restime.c
     - in find_Deltaxt(), added CDF_PHI_METHOD_VARIABLE  option
     - by default, CDF_PHI_METHOD is set to CDF_PHI_METHOD_CONSTANT


2017 SEP 05c
   * in bin
     - improved 3DDBD_actuator.wrp


2017 SEP 05b
   * in bin
     - renamed SDBD.wrp to ns_SDBD.wrp and made improvements 


2017 SEP 05a
   * in bin
     - added SDBD.wrp
     - added EoverN.eqn


2017 SEP 04a
   * in cycle/*/cycle.c
     - in write_runtime_template(), changed default values for sigma1 and sigma2 from 0.5 to 0.3


2017 AUG 30a
   * in tools
     - updated tarwarp.sh


2017 AUG 28a
   * in bin
     - modified 3DDBD_actuator.wrp


2017 AUG 24a
   * in src/bdry.c
     - in display_node_type_window(), fixed 2 bugs related to EMFIELD nodes being shown erroneously as
       suspended when they were not. This required the addition of || TYPELEVEL==TYPELEVEL_EMFIELD
       in 2 places


2017 AUG 13a
   * in bin
     - updated 3DDBD_actuator.wrp and dischargemagnetic.wrp
   * in tools/test.c
     - added test_long() and test_long_long()
   * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
     - in update_bdry_wall(), took away dwall from variable definitions (not needed anymore)
   * in model/share/fluid_share.c
     - in is_bdry_cathode(), modified the approach 3 but reverted to approach 2


2017 AUG 10a
   * in tools/makemissing.sh
     - changed cp by ln -s 
   * in model/fluid/_*_plasma/fluid_bdry.c
     - in update_bdry_wall(), took away dwall, Nminus, Nplus, fact_cathode
     - in update_bdry_wall(), now call is_bdry_cathode()
   * in model/fluid/_*_plasma/fluid_plasma.c
     - took away _betan(), _betai(), _betac(), _betaplus(), _betaminus(), _rhoc()
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), took away dwall, Nminus, Nplus, fact_cathode
     - in update_bdry_wall(), now call is_bdry_cathode()
   * in model/share/fluid_share.c
     - added _betan(), _betai(), _betac(), _betaplus(), _betaminus(), _rhoc(),
       is_bdry_cathode()
     - in is_bdry_cathode(), now do some smoothing of phi perpendicular along the boundary
       surface  (approach 2)


2017 AUG 08a
   * in src/post.c
     - in create_domain_of_cuts_along_x(), got rid of all DISTMPI code
     - added create_domain_of_cuts_along_z()
   * in src/main.c
     - in write_options(), added option -pz
     - in main(), added code for -pz option


2017 AUG 07a
   * in bin/*wrp
     - renamed PRECON_LOCALTIMESTEPPLASMA to PRECON_LOCALEIGENVALUE
   * in cycle/*/cycle.c
     - in runtime_actions_cycle_specific(), got rid of PRECON_LOCALTIMESTEPPLASMA
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), got rid of PRECON_LOCALTIMESTEPPLASMA
   * in cycle/share/cycle_share.h
     - got rid of PRECON_LOCALTIMESTEPPLASMA
   * in model/share/fluid_share.c
     - in find_Gamma(), got rid of option PRECON_LOCALTIMESTEPPLASMA
     - in find_Gamma(), added plasma specific modifications after all PRECON_ options 
       are processed


2017 AUG 06a
   * in model/share/fluid_share.c
     - in find_w_V_P_T_bdry_symmetrical(), now treat all charged species the same at the symmetry 
       boundary: now, the symmetry condition is such that there is no gradient of the number density
       of the charged species perpendicular to the symmetry plane


2017 AUG 05a
   * in bin
     - updated 3DDBD_actuator.wrp
   * in model/share/fluid_share.c
     - in find_w_V_P_T_bdry_symmetrical(), now always use first-order extrapolation for w for negative 
       species


2017 JUL 31a
   * in bin
     - updated 3DDBD_actuator.wrp


2017 JUL 26a
   * in bin
     - added flat_lowRe.wrp


2017 JUL 18a
   * in src/main.c
     - in main(), now call find_zone_intersection() instead of is_zone_in_zone() when checking
       the -pr arguments
   * in src/common.c
     - added find_zone_intersection()
     - in _zone_intersection(), now calls find_zone_intersection()


2017 JUN 24a
   * in bin/3DDBD_actuator.wrp
     - made some improvements


2017 JUN 11a
   * in bin/*.wrp
     - renamed Block( to JoinCorners(
   * in lib/gridg/*.c, lib/gridg/*.h
     - renamed Block to JoinCorners


2017 JUN 09a
   * in bin
     - updated 3DDBD_actuator.wrp
     - updated heatbdry.wrp
     - updated sod.wrp


2017 JUN 05a
   * in cycle/resconv/doc/report.tex
     - made some improvements


2017 JUN 04a
   * in cycle/resconv/doc/report.tex
     - made some improvements


2017 JUN 03a
   * in cycle/resconv
     - added directory doc


2017 MAY 28a
   * in model/emfield/_Ohm*/emfield.c
     - in find_dtau_emfield(), made time step function of sigma at neighboring interfaces
       rather than sigma at the node in question: improves stability where there are
       large conductivity variations
   * in bin
     - modified 3DDBD_actuator.wrp
   * in cycle/resconv/_FDS_WENO_AO5/resconv.c
     - now calls _f_TVD5 instead of _F_WENO5


2017 MAY 26a
   * in cycle/share/res_share.c
     - in _f_TVD(), and _f_PCL*(), changed call from _limiter_positive_coefficients() to 
       _f_positive_coefficients()
     - replaced _limiter_positive_coefficients() to _f_positive_coefficients() and added a
       parameter
     - added _f_TVD3(), _f_TVD4(), _f_TVD5()
   * in cycle/resconv/_FDS+_TVD5/resconv.c
     - in find_Fstar_interface(),  now finds musclvarsL and musclvarsR using _f_TVD5()
   * in cycle/resconv/_FDS+_WENO_PL5/resconv.c
     - in find_Fstar_interface(),  now finds musclvarsL and musclvarsR using updated 
       call to _f_positive_coefficients()
   * in cycle/resconv/_FDS+_WENO_AO*/resconv.c
     - in find_Fstar_interface(), now calls _f_TVD5() instead of _f_WENO5() at boundaries


2017 MAY 25a
   * renamed
     - _f_TVD -> _limiter_TVD
     - _f_positive_coefficients -> _limiter_positive_coefficients
   * in cycle/share/res_share.c
     - added _f_TVD (general TVD flux function independent of order of accuracy)
   * in cycle/resconv/_FDS+_TVD5/resconv.c
     - in find_Fstar_interface(), now calls the new _f_TVD() function


2017 MAY 23a
   * in cycle/resconv/
     - renamed _FDS+_TVD3/ to _FDS+_TVD5/
   

2017 MAY 21a
   * in bin
     - modified slightly DBD_actuator.wrp


2017 MAY 20b
   * in cycle/resconv/
     - added directory _FDS+_WENO_PL5
   * in bin
     - update DBD_actuator.wrp
     - added 3DDBD_actuator.wrp
    

2017 MAY 20a
   * in bin
     - added bdrylayer.wrp and rarefaction.wrp


2017 MAY 17a
   * in cycle/share/res_share.c
     - added _f_PCL2()


2017 MAY 16a
   * in cycle/resconv/
     - added _FDS+_PCL3
     - added _FDS+_PCL5
     - added _FDS+_TVD3
   * in cycle/share/res_share.c
     - in _f_WENO_AO5() took away code related to _f_positive_coefficients()
     - in _f_WENO5() took away code related to _f_positive_coefficients()
     - added _f_PCL3()
     - added _f_PCL5()


2017 MAY 15a
   * in cycle/share/res_share.c
     - in _f_WENO_AO5(), added call to _f_positive_coefficients()
     - in _f_WENO5(), added call to _f_positive_coefficients()
     - added _f_positive_coefficients()


2017 MAY 10a
   * in model/emfield/_Ohm/emfield.c
     - in find_post_variable_value_emfield(), fixed a bug: the find_J() function was setting
       passing E instead of J as a parameter


2017 MAY 08b
   * in src/data.c
     - in read_data_file_interpolation(), added fflush(stdout); after fprintf(stdout,".");
     - added MPI_Barrier() before wfprintf(stdout,"Fluid/%ld"..
     - added MPI_Barrier() before wfprintf(stdout,"EMField/%ld"..


2017 MAY 08a
   * in cycle/share/res_share.h
     - added constants WENO_AO_GAMMALO_DEFAULT, WENO_AO_GAMMAHI_DEFAULT, WENO_AO_TYPE_MASSFRACTION,
       WENO_AO_GAMMALO_MASSFRACTION, WENO_AO_GAMMAHI_MASSFRACTION
   * in cycle/resconv/_FDS*_WENO_AO*/resconv.c
     - in find_Fstar_interface(), changed constants WENO_AO_*_DIFFUSIVE to WENO_AO_*_MASSFRACTION
     - in find_Fstar_interface(), changed constants WENO_AO_*_COMPRESSIVE to WENO_AO_*_DEFAULT


2017 MAY 07b
   * in cycle/restime/_CDF+/restime.c
     - in find_Deltaxt_interface(), changed limiter from OSPRE to MINMOD: anything other than MINMOD
       is not guaranteed to be monotone and is not recommended
   * in cycle/resconv/
     - added _FVS+_WENO_AO5


2017 MAY 07a
   * in CHANGELOG
     - fixed error in 2017 MAY 06b  


2017 MAY 06b
   * in model/emfield/*/emfield.c
     - in _sigma_interface(), made two changes when at least one node is not fluid: (i) take
       the harmonic mean between the two sigmas, and (ii) set sigma to zero if one of the 
       nodes is a dielectric boundary
     - in find_linearization_coefficients_inner_node_emfield() removed code that 
       imposed sigma=0 at dielectric boundaries
     

2017 MAY 06a
   * renamed
     - PRECONDITIONER_ to PRECON_
     - TSEMFMETHOD_ to TSEMF_


2017 MAY 05b
   * in cycle/share/cycle_share.h
     - added 10 to PRECONDITIONER_* so that an error message is generated when TRUE or FALSE
       is specified as a parameter instead of PRECONDITIONER_*
   * in lib/soap/doc/report.tex
     - updated document: now the system() command can be used with MPI including mpich


2017 MAY 05a
   * in tools
     - added substr_perl_wrpfiles.sh
   * in bin
     - in various files, added zetaAclip
   * in model/share/fluid_share.c
     - got rid of constant EIGENVALUE_CLIPPING_FACTOR and replaced by jacvarsp0.zetaAclip
     - in find_Gamma(), added specific code when _FLUID_DRIFTDIFFUSION is defined
     - in find_Gamma(), added condition for _FLUID_EENERGY when altering Gamma[fluxee][fluxee] 
     - added set_jacvars_eigenconditioning_constants()
   * in model/fluid/*/fluid.hh
     - added zetaAclip to jacvars_t
   * in model/fluid/*/fluid_conv.c
     - replaced jacvars->zetaA=gl->model.fluid.zetaA; ... by call to 
       set_jacvars_eigenconditioning_constants()
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), added zetaAclip
     - in read_model_fluid_actions(), added a read for zetaAclip
   * in model/fluid/_drift-diffusion/fluid.c
     - commented out find_Gamma() and find_Gamma_inverse()


2017 MAY 04a
   * in src/common.h
     - in gl_t, added PRECONDITIONER and got rid of PRECONDITIONING and LOCAL_TIME_STEPPING
   * renamed
     - scheme_tsemf to tsmethod_emf
     - DDADI -> TSEMFMETHOD_DDADI, ADI -> TSEMFMETHOD_ADI, etc
   * in cycle/_*/cycle.c
     - in write_runtime_template(), renamed PRECONDITIONING to PRECONDITIONER
     - in runtime_actions_cycle_specific(), made changes to how the arguments are read for
       new PRECONDITIONER variable
   * in cycle/share/cycle_share.c
     - in add_constants_to_codex(), added PRECONDITIONER constants 
     - in process_code_runtime(), replaced LOCAL_TIME_STEPPING 
       by gl->PRECONDITIONER!=PRECONDITIONER_CONSTANTTIMESTEP
   * in cycle/ts/_*/ts.c
     - replaced gl->PRECONDITIONING by gl->PRECONDITIONER!=PRECONDITIONER_LOCALTIMESTEP
   * in model/fluid/_*/fluid.c
     - deleted find_Gamma()
     - deleted find_Gamma_inverse()
   * in model/share/fluid_share.c
     - added find_Gamma()
     - added find_Gamma_inverse()


2017 MAY 03a
   * in bin
     - updated 3DDBD.wrp


2017 MAY 02a
   * in cycle/tsemf/
     - added _IMAF_ADI
   * in cycle/share/cycle_share.c
     - in add_ts_modules_to_codex(), added ADI_IMAF
     - in read_UpdateEMField_arguments(), added ADI_IMAF
     - added update_prim_emfield_mem_in_zone_4() where linearization coefficients are found
       if _TSEMF_STORE_COEFFICIENTS is defined
     - in update_prim_emfield_mem_in_zone(), added call to update_prim_emfield_mem_in_zone_4()
     - in initialize_residual_emfield(), fixed a bug: 1.0e0/gl->nn should be 1.0e0/(double)gl->nn
   * in cycle/share/tsemf_share.c
     - in update_U_from_dUstar_emfield(), fixed a bug: 1.0e0/gl->nn should be 1.0e0/(double)gl->nn
     - added update_U_and_Res_from_dUstar_emfield()
     - in init_dUstar_emfield_ADI(), now include update to boundary nodes when 
       adding RHS of TDMA to Ustar 
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_dUstar_emfield(), took away find_linearization_coefficients_inner_node_emfield()


2017 MAY 01a
   * in model/emfield/_Ohm/emfield.c
     - in find_J(), fixed a bug: need to evaluate J at nearest inner node  
   * in model/emfield/_Ohm_generalized/emfield.c
     - added constant STORE_J_MEM at beginning of file
     - in find_prim_emfield_mem_3(), now stores J in mem only if STORE_J_MEM is TRUE
     - in find_J(), now computes J from Jstar at interfaces if STORE_J_MEM is FALSE


2017 APR 30c
   * in model/emfield/_none/emfield.c
     - changed parameters of find_emfield_force() to include l and *np instead of np
     - changed parameters of _E_dot_J() to include l and *np instead of np


2017 APR 30b
   * in src/common.h
     - in np_t, took away J variable when _EMFIELD_OHM is declared
   * in model/emfield/_Ohm/emfield.c
     - in find_prim_emfield_mem_3(), got rid of all the code
     - in read_model_emfield_actions(), took away initialization of J
     - in find_J(), now calls find_J_at_node_from_Jstar_at_interfaces() instead of obtaining J 
       from memory
   * various files
     - changed parameters of find_J() to include l and *np instead of np
     - changed parameters of find_emfield_force() to include l and *np instead of np
     - changed parameters of _E_dot_J() to include l and *np instead of np
    

2017 APR 30a
   * in src/common.h
     - in np_t, added X_int[nd] and Omega_int[nd]
   * in model/metrics/_generic/metrics.c
     - added update_metrics_at_interface()
     - in find_metrics_at_interface(), now uses metrics stored in memory instead of 
       recalculating them everytime
   * in src/control.c
     - in readcontrol_actions(), expand domain by +1 when calling find_metrics_on_all_nodes
       when DISTMPI is set
     - in find_metrics_on_all_nodes(), now call update_metrics_at_interface()


2017 APR 29a
   * in bin
     - added the file 3DDBD.wrp
   * in USAGE
     - added information about CPU profiling
     - updated information about threading
   * in src/data.c
     - in read_data_file_interpolation(), fixed a bug: the calls to omp_set_lock() and
       omp_unset_lock() were not within #ifdef OPENMPTHREADS  ... #endif
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_dUstar_emfield(), got rid of a redundant call to 
       find_linearization_coefficients_inner_node_emfield()


2017 APR 27a
   * in cycle/resconv/
     - added _FDS_WENO_AO5/
   * in config/config.c
     - got rid of function mod() and replaced with macro mod() from lib/exm/exm.c
     - in get_one_letter(), made changes so that capital letters are accepted
       as input
     - in handle_choices(), made changes so that the choice after 'z' is 'A', 'B', etc
   * in model/share/fluid_share.c
     - changed EIGENVALUE_CLIPPING_FACTOR from 10.0 to 2.0


2017 APR 25a
   * in lib/soap/soap.c
     - in SOAP_insert_line_numbers_in_code(), rewrote code for better line number assessment
     - added SOAP_insert_line_numbers_in_code_backward()
     - in clean_code(), improved error message for non matching parentheses


2017 APR 24a
   * in lib/soap/soap.c
     - in SOAP_insert_line_numbers_in_code(), rewrote code for better line number assessment
     - in SOAP_process_code(), added error for parentheses not being closed properly
     - in SOAP_process_code(), init codex->action_being_processed before checking for parenthese of ;
       error


2017 APR 23a
   * in bin
     - added emftest.wrp


2017 APR 22a
   * deleted
     - cycle/resconv/_FDS+_TVD2-WENO5/
     - cycle/resconv/_FDS+_TVD2-WENO7/
     - cycle/resconv/_FDS+_TVD2-WENO9/
   * in model/share/fluid_share.c
     - deleted max_order_accuracy_near_discontinuities()


2017 APR 20a
   * renamed
     - WENO_AO_gammalo_upperlimit to WENO_AO_GAMMALO_COMPRESSIVE 
     - WENO_AO_gammalo_lowerlimit to WENO_AO_GAMMALO_DIFFUSIVE
     - WENO_AO_gammahi_upperlimit to WENO_AO_GAMMAHI_COMPRESSIVE 
     - WENO_AO_gammahi_lowerlimit to WENO_AO_GAMMAHI_DIFFUSIVE
     - WENO_AO_TYPE_STANDARD to WENO_AO_TYPE_DIFFUSIVE
   * in cycle/resconv/_FDS+_WENO_AO5/resconv.c
   * in cycle/resconv/_FDS+_WENO_AO7/resconv.c
   * in cycle/resconv/_FDS+_WENO_AO9/resconv.c
     - in find_Fstar_interface(), now calls is_musclvar_a_mass_fraction()
       and makes the WENO_AO*() diffusive instead of compressive when
       the musclvar is a mass fraction


2017 APR 18c
   * renamed
     _f_TVD_limiter() to _f_TVD()
   * in cycle/share/res_share.c
     - in _f_TVD(), changed parameters from num, den to to r
     - in _f_TVD(), made various limiters function of r instead of num and den
   * in various files
     - changed call to _f_TVD()
   * in cycle/share/res_share.h
     - added WENO_AO_gammalo_upperlimit, WENO_AO_gammahi_upperlimit
     - added WENO_AO_gammalo_lowerlimit, WENO_AO_gammahi_lowerlimit
   * in cycle/resconv/_FDS+_WENO_AO*/resconv.c
     - in find_Fstar_interface(), changed WENO_AO_gammalo_default to WENO_AO_gammalo_upperlimit
     - in find_Fstar_interface(), changed WENO_AO_gammahi_default to WENO_AO_gammahi_upperlimit


2017 APR 18b
   * in src/common.c
     - removed minmod()
   * in lib/exm/exm.c
     - added minmod(), minmod_old(), minmod3()
   * in cycle/resconv/_FDS_STVD2/resconv.c
   * in cycle/resconv/_FDS_Cauchy2/resconv.c
     - removed minmod2(), minmod3() function declarations
     - renamed minmod2() calls to minmod() calls
   * in cycle/resconv/_FDS+_STVD2/resconv.c
     - removed minmod3()
     - removed minmod2()


2017 APR 18a
   * in lib/exm/exm.c
     - added function notzero()
   * in various files
     - got rid of declaration of _nonzero()
     - renamed _nonzero to notzero
     - added one parameter to notzero (the small value that replaces zero)


2017 APR 17b
   * in cycle/share/res_share.c
     - in _f_WENO_AO(), _f_WENO_AO5(), _f_WENO_AO7(), _f_WENO_AO9()
       added parameters gammalo, gammahi, WENO_AO_TYPE
   * in cycle/share/res_share.h
     - added constants WENO_AO_gammalo_default, WENO_AO_gammahi_default, WENO_AO_TYPE_STANDARD
       WENO_AO_TYPE_COMPRESSIVE, WENO_AO_TYPE_DEFAULT
   * in cycle/resconv/_FDS+_WENO_AO*/resconv.c
     - in find_Fstar_interface(), now calls _f_WENO_AO*() 
       with WENO_AO_gammalo_default,WENO_AO_gammahi_default,WENO_AO_TYPE_DEFAULT


2017 APR 17a
   * in src/data.c
     - in read_data_file_interpolation(), fixed a bug: added variable omp_lock_t *nodelock
       to ensure two threads don't write to the init data at the same time.


2017 APR 16c
   * in cycle/restime/_CDF+/restime.c
     - commented out find_Deltaxt_from_Uprime()
   * in cycle/share/res_share.c
     - added comments at top of file


2017 APR 16b
   * in cycle/resconv/_FDS+_*/resconv.c
     - replaced #define numiter 2 by #define numiter numiter_FDSplus_default
   * in cycle/resconv/_FVS_StegerWarming1/resconv.c
   * in cycle/resconv/_FVS+_TVD2/resconv.c
     - replaced #define numiter 2 by #define numiter numiter_FVSplus_default
   * in cycle/share/res_share.h
     - added constants numiter_FDSplus_default and numiter_FVSplus_default


2017 APR 16a
   * in cycle/resconv/_FDS+_WENO_AO*/resconv.c
     - in find_Fstar_interface(), replaced +3, +4, +5, etc with hbw_resconv_fluid
   * in cycle/resconv/_FDS_WENO*/resconv.c
     - upgraded the code with template taken from _FDS+_WENO*
   * in cycle/resconv/_FDS+_WENO_ADER*/resconv.c
     - upgraded the code with template taken from _FDS+_WENO_AO*
   * in cycle/resconv/_FDS+_WENO3/resconv.c
     - upgraded the code with template taken from _FDS+_WENO5


2017 APR 14a
   * in cycle/share/res_share.c
     - changed WENO_AO_GAMMALO and WENO_AO_GAMMAHI from 0.9 to 0.95
   * in cycle/resconv/_FDS+_WENO_AO7/resconv.c
   * in cycle/resconv/_FDS+_WENO_AO5/resconv.c
     - upgraded the code with template taken from _FDS+_WENO_AO9/resconv.c
   * in cycle/resconv/_FDS+_WENO5/resconv.c
   * in cycle/resconv/_FDS+_WENO7/resconv.c
   * in cycle/resconv/_FDS+_WENO9/resconv.c
     - upgraded the code with template taken from _FDS+_WENO_AO


2017 APR 13b
   * in src/common.c
     - fixed a bug in _nodes_from_bdry(): when DISTMPI is set need to check is_node_in_domain_lim()
     - added _nodes_from_bdry_limited()
   * in cycle/share/res_share.c
     - in find_musclvars_offset(), prevented loop from going out of domain bounds
   * in cycle/resconv/_FDS+_WENO_AO9/resconv.c
     - in find_Fstar_interface(), now calls _nodes_from_bdry_limited() instead
       of _nodes_from_bdry()


2017 APR 13a
   * in src/common.c
     - added _nodes_from_bdry()
   * in cycle/share/res_share.c
     - added find_musclvars_offset()
   * in cycle/resconv/_FDS+_WENO_AO9/resconv.c
     - made various changes to simplify the algorithm
     - in find_Fstar_interface(), fixed bug: used to call WENO_AO7 instead of WENO_AO9 
       interpolation
 

2017 APR 10a
   * in config/config.c
     - in output_makefileheader(), added options -Wall -funroll-all-loops -Wfatal-errors
       to mpicc compiler
   * in cycle/restime/_CDF+/restime.c
     - added function find_Deltaxt_from_Uprime() --> for testing purposes only
     - in find_Deltaxt_interface(), changed limiter from OSHER to OSPRE 


2017 APR 09a
   * in cycle/restime/_CDF+/restime.c
     - in find_Deltaxt_interface(), changed limiter form SUPERBEE to OSHER
   * in cycle/share/res_share.c
     - in _f_TVD_limiter(), added Van Albada, Osher, Ospre, Sweby limiters
 

2017 APR 08a
   * in cycle/restime
     - renamed _CDF+_Parent to _CDF+
   

2017 APR 07c
   * in cycle/resconv/_FDS+_Parent1/resconv.c
   * in cycle/resconv/_FDS+_STVD2/resconv.c
   * in cycle/resconv/_FVS+_VanLeer2/resconv.c
   * in cycle/resconv/_FVS_VanLeer2/resconv.c
     - made modifications so that Deltaxt everywhere is determined from find_Deltaxt_interface
   * in cycle/restime/_CDF+_Parent1/restime.c
     - in find_Deltaxt(), got rid of code that is now unused
     - added the awesome find_Deltaxt_interface()
   * in cycle/share/res_share.c
     - deleted _f_deltaxt()
     - in find_Lambda_minus_plus_FDSplus_muscl(), now call find_Deltaxt_interface()
     - in find_Lambda_minus_plus_FVSplus_muscl(), now call find_Deltaxt_interface()


2017 APR 07b
   * in cycle/restime/_CDF+_Parent1/restime.c
     - in find_Deltaxt(), got rid of smoothing with nearby LU -- now back to how it was 
       prior to April 5th 
   * in cycle/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl, changed all deltaxt to deltaxt_p1h
     - in _f_deltaxt(), made deltaxt function of a TVD limiter


2017 APR 07a
   * in cycle/resconv/_FDS+_TVD2/resconv.c
     - changed LIMITER from VANLEER to VENKATAKRISHNAN
   * in cycle/restime/_CDF+_Parent1/restime.c
     - in find_Deltaxt(), now check if node valid before determining jacvarsL and jacvarsR
   * in cycle/share/res_share.c
     - changed WENO_AO_COMPRESSIVE to TRUE


2017 APR 06a
   * in cycle/resconv/
     - added _FDS+_WENO_AO9
   * in cycle/resconv/_FDS+_WENO_AO7/resconv.c
     - fixed a bug: in find_Fstar_interface(), hbw_inner_node==5 should be hbw_inner_node==4
   * in cycle/share/res_share.c
     - added constants WENO_AO_GAMMALO, WENO_AO_GAMMAHI, and WENO_AO_COMPRESSIVE
     - changed WENO_AO_GAMMAHI and WENO_AO_GAMMALO from 0.85 to 0.90
     - in _P_Legendre(), added 7th and 8th degree polynomials
     - added find_central_polynomial_CWENO9()
     - added _f_WENO_AO9()


2017 APR 05b
   * in cycle/restime/_CDF+_Parent1/restime.c
     - in find_Deltaxt(), now divide Deltaxt by an upwinded LU_max
   * in cycle/share/res_share.c
     - in _f_deltaxt() made simplifications (should not alter significantly the solution)
   * in lib/exm/exm.c
     - added min3() and max3() functions


2017 APR 05a
   * in cycle/resconv/_FDS+_Parent1/resconv.c
   * in cycle/resconv/_FDS+_STVD2/resconv.c
   * in cycle/resconv/_FDS_Cauchy2/resconv.c
   * in cycle/resconv/_FDS_STVD2/resconv.c
   * in cycle/restime/_restime.h
   * in cycle/share/res_share.c
   * in cycle/share/ts_share.c
   * in cycle/restime/_CDF+_Parent1/restime.c
     - added theta to parameters of find_Lambdaxt_interface(), find_Lambdaxt_minus_dtau_from_jacvars()
       and find_Lambdaxt_plus_dtau_from_jacvars()
     - in find_Deltaxt(), now divide Deltaxt by the LU_max which is the maximum LU on the node +1, +0
       and -1 instead of simply LU at node +0 
   * in cycle/share/res_share.c
     - added _f_deltaxt()
     - in find_Lambda_minus_plus_FDSplus_muscl(), now calls _f_deltaxt() instead of minmod
       when evaluating lambdapp1h_RE


2017 APR 04a
   * in cycle/resconv
     - made directory _FDS+_WENO_AO7
   * in cycle/share/res_share.c
     - added find_central_polynomial_CWENO5()
     - added find_central_polynomial_CWENO7()
     - added _f_WENO_AO()
     - rewrote _f_WENO_AO5()
     - added _f_WENO_AO7()


2017 APR 03a
   * renamed
     - ADERWENO to WENO_ADER
   * in cycle/share/res_share.c
     - added _f_WENO_AO5()
   * in cycle/resconv
     - made directory _FDS+_WENO_AO5


2017 APR 02b
   * in cycle/share/res_share.c
     - in _P_Legendre(), added 5th and 6th order Legendre polynomials
     - in  _f_ADERWENO3(), changed eps from 1.0e-99 to 1.0e-49
     - in  _f_ADERWENO5(), changed eps from 1.0e-99 to 1.0e-49
     - added _f_ADERWENO6()
   * in cycle/resconv
     - made directory _FDS+_ADERWENO6
   * in cycle/resconv/_FDS+_ADERWENO5/resconv.hh
     - changed _RESCONV_ORDER to 5
   * in lib/soap/soap.c
     - in evaluate_arithmetic_1(), add 0.0 to expr if the first two characters
       are '-'
   * in model/thermo/_generic/thermo.c
     - in _T_from_w_h(), now calls fatal_error when root can't be found
   * in USAGE
     - fixed some instructions related to paraview: renamed post.grid to 
       post.vtk when using -pt vtk flag 


2017 APR 02a
   * in cycle/resconv/
     - made directories _FDS+_ADERWENO3 and _FDS+_ADERWENO5
   * in cycle/share/res_share.c
     - added _P_Legendre()
     - added _f_ADERWENO3()
     - added _f_ADERWENO5()
   * in src/control.c
     - added 4 references to bib and bibname


2017 MAR 29a
   * in config/config.c
     - in output_makefileheader(), added -s flag to gcc linker (for stripping the binary)
     - in output_makefileheader(), added -DM32 flag if -m32 is specified
   * in src/control.c
     - in write_modules(), added "with 32-bit-architecture compatibility" to linestr
       if M32 is defined 
   

2017 MAR 28a
   * in lib/soap/soap.c
     - in double evaluate_arithmetic_1(), fixed a bug: got rid of strrep(expr, "+-", "-"); and 
       of strrep(expr, "--", "+");


2017 MAR 24a
   * in model/fluid/_Navier-Stokes_plasma/fluid_source.c 
     - in find_Semfield() and in find_dSemfield_dU(), replaced the gradient of epsilonr
       from one involving _epsilonr() to  one involving _epsilonr_interface()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_Semfield() and in find_dSemfield_dU(), replaced the gradient of epsilonr
       from one involving _epsilonr() to  one involving _epsilonr_interface()
   * in model/emfield/_Ohm/emfield.c and in model/emfield/_Ohm_generalized/emfield.c 
     - in _epsilonr_interface(), made epsilonr the minimum of the neighbors rather than
       the arithmetic average


2017 MAR 23a
   * in model/share/fluid_share.c
     - in _fBC_extrapol(), added initialization of ret within default: to prevent compiler
       warning
   * in src/common.h
     - in gl_t, added NOX bool variable
   * in src/main.c
     - added flag -nox
   * in src/control.c
     - in find_metrics_on_all_nodes(), don't do a fatal_error if cell area is negative and
       if NOX is set to TRUE


2017 MAR 22a
   * in model/fluid/*/fluid_conv.c
     - in _a_from_jacvars(), added a call to fatal_error when there is a problem with
       dPdrhok
   * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
     - added constant BDRY_OUTFLOWSUPERSONIC2 
     - in write_bdry_fluid_template(), added BDRY_OUTFLOWSUPERSONIC2
     - in update_bdry_outflow(), added ORDER_ACCURACY to parameters
     - in update_bdry_outflow(), now use _fBC_extrapol() instead of _fBC1()
   * in model/share/fluid_share.c
     - added _fBC_extrapol()


2017 MAR 21b
   * in lib/gridg/doc/report.tex
     - changed affiliation to PNU
   * in lib/soap/doc/report.tex
     - changed affiliation to PNU
   * in USAGE
     - changed default editor to pluma from gedit


2017 MAR 21a
   * in model/fluid/_Navier-Stokes_plasma/fluid.c
     - added  _relaxTe_effective() 
       o effective relaxation code is commented out (for now, this simply returns relaxTe as 
         specified in the control file)
       o look into this in the future if Te doesn't converge well at low values (<8000K)
     - in add_dUstar_to_U() and update_Te_local(), added calls to _relaxTe_effective()
   * in model/fluid/_Navier-Stokes_plasma/fluid_bdry.c
     - in update_bdry_outflow(), added code to set negative species mass fractions to 
       essentially zero at outflow
       o the code is commented out, but can look into this in the future in case there are
         some spurrious oscillations of the negatively-charged species near outflow boundaries


2017 MAR 16b
   * in lib/soap/soap.c
     - in static double evaluate_arithmetic_1(), added strrep(expr, "+-", "-"); and
       strrep(expr, "--", "+");


2017 MAR 16a
   * in lib/soap/soap.c
     - in static double evaluate_arithmetic_1(), do not insert a '0.0' at the beginning of the expression
       if it starts with a '+' or a '-'
     - changed "if (anchorL!=0) anchorL++;" to "if (is_operator(expr,anchorL)) anchorL++;"


2017 MAR 05c
   * in config/config.c
     - in functions get_makefile_vars() and get_makefile_vars(), and output_makefileheader(),
       and main() added M32 flag
   * in cycle/share/cycle_share.c
     - changed maxloopthread from 999999999999 to 2147483647
     - changed maxzonethread from 999999999999 to 2147483647
   * in model/share/fluid_share.c
     - in max_order_accuracy_near_discontinuities(), changed maxorder from 999999 to 2147483647
   * in src/control.c
     - in read_control(), changed gl->nn from 99999999999 to 2147483647


2017 MAR 05b
   * in lib/gridg 
     - renamed PlaneU --> Plane


2017 MAR 05a
   * in src/common.c
     - in wfprintf(), do not output [MPIrank=..] if number of processes is 1
   * in src/control.c, src/data.c, src/post.c
     - renamed "[done]\n" to "done;\n" or to "done.\n" 
   

2017 MAR 03a
   * in cycle/resconv/_FDS+_TVD2-WENO*/resconv.c
     - in find_Fstar_interface(), replaced calls to is_musclvar_a_charged_mass_fraction()
       and to is_musclvar_a_mass_fraction() to max_order_accuracy_near_discontinuities()   
   * in model/share/fluid_share.c
     - added max_order_accuracy_near_discontinuities()


2017 MAR 01b
   * in src/post.c
     - in write_post_template(), got rid of empty line when writing x-station properties


2017 MAR 01a
   * in src/control.c
     - replaced "  " by "" in various locations
   * in src/data.c
     - replaced "  " by "" in various locations
   * in src/post.c
     - replaced "    " by "" in various locations
     - in read_post(), replaced "  " by "" 
     - in readcontrol_actions(), got rid of "[done]" after Post.. action


2017 FEB 26a 
   * in model/_generic/model.c
     - in find_post_proc_var_name() made modifications so that "x", "y", "z" are
       returned if varnum>=numpostvar 
     - in find_post_proc_var_value() made modifications so that "x", "y", "z" are
       returned if varnum>=numpostvar 
   * in src/post.c
     - in  write_post_file_nodplot(), made modifications so that the x, y, z post
       variables are obtained from find_post_proc_var_name() and 
       find_post_proc_var_value() 
     - in  write_post_file_vtk(), made modifications so that the x, y, z post
       variables are obtained from find_post_proc_var_name() and 
       find_post_proc_var_value() 


2017 FEB 24a
   * in README
     - changed the copyright from 1998-2016 to 1998-2017
   * in USAGE
     - changed the flag -p to -op
     - changed the flag -pg to -opg
     - changed the flag -pm to -opm
   * in tools/makepost.sh
     - changed the flag -p to -op


2017 FEB 23a
   * in lib/latex
     - made a new warplogo.eps
   * in src/control.c
     - renamed "Weakly-Ionized Airflow Resolver and Post-processor" to simply WARP
   * in README
     - renamed "Weakly-Ionized Airflow Resolver and Post-processor" to simply WARP
    

2017 FEB 22d
   * in cycle/resconv/_FDS+_TVD2-WENO*/resconv.c
     - in find_Fstar_interface(), now use WENO5 for neutral mass fractions instead of TVD2
   * in model/fluid/*/fluid_conv.c
     - added is_musclvar_a_charged_mass_fraction()
   * in model/fluid/_drift-diffusion/fluid.c
     - added is_musclvar_a_charged_mass_fraction()
   * in bin/DBD_actuator.wrp
     - changed itermax from 100 to 130


2017 FEB 22c
   * in CHANGELOG
     - added missing change in 2017 FEB 22b


2017 FEB 22b
   * in cycle/resconv/
     - added _FDS+_WENO3/
   * in cycle/share/res_share.c
     - added _f_WENO3()
     - in _f_WENO*(), renamed beta* to IS*


2017 FEB 22a
   * in bin
     - changed mesh factor in DBD_actuator.wrp


2017 FEB 21d
   * in CHANGELOG
     - fixed mistake in version number: 2017 FEB 21b -> 2017 FEB 21c


2017 FEB 21c
   * in cycle/resconv/
     - added directory _FDS+_WENO9
   * in cycle/resconv/.config
     - moved _FDS+_TVD*WENO* to experimental
   * in cycle/share/res_share.c
     - in _f_WENO*() made eps much lower to 1.0e-99 (makes a big difference when solving fluxes
       with low mass fractions of low turbulence kinetic energies
   

2017 FEB 21a
   * in cycle/resconv
     - added directory _FDS+_TVD2-WENO9
   * in cycle/share/res_share.c
     - added function _f_WENO9()
     - in _f_WENO5() and _f_WENO7() made eps lower (needs verification)


2017 FEB 20d
   * in src/post.c
     - renamed SetPostDomainToXstation to SetXstation
     - in read_post_actions(), got rid of ResetPostDomain
     - in read_post_actions(), renamed POSTFILE_GRID to POSTGRIDONLY
     - in read_post(), got rid of POSTFILE_GRID and POSTFILE_ALL initializations
     - in read_post_functions(), reinitialized np and gl before processing _Fshear() action
 
   
2017 FEB 20c
   * in src/control.c and README
     - renamed "..a CFD code for Plasma Aerodynamics" to "..a CFD code for Plasma and Reactive Flows"


2017 FEB 20b
   * in src/main.c, model/chem/*/*.c
     - used tools/indentwithwarpstyle.sh to indent the code with warp style


2017 FEB 20a
   * in bin
     - modified Post() module of MHD_generator.wrp and flat.wrp
   * in  model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.hh
     - added _CHEM_PLASMA
   * in src/main.c
     - in main() changed flags -p to -op, -pg to -opg, etc
     - in main() fixed bug related to -pg flag
   * in src/post.c
     - in write_post_template(), got rid of RestrictPostDomainToRegion()
     - in write_post_template(), changed arguments to _Fshear, _Fpressure, _Qheat, etc
       to include the zone where it should be used
   * in read_post_functions()
     - changed arguments to _Fshear, _Fpressure, _Qheat, WritePostFile(), etc to include the zone
       where it should be used. 
     - got rid of RestrictPostDomainToRegion() action
   * in model/thermo/_generic/thermo.c
     - made function _Rk() static
     - in _Rk(), when spec is speceminus, do not set Rk to zero anymore
     - in find_de_drhok_at_constant_P() and find_de_drhok_at_constant_T(), rewrote the part
       that was function of _Rk() so that it yields the same expression as before (when _Rk() was zero
       for spec==speceminus)
      

2017 FEB 15a
   * in bin
     - modified Post() module


2017 FEB 10a
   * renamed
     - posmomentumflux to fluxmom
     - postotalenergyflux to fluxet
   * in model/fluid/*/fluid.hh
     - deleted redundant fluxet definition
   * in model/fluid/_Favre-Reynolds_plasma/fluid.hh
     - put parentheses around ns+nd, ns+nd+1, etc when defining fluxet, fluxtke, etc
   * in bin/*wrp
     - renamed _Fshear_domain() to _Fshear(), _Fpressure_domain() to _Fpressure(), etc
   * in src/post.c
     - renamed _Fshear_domain() to _Fshear(), _Fpressure_domain() to _Fpressure(), etc
     - in write_post_file_nodplot(), added x,y,z to post variables
     - in integrate_shear_force_on_surface(), fixed a bug: thetasgn>0.0 should be thetasgn>0
     - added function integrate_heat_to_surface()
     - in write_post_template(), added Qheat=... template
     - in read_post_functions(), added processing of _Qheat() action


2017 FEB 03a
   * in bin
     - updated plasma_assisted_combustion.wrp
     - updated heatbdry.wrp
     - updated DBD_actuator.wrp
     - deleted DBD_actuator_laminar.wrp
     - deleted DBD_actuator_B_field.wrp
   * in tools/mpitest.c
     - only include code if DISTMPI is defined
   * in tools/tauvt.c
     - renamed cO2 to wO2, cO to wO, etc
   * in tools/indentwithwarpstyle.sh 
     - added option -nut


2017 JAN 28a
   * in bin
     - updated plasma_assisted_combustion.wrp
   * in tools
     - updated makemovie.sh, makepost.sh, makepng.sh
   * in src/data.c
     - in write_data_file(), fixed a bug: the rename() functions should be called
       only for rank==0 when DISTMPI is defined
   

2017 JAN 23b
   * in model/share/fluid_share.c
     - in find_Saxi(), fixed a bug related to the fluxpsi flux
   * in model/fluid/_Navier-Stokes_plasma/fluid_source.c
     - in find_dSvib_dU(), found a bug: dSvibdU[fluxev][fluxev] was altered twice instead
       of once
     - in find_dSvib_dU(), found another bug: S[ns+nd+4]=-Qen; should be S[ns+nd+2]=-Qen;
   * in model/fluid/_Navier-Stokes_plasma/fluid_plasma.c
     - in find_Dstar(), found a bug: Dstar[ns+nd+4][ns+nd+4] should be
       Dstar[ns+nd+2][ns+nd+2]
   * in model/fluid/_Navier-Stokes_plasma/fluid_conv.c
     - in find_Ustar_from_musclvars(), found 2 bugs: Te=musclvars[ns+nd+4] should be
       Te=musclvars[ns+nd+2] and Tv=musclvars[ns+nd+3] should be
       Tv=musclvars[ns+nd+1] 
   * in model/fluid/_Navier-Stokes*/* and model/fluid/_Favre-Reynolds*/*
     - replaced ns+nd by fluxet and ns+nd+x by fluxev, fluxee, fluxtke, fluxpsi
       where appropriate
   * in model/share/fluid_share.c
     - replaced ns+nd by fluxet and ns+nd+1 by fluxtke and ns+nd+2 by fluxpsi
       where appropriate


2017 JAN 23a
   * in cycle/share/cycle_share.c, lib/soap/soap.c, model/beam/*/beam.c, model/emfield/*/emfield.c model/fluid/*/fluid.c, src/bdry.c, src/control.c, src/data.c, src/init.c
     - replaced wfprintf(stdout,"[x]") to wfprintf(stdout,"x..")  
   * in lib/exm/exm.h
     - changed the macro round() so that round(-0.5)=-1 and not 0
   * in lib/soap/soap.c
     - changed the macro round() so that round(-0.5)=-1 and not 0
     - renamed the macro intfromreal() to longfromdouble()
     - changed the macro longfromdouble() so that longfromdouble(-0.7)=-1 and not 0
   * in model/chem/_C12H23_Air_16s_23r_Kundu/ref/
     - renamed the pdf files so that their titles are authorXXXX.pdf
     - added kundu1999.pdf
   * in model/chem/_CH4_Air_20s_52r_Yungster/chem.c
     - in find_W() and find_dW_dx(), clipped the temperature so that the reaction
       rates are not evaluated at a temperature less than 400K
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), took away obvious comments
   * in model/fluid/_Navier-Stokes/fluid.c
     - fixed a bad and hard-to-find bug: in find_dT_dU(), deleted dTdU[ns+nd+1]=-dTdrhoetstar;
       (out of bounds!)
   * in model/fluid/_drift-diffusion/fluid.c
     - renamed Nkmin to Nimin
   * in model/fluid/_drift-diffusion/fluid.hh
     - renamed Nkmin to Nimin
   * in src/common.c
     - in find_subzones_in_zone_given_zonelength(), replaced intfromreal() to round()
     - in find_bool_var_from_codex(), replaced intfromreal() to round()
     - in find_int_var_from_codex(), replaced intfromreal() to round()
   * in src/control.c
     - in center_string(), replaced intfromreal() to round()
   * in bin
     - added methane_wedge.wrp	
   * in model/chem/_CH4_Air_20s_52r_Yungster/ref/
     - added yungster1994.pdf


2017 JAN 22b
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - turned off the chemical reactions when T<Tmin with Tmin set to 500 K


2017 JAN 22a
   * in bin
     - added propane_blunt.wrp and reentry_turbulent.wrp
   * in model/share/chem_share.c
     - in add_to_W_Arrhenius*(), only add to W if exp(-dG0/(calR*T))>Kcmin
     - in  add_to_dW_Arrhenius*(), only add to dW if exp(-dG0/(calR*T))>Kcmin
   * in model/share/fluid_share.c
     - in condition_Lambda_plus_minus_deltaP(), took away the -0.05 clipping to factP


2017 JAN 21a
   * in bin
     - altered reentry.wrp


2017 JAN 20a
   * in bin
     - added propane_wedge.wrp
   * deleted model/chem/_C3H8_Air_16s_23r_Kundu_old
   * in model/chem/_C3H8_Air_16s_23r_Kundu/chem.c
     - in find_W() and find_dW_dx(), added a temperature clipping T=max(T,300.0)
       to prevent too small reaction rates leading to instabilities at low temps
   * in model/chem/_C12H23_Air_16s_23r_Kundu/chem.c
     - rewrote the chemical reactions starting from those in _C3H8_Air_16s_23r_Kundu


2017 JAN 19b
   * in cycle/resconv/_FDS+_STVD2/resconv.hh
     - added _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING
   * in model/chem/_C3H8_Air_16s_23r_Kundu/chem.c
     - did some cleanup of some comments
   * in model/share/chem_share.c
     - changed Kcmin from 1.0e-90 to 1.0e-40 (needed to prevent NAN at low temperatures)
     - in add_to_dW_Arrhenius3r2p and add_to_dW_Arrhenius2r1p, fixed bug
       within dKcdToverKc


2017 JAN 19a
   * in src/control.c
     - added Dunn and Kang reference in bib
   * in model/share/chem_share.c
     - added functions add_to_W* and add_to_dW*
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - removed functions add_to_W* and add_to_dW*
   * in model/chem/_C3H8_Air_16s_23r_Kundu/chem.c
     - in find_W(), rewrote reactions #6 to #23 using add_to_W* functions
     - in find_dW_dx(), rewrote reactions #6 to #23 using add_to_dW* functions


2017 JAN 18b
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - made sure Kc can not be less than Kcmin with Kcmin set to 1e-90
   * in model/chem/_H2_Air_9s_20r_Jachimowsky/chem.c
     - made sure Kc[r] can not be less than Kcmin with Kcmin set to 1e-90
   * in model/chem/_H2_Air_Plasma_14s_47r_Jachimowsky-Macheret/chem.c
     - made sure Kc[r] can not be less than Kcmin with Kcmin set to 1e-90
   * in bin
     - added reentry.wrp
   * in model/share/chem_share.c
     - in test_dW_dx(), renamed dWdNk to dWrhok


2017 JAN 18a
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - rewrote function find_dW_dx()
     - added add_to_dW_Arrhenius2r3p(), add_to_dW_Arrhenius2r2p()


2017 JAN 17b
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - added add_Arrhenius_2reactants_3products_to_W()
     - in find_W(), fixed some reactions
   * in model/chem/doc
     - made changes to report.tex


2017 JAN 17a
   * in model/chem/_Air_Plasma_11s_31r_Dunn-Kang/chem.c
     - added add_Arrhenius_2reactants_2products_to_W()
     - in find_W(), rewrote some reactions
 

2017 JAN 16d
   * in CHANGELOG
     - added note related to mistake in the tag of 17jan16b (see below)


2017 JAN 16c
   * in model/chem
     - added _Air_Plasma_11s_31r_Dunn-Kang (still needs work)


2017 JAN 16a
   * in model/chem
     - renamed _H2_Air_Plasma_14s_47r to _H2_Air_Plasma_14s_47r_Jachimowsky-Macheret
   * in model/chem/doc
     - made changes to report.tex (added proper units, fixed a couple of errors)
     - added Dunn-Kang reference in all.bib
     

2017 JAN 16b  (mistake in tag: tag 17jan16b should be 17jan15b) 
   * in src/data.c
     - deleted interpolate_one_node_fluid() and interpolate_one_node_emfield()
     - added find_interpolation_weight()
     - in read_data_file_interpolation(), replaced interpolate_one_node_emfield()
       and interpolate_one_node_fluid() by find_interpolation_weight()


2017 JAN 15a
   * in src/data.c
     - in read_data_file_interpolation(), made numsubzones function of both
       find_subzones_in_zone_given_numsubzone() and of find_subzones_in_zone_given_zonelength()
     - in write_data_file_interpolation(), now call find_NODEVALID_on_domain_all()
       (faster algorithm)
     

2017 JAN 13b
   * in src/data.c
     - in find_NODEVALID_on_domain_all(), improved algorithm to reduce number
       of operations
     - in read_data_file_interpolation(), added radiusmax2_file[] to replace radiusmax2
       (leads to faster algorithm)
     - in read_data_file_interpolation() changed safety multiplying factor of radiusmax2 
       to 1.1 from 2.0
     - in read_data_file_interpolation() made some OPENMP parallel statements dynamic
       instead of static 
     

2017 JAN 13a
   * renamed
     - find_specified_number_of_subzones_in_zone -> find_subzones_in_zone_given_numsubzone
     - find_subzones_in_zone -> find_subzones_in_zone_given_zonelength
   * in src/data.c
     - changed SUBZONE_DESIRED_WIDTH form 8 to 4
     - in read_data_file_interpolation(), now call find_subzones_in_zone_given_zonelength
       instead of find_subzones_in_zone_given_numsubzone


2017 JAN 12c
   * in src/common.c
     - added find_specified_number_of_subzones_in_zone()
   * in src/data.c
     - in read_data_file_interpolation(), added call to 
       find_specified_number_of_subzones_in_zone()


2017 JAN 12b
   * in src/data.c
     - in read_data_file_interpolation(), made some changes to speed things up
       further including reading the file data first and storing it in RAM
     - in write_data_file_interpolation(), changed the ID of the interpolation
       file from interpolationfileformat001 to WARPINTFORMAT001


2017 JAN 12a
   * in cycle/share/cycle_share.c
     - removed find_subzones()
   * renamed
     -> find_subzones() to find_subzones_in_zone()
   * in src/common.c
     - added find_subzones_in_zone()
   * in src/data.c
     - deleted read_data_file_binary_old()
     - combined read_data_file_binary() and read_data_file_ascii() into
       read_data_file_binary_ascii()
     - combined write_data_file_binary() and write_data_file_ascii() into
       write_data_file_binary_ascii()
     - in read_data_file_interpolation(), added subzones to speed up interpolation process


2017 JAN 11d
   * in src/data.c
     - added find_NODEVALID_on_domain_all()
     - in read_data_file_binary(), now call find_NODEVALID_on_domain_all() 
       -> much faster read time when using MPI
     - deleted write_data_file_binary_old()
   * in src/control.c
     - in readcontrol_actions(), commented out the [broadcasting] screen outputs
   * in src/bdry.c
     - in read_bdry(), commented out [MPI check of node type]


2017 JAN 11c
   * in cycle/share/cycle_share.c
     - renamed exchange_U_emfield() to exchange_U_emfield_old()
     - rewrote exchange_U_emfield() using zone_intersect for more efficient packet sending


2017 JAN 11b
   * in cycle/share/cycle_share.c
     - renamed exchange_U() to exchange_U_newer()
     - rewrote exchange_U() using zone_intersect for more efficient packet sending
   * in src/common.c
     - added function is_zone_intersecting_zone()
     

2017 JAN 11a
   * in cycle/share/cycle_share.c
     - renamed exchange_U() to exchange_U_old()
     - rewrote exchange_U() so that the sending of packets is done one process at a time
     

2017 JAN 10a
   * in src/data.c
     - rewrote read_data_file_binary() to prevent slowdown with MPI on high latency
       network
     - rewrote write_data_file_binary() 


2017 JAN 08b
   * in lib/latex/warpdoc.cls
     - replaced stix font by times


2017 JAN 08a
   * in bin
     - updated plasma_assisted_combustion.wrp


2017 JAN 07a
   * in model/share/fluid_share.c
     - added functions _gamma(), _Vstar(), _Vhat(), _varphi()
       from model/fluid/*/fluid.c
   * in model/fluid/_Navier*/fluid.c and _Favre*/fluid.c
     - deleted functions _gamma(), _Vstar(), _Vhat(), _varphi()


2017 JAN 06a
   * in model/chem/doc/refs/
     - added dunnkang.pdf
   * deleted
     - bin/jachimowski_plasma_wedge.wrp
   * in model/chem/doc/report.tex
     - added Dunn-Kang high temperature air model


2017 JAN 05d
   * in bin
     - added jachimowski_plasma_wedge.wrp
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - deleted rearrange_metrics_eigenset2() (redundant)
   * in model/chem/_H2_Air_Plasma_14s_47r/chem.c
     - fixed a bug: rewrote most of the module starting fresh from Macheret 
       and Jachimowski models


2017 JAN 05c
   * in tools
     - added indentwithwarpstyle.sh
   * reformatted (with tools/indentwithwarpstyle.sh)
     - src/main.c
     - model/chem/*/chem.c


2017 JAN 05b
   * in src/control.c
     - in bib, updated "Detailed Modeling of Plasmas..", "Multidimensional High
       Resolution Schemes..", and "Positive Coefficients, Cross Differences.."
   * in bin
     - added plasma_assisted_combustion.wrp
   * in model/chem/_H2_Air_Plasma_14s_47r/chem.c
     - in find_W_Jachimowski(), do not compute anymore Gs for charged species
       (_sk_from_T() is not yet defined for electrons)
     - in find_dW_dx_Jachimowski(), do not compute anymore Gs dGsdT for 
       charged species (_sk_from_T() is not yet defined for electrons)


2017 JAN 05a
   * in bin
     - added DBD_actuator_laminar.wrp


2017 JAN 04b
   * in model/emfield/_Ohm*/emfield.c
     - added function _E_dot_J_recast()
   * in model/emfield/doc/report.tex
     - added function on E dot J recast
   * in model/fluid/*plasma/fluid_source.c
     - in find_Semfield(), replaced _E_dot_J() by _E_dot_J_recast()


2017 JAN 04a
   * in model/fluid/doc/Transport_Equations/report.tex
     - added section "Recast of E dot J"


2017 JAN 03a
   * in model/fluid
     - added _Navier-Stokes_plasma
   * in bin
     - added MHD_generator_laminar.wrp
   * in model/share/fluid_share.c
     - added function _kappav()
   * in model/fluid/*/fluid_conv.c
     - deleted _Pstar_from_jacvars() [not used anywhere]
   * in model/fluid/_Favre-Reynolds_plasma/fluid_conv.c and in model/fluid/_Favre-Reynolds_Tv/fluid_conv.c
     - deleted rearrange_metrics_eigenset2()  
       [function is a duplicate from model/share/fluid_share.c]


2017 JAN 02b
   * in model/fluid/_drift-diffusion/fluid.c
     - at the beginning, added a #define INIT_TYPE1 1 
     - renamed BC_* to BDRY_*
     - in write_bdry_fluid_template(), renamed WALL to BDRY_WALL and OUTFLOW to BDRY_OUTFLOW
     - in find_init_string(), renamed "1" to "INIT_TYPE1"
     - added function add_init_types_fluid_to_codex()
     - in init_node_fluid(), renamed 1 to INIT_TYPE1 and implemented error checking


2017 JAN 02a
   * in src/init.c
     - in read_init_actions() added calls to add_init_types_fluid_to_codex() 
       and add_init_types_emfield_to_codex()
   * renamed
     - WALL_T_FIXED -> BDRY_WALLTFIXED
     - WALL_ADIABATIC -> BDRY_WALLADIABATIC
     - INFLOW_SUPERSONIC -> BDRY_INFLOWSUPERSONIC
     - INFLOW_SUBSONIC -> BDRY_INFLOWSUBSONIC1	
     ..etc
     - ELECTRODE -> BDRYEMF_ELECTRODE
     - DIELECTRIC -> BDRYEMF_DIELECTRIC
     - EXTRAPOLATED -> BDRYEMF_EXTRAPOLATED
     - BC_ELECTRODE -> BDRYEMF_ELECTRODE
     - BC_DIELECTRIC -> BDRYEMF_DIELECTRIC
     - BC_EXTRAPOLATED -> BDRYEMF_EXTRAPOLATED
   * in model/*/emfield.c
     - in write_init_emfield_template(), changed 1,2, etc to INITEMF_TYPE1, INITEMF_TYPE2, etc
     - in init_node_emfield(), added error checking
     - added function add_init_types_emfield_to_codex()
   * in model/fluid/*/fluid_init.c
     - added defines for INIT_TYPE1, INIT_TYPE2, etc
     - added function add_init_types_fluid_to_codex()
     - in init_node_fluid(), added error checking
     - renamed 1,2,etc to INIT_TYPE1, INIT_TYPE2, etc
 

2017 JAN 01a
   * in model/fluid/doc/Transport_Equations/report.tex
     - changed formulation of Wilcox 1988 model so that etat=rho*k/omega instead of
       etat=0.09*rho*k/omega
     - added section on boundary conditions of k and omega in freestream and at the wall
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - in write_model_fluid_template(), and read_model_fluid_actions(), added option of 
       DILATDISSIP_NONE (used to be NO)
   * in model/fluid/_Favre-Reynolds*/fluid.hh
     - took away definitions of DILATDISSIP_WILCOX and DILATDISSIP_SARKAR
   * in model/fluid/_Favre-Reynolds*/fluid_init.c
     - in write_init_fluid_template(), improved instructions on how to set k and omega
       in the freestream
   * in model/share/fluid_share.h
     - added definitions of DILATDISSIP_WILCOX, DILATDISSIP_SARKAR, DILATDISSIP_NONE
   * in model/share/fluid_share.c
     - in functions _ktilde(), _eps(), _etat_from_rho_eta_k_psitilde(), 
       find_dStnorm_dU(), find_dStcomp_dU(), made changes to KOMEGA_WILCOX1988 so that 
       etat=rho*k/omega instead of etat=0.09*rho*k/omega
     - in function _etat_from_rho_eta_k_psitilde(), changed the wall boundary condition 
       for omega to Menter's rather than Wilcox's
     - in find_xistar_and_fMt(), use switch instead of if statements (but algorithm is
       otherwise the same)
   * in LICENCE
     - updated the copyright to 1998-2017
   * in src/control.c
     - in write_modules(), updated the copyright to 1998-2017


2016 DEC 31a
   * in bin
     - deleted shear.wrp and shear2.wrp
     - added shearlayer.wrp


2016 DEC 30b
   * in model/fluid/Navier-Stokes/ and model/fluid/Favre-Reynolds*/
     - renamed variable tmp to ret for various functions
   * in model/share/fluid_share.c
     - renamed variable tmp to ret for various functions
     - in _ktilde(), _psitilde(), _eps(), _etakstar(), _etapsistar(), find_Stnorm(), 
       find_dStnorm_dU(), find_dStcomp_dU(), changed various ifs to a switch for TURBMODEL 
     - in find_k_psi_bdry_wall(), fixed a bug: for k-epsilon model, psi was
       not set to zero at the wall


2016 DEC 30a
   * in model/share/fluid_share.c
     - added functions _ktilde(), _psitilde(), _epsilon(), _omega(), _dVi_dxj(),
       _etat_from_rho_eta_k_psitilde(), _etat_mem(), _kappastar(), _kappavstar(),
       _nustar(), _etakstar(), _etapsistar() taken from model/fluid/_Favre-Reynolds*/fluid.c
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - removed functions _ktilde(), _psitilde(), _epsilon(), _omega(), _dVi_dxj(),
       _kappastar(), _kappavstar(), _nustar(), _etakstar(), _etapsistar()
     - in _etat(), rewrote code to make sure of _etat_mem()   
     - in find_prim_fluid_mem(), added call to _etat_from_rho_eta_k_psitilde()


2016 DEC 28a
   * in cycle/share/cycle_share.c
     - defined MAXRATIO_DTAUMAX_DTAUMIN to 100.0 at top of file
     - in find_dtau(), find_constant_dtau(), made dtaumax function of
       MAXRATIO_DTAUMAX_DTAUMIN
   * in model/share/fluid_share.c
     - defined PRESERVE_MOMENTUM, EIGENVALUE_CLIPPING_FACTOR, and MINRATIO_BDRY_RHO_P
       at top of file
     - in find_P_bdry_symmetrical(), took away PRESERVE_MOMENTUM from parameters
       and made *P function of MINRATIO_BDRY_RHO_P
     - in find_Pstar_bdry_wall(), took away PRESERVE_MOMENTUM from parameters
       and made *P function of MINRATIO_BDRY_RHO_P 
     - in find_w_V_P_T_bdry_symmetrical(), made rhoC function of MINRATIO_BDRY_RHO_P
       and took away PRESERVE_MOMENTUM from parameters
     - in condition_Lambda_plus_minus_standard(), condition_Lambda_plus_minus_Peclet(), 
       condition_Lambda_plus_minus_deltaP(), condition_Lambda_plus_minus_Gnoffo(),
       made Lambdaplus and Lambdaminus function of EIGENVALUE_CLIPPING_FACTOR
   * in model/fluid/*/fluid_bdry.c
     - took away definition of PRESERVE_MOMENTUM
     - took away PRESERVE_MOMENTUM within parameters given to find_w_V_P_T_bdry_symmetrical() 
       and to find_Pstar_bdry_wall()


2016 DEC 27b
   * in model/share/fluid_share.c
     - in condition_Lambda_plus_minus_*(), changed fact from 2.0 to 10.0 
       (too much clipping of the eigenvalues can lead to stability problems)


2016 DEC 27a
   * renamed
     -  add_int_to_codex(codex,"SYMMETRICAL1 " to  add_int_to_codex(codex,"SYMMETRICAL1"
   * in model/fluid/_Favre-Reynolds*/fluid_bdry.c
     - in update_bdry_wall(), moved some code related to pressure and k,psi
       to model/share/fluid_share.c
   * in model/fluid/_Navier-Stokes*/fluid_bdry.c
     - in update_bdry_wall(), moved some code related to pressure 
       to model/share/fluid_share.c
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - in update_bdry_symmetrical(), changed parameter FIRSTORDER to ORDER_ACCURACY
     - in update_bdry_symmetrical(), moved pressure terms to model/share/fluid_share.c
     - in update_bdry_subsonic_inflow(), changed parameter FIRSTORDER to ORDER_ACCURACY
     - in update_bdry_subsonic_outflow(), changed parameter FIRSTORDER to ORDER_ACCURACY
   * in model/share/fluid_share.c
     - added find_P_bdry_symmetrical() from model/fluid/*/fluid_bdry.c 
       [Note: added missing (double) in front of thetasgn]
     - added find_Pstar_bdry_wall() from model/fluid/*/fluid_bdry.c 
       [Note: added missing (double) in front of thetasgn]
     - added find_k_psi_bdry_wall() from model/fluid/*/fluid_bdry.c
     - fixed bug: "static void find_Saxi" should be "void find_Saxi" 


2016 DEC 26a
   * in model/fluid/*/fluid_source.c
     - deleted find_dSchem_dU_2()
     - deleted find_numerical_jacobian_chem()
   * in model/fluid/_Favre-Reynolds_Tv/fluid_source.c
     - in _tauvt() implemented a switch{} instead of separate if
       statements for the MACHERET and MILLIKAN vib models
   * in model/fluid/_Favre-Reynolds_plasma
     - renamed TE* to TEMODEL*
     - changed N2VIBMODEL from bool to int
     - added N2VIBMODEL_MACHERET constant (N2VIBMODEL used to be set to YES or NO, now
       it can only be set to N2VIBMODEL_MACHERET)   


2016 DEC 25b
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - got rid of control file variable DIFFUSION
   * in model/fluid/*/fluid.hh
     - added _FLUID_NEUTRALSTRANSPORT when appropriate
   * in model/fluid/_Favre-Reynolds*/fluid_source.c
     - moved TEST_VANISH to fluid_share.c
     - moved _Qk() to fluid_share.c
     - moved _chiw() to fluid_share.c
     - moved find_Stnorm() to fluid_share.c
     - moved find_xistar_and_fMt() to fluid_share.c
     - moved find_Stcomp() to fluid_share.c
     - moved find_Saxi() to fluid_share.c
     - moved find_dStnorm_dU() to fluid_share.c
     - moved find_dSaxi_dU() to fluid_share.c
     

2016 DEC 25a 
   * renamed
     - SYMMETRICAL -> SYMMETRICAL1
     - SYMMETRICAL_2o -> SYMMETRICAL2
   * in model/fluid/*/fluid_bdry.c 
     - in update_bdry_fluid(), added error check in case boundary node type is not
       a valid boundary node type
   * in model/fluid/_Favre-Reynolds*/fluid_bdry.c
     - deleted find_fofT()
     - deleted find_fprimeofT()
     - rewrote update_bdry_inflow_reservoir()
     - rewrote update_bdry_inflow_reservoir_2()
     - rewrote update_bdry_symmetrical()


2016 DEC 24b
   * in model/fluid/_Favre-Reynolds_Tv/fluid.c
     - in write_model_fluid_template(), added missing comment about eigenvalue conditioning
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in write_model_fluid_template(), added missing comment about eigenvalue conditioning


2016 DEC 24a
   * in cycle/resconv/*/resconv.hh
     - where appropriate (non-posivitity-preserving schemes mostly), added
       define _RESCONV_LAMBDA_ABSOLUTE_CONDITIONING
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), changed zetaA default to 0.1
     - in write_model_fluid_template(), only include zetaAden if needed by resconv.c
     - in write_model_fluid_template(), changed default value for EIGENVALCOND
       to EIGENVALCOND_DELTAP if resconv.c allows it (positivity-preserving schemes
       mostly)
     - in read_model_fluid_actions(), only reads zetaAden if needed by resconv.c
   * in model/share/fluid_share.c
     - renamed condition_Lambda_plus_minus_Pdiff to condition_Lambda_plus_minus_deltaP
     - in find_conditioned_Lambda_absolute_from_jacvars(), fixed a bug related to
       when to call fatal_error involving EIGENVALCOND_DELTAP 
    

2016 DEC 23b
   * in cycle/resconv
     - moved _FDS+_TVD2_WENO5 to _FDS+_TVD2-WENO5
     - moved _FDS+_TVD2_WENO7 to _FDS+_TVD2-WENO7
   * renamed
     - _FLUID_N2VIB -> _FLUID_N2VIBMODEL 
     - EIGENVALCOND_PDIFF -> EIGENVALCOND_DELTAP
     - PSI -> TURBMODEL
     - PSI_OMEGA2008 -> TURBMODEL_KOMEGA2008
     - PSI_OMEGA1988 -> TURBMODEL_KOMEGA1988
     - PSI_EPSILON -> TURBMODEL_KEPSILON
   * in model/fluid/Favre-Reynolds*/fluid.hh
     - added constants DILATDISSIP_WILCOX and DILATDISSIP_SARKAR
     - in gl_model_fluid_t, took away bool variables DILATDISSIP_SARKAR and DILATDISSIP_WILCOX 
     - in gl_model_fluid_t, added DILATDISSIP
   * in model/fluid/_Favre-Reynolds_Tv/fluid.hh
     - in gl_model_fluid_t moved N2VIBMODEL from bool to int


2016 DEC 23a
   * in bin
     - changed sigma2=0.5 to sigma2=0.0
   * renamed
     - CONVJACOBIAN_FVSplus to CONVJACOBIAN_FVSPLUS
     - CONVJACOBIAN_FDSplus to CONVJACOBIAN_FDSPLUS
   * in cycle/restime
     - renamed the subdirectories 
   * in cycle/resconv
     - renamed the subdirectories 


2016 DEC 22b
   * renamed
     - LAMBDA_PARENT -> EIGENVALCOND_PECLET
     - LAMBDA_STANDARD -> EIGENVALCOND_STANDARD
     - LAMBDA_GNOFFO -> EIGENVALCOND_GNOFFO
     - LAMBDA -> EIGENVALCOND
   * in lib/soap/soap.c
     - added SOAP_add_int_to_vars()
   * in model/share/fluid_share.c
     - in condition_Lambda_absolute_standard(), made entropy correction function of (aref+Vref) rather
       than ap0 and ap1
     - in condition_Lambda_plus_minus_Gnoffo(), made entropy correction function of (aref+Vref) rather
       than ap0 and ap1
     - in condition_Lambda_plus_minus_Gnoffo(), implemented eigenvalue limiting
     - in condition_Lambda_plus_minus_Peclet(), implemented eigenvalue limiting
     - added condition_Lambda_plus_minus_Pdiff(), which is not dependent on Peclet number
     - in find_conditioned_Lambda_absolute_from_jacvars(), added fatal_error call
       when jacvars.EIGENVALCOND==EIGENVALCOND_PDIFF
   * in model/fluid/Favre*/fluid.c and model/fluid/Navier*/fluid.c 
     - in read_model_fluid_actions(), added initialization of EIGENVALCOND_PDIFF
   

2016 DEC 22a
   * in model/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), fixed a bug:
       Pmin should be Pstarmin and Pmax should be Pstarmax 


2016 DEC 21a
   * in model/share/fluid_share.c
     - in function condition_Lambda_plus_minus_Parent() added parameters 
       np_t *np, gl_t *gl, long lp0, long theta 
     - in function condition_Lambda_plus_minus_Parent(), made the entropy
       correction multidimensional
     - in function condition_Lambda_plus_minus(), added parameters 
       np_t *np, gl_t *gl, long lp0, long theta
   * in cycle/resconv/_FDS_2o_STVD+/resconv.c
     - added parameters to condition_Lambda_plus_minus() 
   * in cycle/share/res_share.c
     - added parameters to condition_Lambda_plus_minus()
   * in cycle/share/ts_share.c
     - added parameters to condition_Lambda_plus_minus()
 

2016 DEC 20a
   * in bin/*wrp
     - got rid of Pecletmax
   * in model/fluid/*
     - got rid of Pecletmax
   * in model/share/fluid_share.c
     - hard coded Pecletmax as a constant equal to 20.0
     - in condition_Lambda_plus_minus_Parent(), changed definition of factPe (made
       it more strongly function of pressure gradient


2016 DEC 19a
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), changed wmin from 1e-20 to 1e-50 where applicable
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - in write_bdry_fluid_template(), within Faces() command, changed WALL_T_FIXED
       to SLIPWALL
   * in model/share/fluid_share.c
     - renamed condition_Lambda_plus_minus_*_old() to
       condition_Lambda_plus_minus_*_very_old()
       and renamed condition_Lambda_plus_minus_*() to
       condition_Lambda_plus_minus_*_old()
     - implemented a new condition_Lambda_plus_minus_standard() that limits the eigenvalues
       to physically-plausible values
     - implemented a new condition_Lambda_plus_minus_Parent() that limits the eigenvalues
       to physically-plausible values


2016 DEC 18a
   * renamed
     - cC to wC
   * in model/fluid
     - added _Navier-Stokes
   * in src/main.c
     - in write_options(), changed wording for description of -im1, -im2, -im3 flags
   * in model/share/fluid_share.c
     - added _fBC1(), _fBC2(), find_chi_inverse(), find_w_V_P_T_bdry_inflow_reservoir()
       find_fofT(), find_fprimeofT(), find_mdot_over_A(), find_w_V_P_T_bdry_inflow_reservoir_2()
       find_w_V_P_T_bdry_symmetrical(), rearrange_metrics_eigenset2()
   * in model/fluid/*/fluid_bdry.c
     - deleted _fBC1(), _fBC2(), find_chi_inverse()
   * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
     - in test_dSchem_dU(), improved error message wording


2016 DEC 17c
   * in src/post.c
     - in write_post_file_nodplot(), fixed a bug related to MPI in 3D


2016 DEC 17b
   * in src/main.c
     - in fatal_error_if_options_remaining(), rewrote error message
   * in src/data.c
     - in read_data_file_ascii(), improved stdout message when reading ascii data file
     - took away \n character within the string passed to all fatal_error() calls
   * in src/control.c
     - took away \n character within the string passed to all fatal_error() calls
   * in src/common.c
     - took away \n character within the string passed to all fatal_error() calls
   * in src/bdry.c
     - took away \n character within the string passed to all fatal_error() calls
   * in cycle/share/cycle_share.c
     - in _numthread_optimized(), made some changes to improve the speed of the
       function when maxzonethread is very large
     - in update_U_with_multizone(), changed pthread and threadzone to pointers and
       and now malloc/free them
     - in find_residual_with_multizone(), changed pthread and threadzone to pointers and
       and now malloc/free them
     - added #ifdef DISTMPI before exchange_U_emfield() so that it is not compiled
       when DISTMPI is not defined
 

2016 DEC 17a
   * in src/post.c
     - in write_post_file_nodplot(), write_post_file_vtk(), write_post_file_tecplot(),
       added calls to wfopen, wfwrite, wfclose instead of fopen, fwrite, fclose
   * in src/main.c
     - in main(), added MPI_AllReduce() to the variable SIGUSR1_CAUGHT so that
       WARP writes to the data file at the next iteration even if only one
       of its processes catches a USR1 signal
   * in src/common.c
     - in fatal_error(), added MPI_Abort() before call to exit()
   * in cycle/tsemf/_IMAF/tsemf.c
     - some cosmetic changes (indents..)
   * in cycle/share/cycle_share.c
     - lots of cosmetic changes (altered indents, and regrouped EMFIELD functions together) 


2016 DEC 16b
   * in src/common.c
     - deleted _node_rank_oldj(), _domain_from_rank_mem_oldj(), 
               _node_rank_oldi(), _domain_from_rank_mem_oldi()
     - added wfwrite(), wfopen(), wfclose()
     - in wfprintf(), rewrote if (rank==0 || stream!=stdout) to
       if (rank==0 || stream==stderr)
   * in src/data.c
     - in write_data_file_binary(), write_data_file_ascii(), 
       write_data_file_interpolation(), added calls to wfopen, wfwrite, wfclose
       instead of fopen, fwrite, fclose


2016 DEC 16a
   * renamed
     - THREADSIZE -> SEGMENTWORK
     - THREADSIZE_SHORT -> SEGMENTWORK_LIGHT
     - THREADSIZE_LONG -> SEGMENTWORK_HEAVY
   * in src/config.c
     - got rid of MPITYPE and SHAREDMPI
   * deleted
     - all code within #ifdef SHAREDMPI ... #endif


2016 DEC 15c
   * in config/config.c
     - in get_makefile_vars(), initialized *MPITYPE to 0


2016 DEC 15b
   * in lib/exm/exm.c
     - renamed fatal_error to EXM_fatal_error


2016 DEC 15a
   * in lib/exm/exm.c
     - added functions argrank(), process_flag_string(), process_flag_int(),
       process_flag_int_multiple(), process_flag_double_multiple(), process_flag(),
       find_remaining_options()
   * in src/main.c
     - deleted argrank(), process_flag_string(), process_flag()
     - added fatal_error_if_options_remaining()
     - in main(), made changes and call functions in exm.c to process the options


2016 DEC 14b
   * renamed
     - I_SWEEP -> SWEEPTYPE_I
     - J_SWEEP -> SWEEPTYPE_J
     - K_SWEEP -> SWEEPTYPE_K
     - IJK_SWEEP -> SWEEPTYPE_IJK 
     - EM_BDRY_EXPLICIT -> EM_MPIBDRY_EXPLICIT
   * in src/common.h
     - added maxlinewidth and minlinewidth 
   * in src/control.c
     - renamed innards for modules
     - removed maxlinewidth and minlinewidth 
   * in src/main.c
     - removed process_flag_1()
     - added process_flag_string()
     - added process_flag()
     - added write_options_row()
     - added write_options()
     - in main(), added call to write_options()
     - in main(), removed the calls to process_flag_1() and replaced them by process_flag_string()
     - in main(), added calls to process_flag() when appropriate
   * in cycle/share/cycle_share.c
     - deleted find_dtau_old()
     - deleted _astar()
     - changed maxloopthread and maxzonethread to 999999999999 from 999999 is OPENMPTHREADS specified


2016 DEC 14a
   * in src/main.c
     - in main(), got rid of gl->maxthread and now call omp_set_num_threads() when -t flag 
       is called
   * in src/common.h
     - got rid of NUM_THREAD_LIMIT (was set to 9999)
     - in gl_t got rid of maxthread
   * in cycle/share/cycle_share.c
     - redefined maxloopthread and maxzonethread to 999999 instead of maxloopthread
     - in execute_function_on_all_segments(), for OPENMPTHREADS, cleaned up the code
       (took away dependence on NUM_THREAD_LIMIT which is not necessary here)
     

2016 DEC 13a
   * in cycle/share/cycle_share.c
     - in execute_function_on_all_segments(), modified algorithm so no threading is
       used if gl->NOSHORTTHREADS if set
   * in src/common.h
     - added NOSHORTTHREADS to gl_t
   * in src/main.c
     - in main(), renamed flag -reset to -nic
     - in main(), renamed flag -emexp to -nib
     - in main(), renamed flag -thr to -t
     - in main(), renamed flag -var to -nvr
     - in main(), renamed flag -n to -on
     - in main(), renamed flag -res to -or
     - in main(), added flag -nst (no short threads)


2016 DEC 12b
   * renamed
     - THREADMODE_STANDARD -> THREADTYPE_LONG
     - THREADMODE_NONE -> THREADTYPE_SHORT
     - THREADMODE -> THREADSIZE
   * in cycle/res/_generic/res.c
     - in find_residual() and find_residual_per_dimension(), altered THREADTYPE_LONG to 
       THREADTYPE_SHORT in some cases
   * in cycle/share/cycle_share.c
     - in execute_function_on_all_segments(), do not use threads for THREADTYPE_SHORT if
       DISTMPI is defined and if np>1
     - in sweep_with_1D_segments(), added an assert to make sure zone is within gl->domain_all
     - in update_prim_emfield_mem_in_zone(), altered THREADTYPE_LONG to THREADTYPE_SHORT 
     - in update_bdry_nodes_emfield(), altered THREADTYPE_LONG to THREADTYPE_SHORT
     - in find_residual_emfield(), changed one THREADTYPE_LONG to THREADTYPE_SHORT
   * in cycle/share/tsemf_share.c
     - in update_U_emfield_ADI(), altered THREADTYPE_LONG to THREADTYPE_SHORT
   * in cycle/ts/*/ts.c
     - in update_dU() and find_dU(), changed one THREADTYPE_LONG to THREADTYPE_SHORT
   * in cycle/tsemf/*/tsemf.c
     - in update_U_emfield_*(), altered THREADTYPE_LONG to THREADTYPE_SHORT
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_U_emfield_IMAF(), fixed a bug: zoneexp must not exceed gl->domain_all
   * in src/common.c
     - added is_zone_in_zone()


2016 DEC 12a
   * in config/config.c
     - got rid of option MPI STRATEGY


2016 DEC 11b
   * in cycle/_standard/cycle.c
     - in write_runtime_template(), do not print out Lc anymore to screen within
       runtime module
   * in cycle/_multizone/cycle.c
     - in write_runtime_template(), do not print out Lc anymore to screen within
       runtime module
   * in model/thermo/_generic/thermo.c
     - in find_default_init_mass_fraction_string(), find_default_init_number_density_string(),
       find_default_init_number_density_fraction_string(), set the default to a small
       value instead of zero (to prevent a singularity with positivity-preserving
       schemes)
   * in src/data.c
     - in read_data_file_binary(), read_data_file_ascii(), write_data_file_binary(),
       now set gl->effiter_U_emfield=0.0 and gl->effiter_R_emfield=0.0 if MPI rank!=0
     - in write_data_file_binary(), write_data_file_ascii(), write_data_file_interpolation(),
       make sure to sum  gl->effiter_U_emfield and gl->effiter_R_emfield before writing
       them to the data files when DISTMPI is specified
 

2016 DEC 11a
   * renamed 
     - WARP_solve_TDMA() -> solve_TDMA_emfield()
     - LOOPTHREADS -> POSIXTHREADS
     - DIRECT_INVERSION -> Newton or NEWTON
   * in cycle/share/cycle_share.c
     - enclosed solve_TDMA_emfield() within #ifdef EMFIELD and #endif
     - in solve_TDMA_emfield(), added some assert(_ai_all(gl,i,j,k)<2147483647)
   * in src/control.c
     - in write_innards(), fixed bug related to "with assertions"
     - in longstr_t bib, rewrote the authors names following the google scholar style
   * in USAGE
     - added section "RUN WARP WITH OPENMP THREADS"
   * in cycle/tsemf/
     - renamed _direct_inversion to _Newton
   * in src/data.c
     - in write_data_file_binary(), fixed a bug when DISTMPI and TRAPEZOIDAL are both set:
       .bs->Resm1 should be .bs->Res_trapezoidal_m1
   * in config/config.c
     - added functions is_lower_case(), to_upper_case(), *strupr(), *strnounderscore()
     - in handle_choices(), added calls to strupr and strnounderscore
     - made various small changes to change the aesthetic of the questions asked
       when calling make config
   * in .makefile-header-default
     - changed -O4 to -O3


2016 DEC 10b
   * in cycle/share/cycle_share.c
     - in WARP_solve_TDMA(), now calls EXM_solve_TDMA() if gl->EM_BDRY_EXPLICIT
       is set
   * in src/common.h
     - in gl_t, added EM_BDRY_EXPLICIT
   * in src/main.c
     - in main(), added processing of flag -emexp if DISTMPI and EMFIELD are set
 

2016 DEC 10a
   * in cycle/tsemf/_IMAF/tsemf.c
     - added function exchange_dUinc_emfield()
     - in update_U_emfield_IMAF(), added zoneexp which is slightly bigger than zone
       when DISTMPI is defined
     - in update_U_emfield_IMAF(), added call to exchange_dUinc_emfield()


2016 DEC 09b
   * in src/main.c
     - in main(), if THREADS is defined, now calls MPI_Init_thread() instead of MPI_Init()
   * in cycle/tsemf/_DDADI/tsemf.c
     - in update_dUstar_emfield(), now calls WARP_solve_TDMA() instead of EXM_solve_TDMA()
   * in cycle/tsemf/_IMAF/tsemf.c
     - renamed update_dUinc_from_dUtilde_emfield() to update_dUinc_from_dUstar_emfield()
     

2016 DEC 09a
   * in cycle/tsemf/_IMAF/tsemf.c
     - in update_dUstar_emfield(), now calls WARP_solve_TDMA() instead of EXM_solve_TDMA()
   * in cycle/share/tsemf_share.c
     - in update_dUstar_emfield_ADI(), now calls WARP_solve_TDMA() instead of EXM_solve_TDMA()
   * in cycle/share/cycle_share.c
     - added WARP_solve_TDMA()


2016 DEC 06a
   * in cycle/resconv/_FDS_5o_WENO*/resconv.c
     - moved remapping of invalid nodes to valid ones from add_dFstar_residual()
       to find_Fstar_interface()


2016 DEC 05a
   * in src/data.c
     - in read_data_file_interpolation(), moved wfprintf(stdout,"[done]\n"); after 
       MPI_Barrier()
     - in write_data_file_interpolation(), commented the MPI_Bcast() commands
       and replaced them by MPI_Ssend() and MPI_Recv()


2016 DEC 04b
   * renamed
     - bfluidmem -> hbw_mem_fluid
     - bemfieldmem -> hbw_mem_emfield
     - bemf -> hbw_res_emfield
     - br -> hbw_res_fluid
     - bb -> hbw_bdry_fluid
     - br_conv -> hbw_resconv_fluid


2016 DEC 04a
   * in tools
     - renamed substr*.sh to substr_rpl*.sh
     - renamed subword.sh to subword_rpl.sh
     - added subword_perl.sh
     - added substr*_perl.sh
   * in src/data.c
     - in read_data_file_ascii(), added windowis=, windowie=, etc
     - in write_data_file_ascii(), added windowis=, windowie=, etc


2016 DEC 03a
   * in cycle/resconv/
     - added _FDS_7o_TVD_WENO+
   * in cycle/resconv/*WENO*/resconv.c
     - in add_dFstar_residual(), made sure is_node_valid() is not called for a node
       outside of gl->domain
   * in src/common.c
     - redefined numxnode from max(2,br-1) to 1


2016 DEC 02a
   * in cycle/resconv/
     - added _FDS_7o_WENO+
     - added _FDS_7o_WENO
   * in src/control.c
     - in bib[], added balsara2000a
   * in src/common.c
     - redefined numxnode from 2 to max(2,br-1)
   * in cycle/share/res_share.c
     - added _f_WENO7()


2016 DEC 01b
   * in src/common.c
     - deleted _domain_from_rank_mem_old()
   * in src/post.c
     - in write_post_file_vtk() made various fixes when DISTMPI is defined


2016 DEC 01a
   * in src/main.c
     - in main(), got rid of free_clipped_variables() [was causing a problem when no iteration was 
       performed]
   * in src/data.c
     - added is_data_point_in_domain()
     - in read_data_file_interpolation(), changed distancemax by radiusmax2
     - in read_data_file_interpolation(), added xmin and xmax variables
     - in read_data_file_interpolation(), added call to is_data_point_in_domain()
 

2016 NOV 30b
   * in src/data.c
     - rewrote is_interpolation_occurring_in_zone()
     - rewrote find_interpolation_zone()
     - in read_data_file_interpolation(), set zone=_zone_intersection(gl->domain_all,gl->domain_lim)
       instead of gl->domain_lim
     - in read_data_file_interpolation(), only call interpolate_one_node_fluid() if
       a zone was found in find_interpolation_zone()


2016 NOV 30a
   * in src/data.c
     - added is_interpolation_occurring_in_zone()
     - added find_interpolation_zone()
     - in read_data_file_interpolation(), added call to find_interpolation_zone()
     - in read_data_file_interpolation(), turn off threading of first loop if DISTMPI is set: 
       mpich can't handle efficiently creating threads in this l_file loop


2016 NOV 29b
   * renamed
     - resume_nodes_only_in_zone -> resume_nodes_only_in_zone_and_update_bdry_nodes()
     - resume_nodes_only_in_zone_without_bdry_update -> resume_nodes_only_in_zone 
   * in cycle/share/cycle_share.c
     - added resume_nodes_in_zone()
     - in resume_nodes_only_in_zone(), took away bdryres variables (not needed)
     - in check_residual(), added code for DISTMPI
   * in src/data.c
     - in read_data_file_interpolation(), changed the preambule to include dt and time
     - in write_data_file_interpolation(), changed the preambule to include dt and time
     - deleted write_data_file_interpolation_good() and read_data_file_interpolation_old()


2016 NOV 29a
   * in cycle/_cycle.h
     - added resume_nodes_only_in_zone_without_bdry_update()
   * in src/data.c
     - renamed write_data_file_interpolation() to write_data_file_interpolation_good()
     - rewrote write_data_file_interpolation()


2016 NOV 28b
   * in src/common.c
     - added _ai_all()
   * in src/data.c
     - in write_data_file_interpolation(), changed resume_nodes_only_in_zone()
       to resume_nodes_only_in_zone_without_bdry_update()
     - changed malloc of NODEVALID to domain_all instead of domain_lim
     - in write_data_file_interpolation(), now call NODEVALID[] with _ai_all() rather
       than _ai()
   * in cycle/_standard/cycle.c
     - in init_cycle(), added a second update_prim_emfield_mem_in_zone()
       just after update_bdry_nodes() -- necessary to compute the residual of the
       fluid nodes properly


2016 NOV 28a
   * in cycle/_standard/cycle.c
     - in init_cycle(), added update_bdry_nodes() before find_residual()
   * in cycle/share/cycle_share.c
     - added find_clipped_variables_all()
     - in update_runtime_codex_xi_from_gl(), took away call to MPI_Allreduce_Sum_Cliplist()
       and added call to find_clipped_variables_all(), find_clipped_variables_list_all(),
       find_clipped_muscl_variables_list_all(), find_clipped_bdry_variables_list_all()
   * in model/_generic/model.c
     - in add_to_clipped_variables(), added condition based on gl->REPORTCLIPPING
     - in add_to_clipped_variables2(), added condition based on gl->REPORTCLIPPING
     - added find_clipped_variables_list_all(), find_clipped_muscl_variables_list_all(),
       find_clipped_bdry_variables_list_all(), add_to_clipped_variables_all(),
       reset_clipped_variables_all(), free_clipped_variables()
     - in init_clipped_variables(), added initialization of gl->model.clip*all if 
       DISTMPI specified
   * in model/_generic/model.hh
     - in gl_model_t, added clipnumtot_all, clipnamenum_all, clipname_all, clipnum_all
   * in src/common.h
     - in gl_t, added REPORTCLIPPING
   * in src/main.c
     - in process_flag_1(), added -ncr flag and initialization of REPORTCLIPPING
     - in main(), call free_clipped_variables()
 

2016 NOV 27a
   * in cycle/share/cycle_share.c
     - added MPI_Allreduce_Sum_Cliplist()
     - in update_runtime_codex_xi_from_gl(), added call to MPI_Allreduce_Sum_Cliplist()


2016 NOV 26b
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific(), got rid of calls to update_prim_emfield_mem_in_zone()
       except UpdateEMField()
   * in cycle/share/cycle_share.c
     - in exchange_U(), now limit the resume of the fluid nodes if the return
       value of MPI_Bcast_Node is MPI_DATA_RECEIVED
   * in src/common.c   
     - in MPI_Bcast_Node(), now assign a return value depending on whether data
       was received or sent


2016 NOV 26a
   * in cycle/_standard/cycle.c
     - in init_cycle(), changed call to resume_nodes_only_in_zone_without_bdry_update:
       now _zone_intersection(gl->domain_all,_zone_expansion(gl->domain,bemfieldmem)) instead
       of _zone_intersection(gl->domain_all,_zone_expansion(gl->domain,+1))
     - made update_prim_emfield_mem_in_zone() function of bemfieldmem
   * in cycle/share/cycle_share.c
     - in resume_nodes_only_in_zone_without_bdry_update(), used to resume nodes within
       zone.is-bb to zone.ie+bb. Now resume nodes only within zone
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - in  write_model_fluid_template(), fixed bug: comment was not closed
   * in model/emfield/*/emfield.hh
     - added bemfieldmem
   * in model/fluid/*/fluid.hh
     - added bfluidmem
   * in src/common.h
     - changed definition of nodeoverlap to (max(bemf,max(br,bb)+bfluidmem))


2016 NOV 25b
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific(), small modifications related to DISTMPI code  
     - in runtime_actions_cycle_specific(), now call exchange_U_emfield()  
   * in cycle/share/cycle_share.c
     - added exchange_U_emfield()


2016 NOV 25a
   * in cycle/share/cycle_share.c
     - added resume_nodes_only_in_zone_without_bdry_update()
   * in cycle/_standard/cycle.c
     - in init_cycle(), now do not call update_prim_emfield_mem_in_zone() before resuming the nodes
     - in init_cycle(), now call resume_nodes_only_in_zone_without_bdry_update() instead
       of resume_nodes_only_in_zone()
     - in init_cycle() changed call to update_prim_emfield_mem_in_zone()
   * in model/emfield/*/emfield.hh
     - added constant bemf
   * in src/common.h
     - redefined nodeoverlap to max(bemf,max(br,bb))


2016 NOV 24b
   * in model/emfield/_Ohm_generalized/emfield.c 
     - modified help.txt


2016 NOV 24a
   * in model/emfield/_Ohm_generalized/emfield.c 
     - added help.txt


2016 NOV 23a
   * in cycle/share/cycle_share.c
     - deleted exchange_U_old()
   * in src/common.c
     - added is_node_in_domain_lim()
   * in model/emfield/_Ohm_generalized/emfield.c
     - added some asserts checking for is_node_in_domain_lim() in various locations


2016 NOV 22a
   * in cycle/_standard/cycle.c
     - in perform_one_iteration(), added ximax_max_emfield and associated code for DISTMPI
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_vars_except_xi_from_gl(), added variable definitions for
       effiter_U_sum_emfield, effiter_R_sum_emfield
   * in model/beam/_ebeam_fixed/beam.c
     - in read_and_init_beam_actions_2(), added condition is_node_in_zone within SetQbeam
   * in model/emfield/*/emfield.c
     - in read_model_emfield_actions_2(), added condition is_node_in_zone within 
       SetRelativePermittivity, SetSolidConductivity, SetElectroMotiveForce
   * in src/bdry.c
     - in read_bdry(), now call update_node_type to set node types to unused by default for emfield 
     - in read_bdry(), fixed syntax  when accessing node type within np for emfield nodes 
   * in src/init.c
     - in read_init_actions_emfield(), call is_node_in_zone within Region
   * renamed
     - type_EMFIELD -> type_emf


2016 NOV 20a
   * in src/bdry.c
     - in read_bdry(), now call init_data_structure() instead of 
       init_data_structure_and_create_nodes()
   * in src/common.h
     - in np_t, removed resphi and dphi1 when EMFIELD is defined
   * in bin
     - modified ramp.wrp and unsteady.wrp


2016 NOV 18b
   * in src/post.c
     - in read_post(), inserted a fatal_error call when DISTMPI is defined and the 
       rank is not zero, because the current post module is not compatible with MPI
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), inserted a MPI_Allreduce() call for the
       variable Pfirstpass
   * in bin
     - added heatwedge.wrp


2016 NOV 18a
   * in cycle/share/cycle_share.c
     - in increase_time_level(), changed the domain affected from gl->domain
       to gl->domain_lim
     - in read_cycle(), added fatal_error if !gl->CYCLE_FLUID_READ or
       !gl->CYCLE_EMFIELD_READ
     - in process_code_runtime(), changed SOAP_fatal_error to fatal_error when 
       !gl->cycle.RUNTIMEMODULEFOUND
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), fixed bug: only set Qadd and Fbody[]
       if node is within gl->domain_lim (only makes a difference with MPI)
   * in src/common.c
     - rewrote _domain_from_rank_mem() in robust fashion 
   * in src/control.c
     - in readcontrol_actions(), moved gl->DISTDOMAIN=TRUE; higher up
       to just above broadcast_soap_vars()


2016 NOV 17b
   * in src/common.h
     - for2DL(j,js,je) now returns j=js if in !D rather than j=0 
     - for3DL(k,ks,ke) now returns k=ks if in 2D rather than k=0 
     - added numdomain_k to gl_t
   * in src/common.c
     - modified _node_rank() and _domain_from_rank_mem() for 3D
   * in src/init.c
     - in read_init_actions_fluid(), fixed a bug: in Region() command,
       when calling init_node_fluid(), needed to make sure this node was part of
       domain_lim
   * in src/control.c
     - in read_control_actions(), added code for 3D and improved the
       way the zones are split along i, j, and k 
 

2016 NOV 17a
   * in src/common.h
     - in gl_t, added *domain_from_rank,*domain_lim_from_rank
   * in src/common.c   
     - added _domain_from_rank_oldi() and _node_rank_oldi()
     - added _domain_from_rank_mem
     - added _domain_lim_from_rank_mem
   * in src/control.c
     - in readcontrol_actions(), changed the way gl->numdomain_i and gl->numdomain_j
       are determined
     - added initialization of gl->domain_from_rank[cnt] and gl->domain_lim_from_rank[cnt]


2016 NOV 16a
   * in src/common.h
     - in gl_t, added numdomain_i,numdomain_j if DISTMPI defined
   * in src/common.c
     - modified _node_rank() 
     - modified _domain_from_rank()
   * in src/bdry.c
     - in read_bdry(), modified check of MPI ranks on nodes
   * in src/control.c
     - in readcontrol_actions(), added gl->numdomain_i and gl->numdomain_j if DISTMPI defined


2016 NOV 15a
   * in src/bdry.c
     - at end of read_bdry(), added better check of MPI ranks on nodes 
   * in src/common.c
     - updated _node_rank()
     - updated _domain_from_rank()
   

2016 NOV 14a
   * in src/common.c
     - updated _node_rank()
     - updated _domain_from_rank()
   * in src/bdry.c
     - at end of read_bdry(), added check of MPI ranks on nodes using _node_rank()
       and _domain_from_rank()


2016 NOV 08a
   * in src/common.h
     - added constant nodeoverlap
   * in src/bdry.c
     - got rid of verify_exchange_node_type()
   * in cycle/share/cycle_share.c
     - in exchange_U(), changed br+bb to nodeoverlap
     - renamed exchange_U() to exchange_U_old()
     - added new exchange_U() using MPI_Bcast_node
   * in src/common.c
     - in _domain_lim_from_domain(), changed br+bb+2 to nodeoverlap
     - renamed _node_rank to _node_rank_old
     - renamed _domain_from_rank to _domain_from_rank_old
     - added new _node_rank which splits the domain along i
     - added new _domain_from_rank which splits the domain along i  
     - in MPI_IBsend(), do not call anymore MPI_Ssend()


2016 NOV 07b
   * in cycle/share/cycle_share.c
     - in resume_nodes_only_in_zone(), reverted to update_bdry_node() rather than
       find_prim_fluid() when node is within gl->domain
   * in src/bdry.c
     - in read_bdry(), now copy node types throughout gl->domain_lim instead of
       gl->domain_lim -1
   * in src/control.c
     - in readcontrol_actions(), added missing MPI_Bcast_Node(metrics,nd*nd+1,MPI_DOUBLE..


2016 NOV 07a
   * in cycle/_standard/cycle.c
     - in init_cycle(), added zone_resume function of gl->domain_lim
       and made resume_nodes_only_in_zone function of zone_resume
   * in cycle/share/cycle_share.c
     - in resume_nodes_only_in_zone(), changed update_bdry_node() to find_prim_fluid()
       --> NEEDS TESTING
   * in src/bdry.c
     - added display_zone()
     - added display_node_type_window_local_process()
     - in read_bdry(), made some changes
   * in src/control.c
     - in find_metrics_on_all_nodes(), added call to display_node_type_window_local_process()
     - in readcontrol_actions(), added broadcasting of metrics terms



2016 NOV 06a
   * Renamed 
     _subdomain_from_rank -> _domain_from_rank
     _subdomain_expanded_from_rank -> _domain_lim_from_rank
     _subdomain_expanded -> _domain_lim_from_domain
     init_data_structure -> init_data_structure_and_create_nodes
   * in src/common.c
     - added function init_data_structure
   * in src/bdry.c
     - in read_bdry(), made changes when DISTMPI is set
     - in display_node_type(), changed the bandwidth of the window
   * in lib/soap/soap.c
     - in SOAP_process_code(), only output to stdout [action ignored] if codex->SCREENOUTPUT
 

2016 NOV 05b
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_vars_except_xi_from_gl(), added variables 
       effiter_U_sum and effiter_R_sum when DISTMPI is set
     - in a few places, changed the call of find_prim_fluid(np,*gl) to find_prim_fluid(*np,l,*gl)
   * in src/config.c
     - changed the order of mpicc and icc within CO_str
   * in src/common.c
     - in wfprintf(), fixed bug when DISTMPI is set
   * in tools
     - added mpitest.c


2016 NOV 05a
   * in bin
     - updated heatbdry.wrp


2016 OCT 31a
   * in lib/gridg/share.c
     - in find_root_eps(), and find_segment_1() rewrote the error message
     - changed stderr to stdout in a few places
   * in lib/soap/soap.h
     - added action_being_processed to SOAP_codex_t
   * in lib/soap/soap.c
     - in SOAP_fatal_error(), improved error message and made it function of action_being_processed
     - in SOAP_init_codex(), SOAP_free_codex(), SOAP_copy_codex(), added action_being_processed
     - in SOAP_process_code(), made changes to init string action_being_processed
     - changed stderr to stdout in a few places
   * in model/thermo/_generic/thermo.c
     - renamed fprintf to wfprintf
   * in model/emfield/_Ohm_generalized/emfield.c
     - renamed fprintf to wfprintf
   * in cycle/restime/_Cauchy_2o+/restime.c
     - renamed fprintf to wfprintf
   * in src/common.c
     - in fatal_error(), renamed fprintf to wfprintf
     - in wfprintf(), changed stream to stdout if it was set to stderr


2016 OCT 30a
   * in lib/gridg/*.c
     - added SOAP_codex_t *codex to the parameters of find_segment*() functions
   * in lib/gridg/share.c
     - in find_segment_1(), replaced GRIDG_fatal_error by SOAP_fatal_error
     - in find_segment_NO(), replaced GRIDG_fatal_error by SOAP_fatal_error
     - in find_root_eps(), replaced GRIDG_fatal_error by SOAP_fatal_error
     - in find_segment_type() replaced GRIDG_fatal_error by SOAP_fatal_error


2016 OCT 25a
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), changed Pfirstpass/(P+1e-30)<0.1 
       to Pfirstpass/(P+1e-30)<1e-5
   * in src/main.c
     - in main(), fixed bug related to flag -iter 


2016 OCT 23a
   * in bin
     - modified jachimowsky_wedge.wrp
   * in cycle/ressource/.config
     - changed SVS and SDS to experimental


2016 OCT 21a
   * in model/fluid/*/fluid_conv.c
     - added function is_musclvar_a_mass_fraction()
   * in model/fluid/_drift-diffusion/fluid.c
     - added function is_musclvar_a_mass_fraction()
   * in model/_model.h
     - added function is_musclvar_a_mass_fraction()
   * in cycle/resconv/_FDS_5o_TVD_WENO+/resconv.c
     - in find_Fstar_interface(), made the flux function of is_musclvar_a_mass_fraction()
   * in src/main.c
     - in main(), added again flag -iter which does the same as -reset (for
       those who are used to -iter and are too lazy to switch just yet..)
   * in bin
     - updated heatbdry.wrp


2016 OCT 20a
   * in bin
     - added heatbdry.wrp
   * in cycle/resconv/_FDS_5o_TVD_WENO+/resconv.c
     - in find_Fstar_interface(), now determine the musclvars ns-1 and ns-2
       using WENO rather than TVD


2016 OCT 17a
   * in src/main.c
     - renamed -iter flag to -reset
   * in src/control.c
     - in readcontrol_actions(), now sets effiter to zero if -reset flag
       is set
   * in bin
     - updated DBD_actuator.wrp and heatotbdrylayer.wrp and bump.wrp
   * in cycle/resconv/_FDS_5o_TVD_WENO+/resconv.c
     - in find_Fstar_interface(), now use TVD limiter only for the charged
       species mass conservation equations and WENO for all others


2016 OCT 16a
   * in bin
     - modified impinge.wrp and riemann.wrp


2016 OCT 15b
   * in bin
     - modified DBD_actuator.wrp


2016 OCT 15a
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - in write_model_fluid_template(), added ADD_ETA_TO_ETAT_WITHIN_QK=NO;
     - in read_model_fluid_actions(), added read of ADD_ETA_TO_ETAT_WITHIN_QK
   * in model/fluid/_Favre-Reynolds*/fluid.hh
     - in gl_model_fluid_t, added ADD_ETA_TO_ETAT_WITHIN_QK
   * in model/fluid/_Favre-Reynolds*/fluid_source.c
     - in _Qk(), made etaeff equal to etastar if ADD_ETA_TO_ETAT_WITHIN_QK is set to YES
   * in bin
     - in various wrp files, added ADD_ETA_TO_ETAT_WITHIN_QK within FavreReynolds*() module


2016 OCT 14c
   * renamed _f_weno to _f_WENO5
   * renamed _f_lim to _f_TVD_limiter
   * in cycle/share/res_share.c
     - moved _f_WENO5 here from cycle/resconv/_FDS_5o_WENO/resconv.c
   * renamed cycle/resconv/_FDS_*_MUSCL* to  cycle/resconv/_FDS_*_TVD*
   * renamed cycle/resconv/_FDS_*_Yee* to  cycle/resconv/_FDS_*_STVD*
   * in cycle/resconv
     - added _FDS_5o_TVD_WENO+
   * in model/fluid/_Favre-Reynolds*/fluid_source.c
     - in function _Qk(), changed _etat to _etastar to ensure turbulence is always
       generated even when k->0 (necessary with positivity-preserving schemes to yield
       correct answer)
 

2016 OCT 14b
   * in bin
     - modified DBD_actuator.wrp


2016 OCT 14a
   * in cycle/*/cycle.c
     - in write_runtime_template(), now set to maximum CFL to 0.5 rather than 1.0
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - renamed find_Gamma() to  find_Gamma_old()
     - rewrote find_Gamma() to include preconditioning for all fluxes (not just charged
       species)


2016 OCT 12a
   * in various Makefiles
     - rewrote make src ; make arc on two separate lines -> now the make stops 
       everytime there is an error
   * deleted cycle/ts/old
   * deleted cycle/resconv/old
   * in cycle/resconv
     - deleted experimental schemes that are not expected to be used (*_X, WENO_3o, Parent_MUSCL )
   * in model/fluid
     - deleted _drift-diffusion_mass
   * in cycle/tsemf/
     - deleted _IMAF_benchmark
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in find_Gamma(), removed dtaumin, dtaumax in variable declaration (not used)
   * in model/chem
     - added _H2_Air_Plasma_14s_47r
   * in model/chem/_H2_Air_9s_20r_Jachimowsky/chem.c
     - fixed some bugs 


2016 OCT 11b
   * in cycle/share/ts_share.c
     - added function add_dSstar_dUstar_to_TDMA_test() 
     - in add_dSstar_dUstar_to_TDMA(), made fix to prevent all diagonal terms of 
       dSstar_dUstar to be positive


2016 OCT 11a
   * in bin
     - added heattobdrylayer.wrp


2016 OCT 10b
   * in bin
     - added jachimowski_wedge.wrp to test the newly modified jachimowski model


2016 OCT 10a
   * in model/chem
     - copied   _H2_Air_9s_20r_Jachimowsky to  _H2_Air_9s_20r_Jachimowsky_old
   * in model/chem/_H2_Air_9s_20r_Jachimowsky/chem.hh
     - added constants specH2, specO, specH, etc
   * in model/chem/_H2_Air_9s_20r_Jachimowsky/chem.c
     - rewrote all equations so that they are function of specH2, specN2, etc, instead
       of 0, 3, 4, etc.
   * in cycle/resconv/_FDS_2o_Yee+/resconv.c
     - added function find_Delta_Lambda_for_dtau_non_positive (used only for testing)
   * in model/chem/_Air_Plasma_8s_28r_Macheret/chem.hh
     - changed the order of O, N species with O2 and N2 species -> more stable with
       the positivity-preserving schemes
   * in bin
     - in various files that made use of the Macheret chemical model, changed
       the order of O, N species with O2 and N2 species


2016 OCT 09b
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - added test function find_Gamma_test2()
   * in bin
     - added test.wrp, vacuum_reacting.wrp
     - in DBD_actuator.wrp, changed initial conditions for mole fractions
       to no less than 1e-15 (1e-20 was giving some problems with positivity-preserving
       schemes --> needs checking)


2016 OCT 09a
   * in cycle/share/cycle_share.c
     - in find_dtau(), limited dtaumax as being at most 100 times dtaumin


2016 OCT 08b
   * in bin
     - in all .wrp files, got rid of PRECONDITIONING=FALSE within the Cycle( Fluid(..); ); modules
   * in model/fluid/*/fluid.c
     - in find_Gamma(), obtain again the base dtau from find_constant_dtau()
     - in find_Gamma(), altered the flux-by-flux dtau by taking the sqrt of dtau_vector
       and dtau_constant -> seems to work great but needs more checking


2016 OCT 08a
   * in model/fluid/*
     - got rid of PRECONDITIONING within fluid cycle module
   * in cycle/*/cycle.c
     - added sigma1, sigma2, and PRECONDITIONING within runtime module
   * in cycle/share/cycle_share.c
     - in void update_runtime_codex_vars_except_xi_from_gl(), got rid of reading gl->sigma
     - in find_constant_dtau(), added effect of sigma2 
   * in bin
     - updated all wrp files so that the runtime modules include sigma1, sigma2, and PRECONDITIONING
   * in src/data.c
     - updated read_datafile and write_datafile so that gl->sigma is not read and written anymore
       (resulted in new data files format 009 and 109)
   * in src/common.h
     - in gl_t, renamed sigma to sigma1
     - in gl_t, added sigma2, PRECONDITIONING
   * in lib/soap/soap.c
     - added function SOAP_get_argum_bool()
   * in cycle/ts/*/ts.c
     - in update_dUtilde(), renamed gl->cycle.fluid.PRECONDITIONING to gl->PRECONDITIONING
   * in src/control.c
     - in readcontrol_actions(), added initialization of sigma1, sigma2


2016 OCT 07b
   * in model/fluid/_Navier-Stokes_perfect/fluid.c, in model/fluid/_Favre-Reynolds*/fluid.c
     - in function find_Gamma() and find_Gamma_inverse(), made modifications to
       the preconditioned pseudotime step: now dtau is the geometric average between
       the dtaumin and dtaumax obtained from the dtau vector


2016 OCT 07a
   * in cycle/ressource/doc/report.tex
     - added section on local pseudotime step
   * in model/fluid/_Favre-Reynolds/fluid.c
     - in find_Gamma() and find_Gamma_inverse(), made the preconditioned time step
       the sqrt of the minimum dt and the dt_vector
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - made changes to find_Gamma() but with no effect


2016 OCT 06c
   * in lib/soap/soap.h
     - defined some common ANSI colors to be used within printf for terminal output
   * in cycle/ressource/
     - renamed _forward+ to _SDS+
     - added _SVS+
   * in cycle/ressource/doc/report.tex
     - added section of SVS    
   * renamed find_clipped_variables_info to find_clipped_variables_list
   * in model/_generic/model.c
     - added find_clipped_muscl_variables_list() and find_clipped_muscl_variables_list()
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_xi_from_gl(), added variables clipinfo_muscl, clipinfo_bdry


2016 OCT 06b
   * in lib/soap/soap.c
     - in SOAP_process_code, redirect the [ignored action] to stdout rather than stderr
   * renamed AddHeatSphere to AddHeatPoint everywhere
   * in model/fluid/Navier-Stokes_perfect/fluid.c
     - in write_model_fluid_template(), include AddHeatPoint in 2D
     - in read_model_fluid_actions_2(), include AddHeatPoint in 2D


2016 OCT 06a
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_Fstar_given_metrics(), fixed bug related to the call of _Vstar using
       non given metrics
   * in cycle/resconv/_FDS_2o_Parent/resconv.c
     - in find_Fstar_interface_efficient(), added a check for find_Fstar_given_metrics()
       by calling find_Fstar_from_jacvars() 
       --> the check is turned off by default
   * in bin
     - added flat_3.wrp


2016 OCT 05b
   * in src/common.c
     - added function find_homogeneous_jacobian()


2016 OCT 05a
   * in model/fluid/_Favre-Reynolds_Tv/fluid_conv.c
     - added function find_jacvars_from_U()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_conv.c
     - added function find_jacvars_from_U()
   * in model/fluid/_drift-diffusion/fluid.c
     - added function find_jacvars_from_U()
   * in model/emfield/_Ohm/emfield.c
     - in find_dtau_emfield(), commented out section related to local pseudotime
       being function of conductivities at nearby interfaces (makes no difference
       except with respect to compilation errors because this section was effectively
       commented with a if (FALSE) statement)
   * in src/common.h
     - in npbs_t, added Lambda_S_minus if _RESSOURCE_LAMBDAMINUS_STORAGE is defined
   * in cycle/res/_generic/res.hh
     - added #include <cycle/ressource/.active/ressource.hh>
   * in cycle/share/ts_share.c
     - in add_dSstar_dUstar_to_TDMA(), now obtain dSstar_dUstar using Lambda_S_minus
       if _RESSOURCE_LAMBDAMINUS_STORAGE is defined
   * in cycle/ressource/_forward+/ressource.hh
     - added #define _RESSOURCE_LAMBDAMINUS_STORAGE
   * in cycle/ressource/_forward+/ressource.c
     - in add_Sstar_residual(), added initialization of np[l].bs->Lambda_S_minus
       if _RESSOURCE_LAMBDAMINUS_STORAGE is defined


2016 OCT 04b
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - added function find_jacvars_from_U()
   * in src/test.c
     - added function test_jacvars()
     - in main(), added flag jacvars


2016 OCT 04a
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), added codex->ACTIONPROCESSED=TRUE; after each
       action


2016 OCT 03a
   * in cycle/ressource/doc
     - modified report.tex
   * in cycle/ressource/_forward+/ressource.c
     - implemented new strategy for positivity-preserving source terms
       (Note: the function find_jacvars_from_U() needs to be implemented in the
       various model/fluid/*/fluid_conv.c)
   

2016 OCT 02a
   * in cycle/ressource/doc
     - modified report.tex


2016 OCT 01a
   * in cycle/ressource/doc
     - modified report.tex


2016 SEP 30b
   * in cycle/ressource
     - added doc
     - renamed _split+ to _forward+


2016 SEP 30a
   * in lib/gridg/eg/tecgrid2D.c and lib/gridg/eg/tecgrid3D.c
     - minor changes to improve screen output
   * in cycle
     - added branch ressource
   * in cycle/_standard/Makefile, cycle/_multizone/Makefile, cycle/_multizone_marching/Makefile
     - added line "ar -x ../ressource/_ressource.a"
   * in cycle/res/_generic/res.c
     - removed function add_Sstar_residual()
 

2016 SEP 28d
   * in cycle/share/res_share.c
     - in _f_lim(), added Koren limiter
   * in cycle/share/res_share.h
     - fixed a bug related to LIMITER_VENKATAKRISHNAN and LIMITER_SUPERBEE being both
       set to the same value
   * in src/Makefile
     - if git is not found, keep src/version.hh the same: don't set version number to unknown
 

2016 SEP 28c
   * in bin/
     - updated DBD_actuator.wrp
   * in lib/soap/doc/report.tex
     - added codex->ACTIONPROCESSED to C managed soap actions
     - took away true, false, no, and true from builtin constants
   * in lib/soap/soap.c
     - in substitute_vars(), took away true, false, yes, and no constants


2016 SEP 28b
   * in src/gitnewversion.sh
     - some bug fixes


2016 SEP 28a
   * in src/Makefile
     - implemented a check for git and if available use git to output current version
       number in version.hh
   * in tools/gitnewversion.sh 
     - check if git is available and exit otherwise
     - use git to output current version number in version.hh before committing
   * in tools/gitpull.sh 
     - check if git is available and exit otherwise


2016 SEP 27b
   * in cycle/share/tsemf_share.c
     - deactivated all functions unless EMFIELD is defined
   * in model/fluid
     - removed _drift-diffusion_new
   * in lib/soap/soap.h
     - in codex_t, added bool ACTIONPROCESSED
   * in lib/soap/soap.c
     - in builtin_actions(), added codex->ACTIONPROCESSED at end of actions
     - in SOAP_process_code(), added error handling in case ACTIONPROCESSED is FALSE
   * in model/fluid/*/fluid.c
     - in read_cycle_fluid_actions(), added codex->ACTIONPROCESSED at end of action
     - in read_model_fluid_actions(), added codex->ACTIONPROCESSED at end of action
   * in model/beam/*/beam.c
     - in read_and_init_beam_actions_2(),  added codex->ACTIONPROCESSED at end of action
     - read_model_beam_actions(), added codex->ACTIONPROCESSED at end of action
   * in model/emfield/*/emfield.c
     - in read_cycle_emfield_actions(), added codex->ACTIONPROCESSED at end of action
     - in read_model_emfield_actions(), added codex->ACTIONPROCESSED at end of action
     - in read_model_emfield_actions_2(), added codex->ACTIONPROCESSED at end of actions
   * in src/post.c
     - in read_post_actions(), added codex->ACTIONPROCESSED at end of actions
   * in src/bdry.c
     - in read_bdry_actions(), added codex->ACTIONPROCESSED at end of actions
   * in src/control.c
     - in readcontrol_actions(), added codex->ACTIONPROCESSED at end of actions
   * in src/init.c
     - in read_init_actions_fluid(), added codex->ACTIONPROCESSED at end of actions
     - in read_init_actions_emfield(), added codex->ACTIONPROCESSED at end of actions
     - in read_init_actions(), added codex->ACTIONPROCESSED at end of actions
   * in cycle/share/cycle_share.c
     - in read_cycle_actions(), added codex->ACTIONPROCESSED at end of actions
     - in runtime_actions(), added codex->ACTIONPROCESSED at end of actions
   * in cycle/*/cycle.c
     - in runtime_actions_cycle_specific(), added codex->ACTIONPROCESSED at end of actions
   * in lib/gridg/*base.c
     - in actions(), added codex->ACTIONPROCESSED at end of actions


2016 SEP 27a
   * in tools
     - added calc.c
     - renamed makemovie to makemovie.sh, makepost to makepost.sh, makepng to makepng.sh,
       and makemissing to makemissing.sh


2016 SEP 26a
   * in bin/makemovie
     - within convert command call, took away -loop 0 argument (only makes a difference
       on some older linux OSes)
   * in config/config.c
     - in find_default_choice(), fixed a bug: needed to initialize
       defaultchoice to an (impossible) negative value
   * in lib/soap/eg/calc.c
     - replaced first argument from -nocr to a format string which is used with printf


2016 SEP 25b
   * in cycle/share
     - added tsemf_share.c and tsemf_share.h
   * in cycle/share/tsemf_share.c
     - moved ADI functions here from cycle/tsemf/_ADI/tsemf.c 
   * in cycle/tsemf/*/tsemf.c
     - renamed update_U_emfield to update_U_emfield_??? with ??? being DDADI, IMAF, etc
     - rewrote update_U_emfield to give the option between the current method
       and ADI
   * in cycle/tsemf/
     - deleted _IMAF-ADI
     - deleted _DDADI_modified


2016 SEP 25a
   * in cycle/share/cycle_share.c
     - added function read_UpdateEMField_arguments()
     - in process_code_runtime(), added call to add_ts_modules_to_codex()
     - added function add_ts_modules_to_codex()
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), when reading action UpdateEMField
       added call to read_UpdateEMField_arguments()
   * in cycle/share/cycle_share.h
     - added constants ADI, DDADI, EXPLICIT_EULER, etc
   * various files
     - got rid of "\n" at the end of the fatal_error calls
   * in cycle/tsemf/_IMAF-ADI/tsemf.c
     - in update_U_emfield(), made algorithm function of constants ADI, DDADI, etc
       and error message function of ts_scheme_name
    

2016 SEP 24b
   * in cycle/tsemf/
     - added directory _IMAF-ADI which includes both the IMAF and the ADI
       integration strategies for the EM fields
   * in bin/
     - modified test_surface_charging.wrp


2016 SEP 24a
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), when reading action UpdateEMField
       changed the order of the arguments dt and subiter_tsemf
     - in runtime_actions_cycle_specific(), when reading action UpdateEMField
       added argument scheme_tsemf
   * in src/common.h
     - in gl_t, added long variable scheme_tsemf if EMFIELD is defined
   * in src/main.c
     - in main(), changed initial value of gl.subiter_tsemf from 4 to 1
     - in main(), added initial value of gl.scheme_tsemf to 0
   * in cycle/tsemf
     - added directory _DDADI_modified (experimental module)
   * in cycle/tsemf
     - renamed _DDADI_iterative to _IMAF
   * in cycle/ts
     - renamed _block_DDADI_iterative to _block_IMAF
   * renamed variables  
     - gl->subiter_tsemf to gl->numsubiter_tsemf
     - gl->subiter_ts to gl->numsubiter_ts
     - gl->DDADIcnt_emfield to gl->subiter_tsemf
     - gl->DDADIcnt to gl->subiter_ts


2016 SEP 23a
   * in bin/
     - altered test_surface_charging.wrp --> made it compatible with an ADI scheme as the
       tsemf module
   * in model/emfield/_Ohm/emfield.c
     - in function find_dtau_emfield(), altered code to include the conductivities
       at nearby interfaces (has no effect, so it is finally commented)


2016 SEP 22a
   * in bin/
     - altered test_surface_charging.wrp (changed frequency and made it as it was before when
       very slow convergence of the potential was observed with DD-ADI iterative
   * in model/emfield/_Ohm/emfield.c
     - in function find_dtau_emfield(), added some code to include the conductivities
       at nearby interfaces (had no effect, so it is finally commented)


2016 SEP 20a
   * in lib/gridg/eg
     - deleted file post.01
   * in src/control.c
     - fixed a bug in readcontrol_actions(): a "}" was missing


2016 SEP 19b
   * in src/common.h
     - added INIT_FLUID and INIT_EMFIELD to np_t
   * in src/control.c
     - in readcontrol_actions(), initialize INIT_FLUID and INIT_EMFIELD to FALSE on all valid nodes
       and do fatal_error if they were not initialized properly
   * in src/data.c
     - in read_data_file_binary(), read_data_file_interpolation(), read_data_file_ascii()
       set INIT_EMFIELD and INIT_FLUID to TRUE when binary data is read at node
   * in src/init.c
     - in read_init_actions_fluid() and read_init_actions_emfield() set INIT_FLUID
       and INIT_EMFIELD to TRUE when initializing the node


2016 SEP 19a
   * in src/data.c
     - renamed totalinitvaremfield to numinitvar_emfield 
     - in read_data_file_interpolation(), made changes to make it possible to
       thread the interpolation processes
   * in bin
     - modified wedge.wrp and DBD_actuator.wrp


2016 SEP 17e
   * in cycle/share/cycle_share.c
     - added schedule(dynamic) to all the OPENMP pragmas --> results in better
       parallelization efficiency
   * in src/main.c
     - in main(), renamed flag -maxthread to -thr
     - in main(), got rid of flag -thr when OPENMPTHREADS is not defined

       
2016 SEP 17d
   * in cycle/share/cycle_share.c
     - in execute_function_on_all_segments(), rewrote the OPENMP part so
       that when gl->maxthread is set to NUM_THREAD_LIMIT, revert
       to the standard pre-september-17th method  
 

2016 SEP 17c
   * in cycle/share/cycle_share.c
     - made maxloopthread and maxzonethread equal to NUM_THREAD_LIMIT
     - in execute_function_on_all_segments(), altered the OPENMP code
       and made it function of maxthread
   * in src/common.h
     - declared constant NUM_THREAD_LIMIT to 9999
     - in gl_t, added maxthread
   * in src/main.c
     - in main(), added flag -maxthread
     - in main(), set gl.maxthread to NUM_THREAD_LIMIT by default


2016 SEP 17b
   * in cycle/share/cycle_share.c
     - for OPENMP threads, changed maximum threads to 9999 instead of 256
   * in config/config.c
     - in output_makefileheader(), if THREADTYPE==3 and compiler is icc,
       changed flag to -openmp rather than -fopenmp
      
 
2016 SEP 17a
   * in cycle/share/cycle_share.c
     - for OPENMP threads, changed maximum threads to 256 instead of 9999
       (needs testing)


2016 SEP 16a
   * updated README.git


2016 SEP 15b
   * in tools
     - updated makepng


2016 SEP 15a
   * in tools
     - updated makemovie
     - updated makepost
     - added makepng
     - renamed fillgaps.sh to makemissing


2016 SEP 14a
   * in tools
     - updated makemovie.sh
     - updated makepost.sh
     - added fillgaps.sh


2016 SEP 13a
   * in lib/soap/doc/report.tex
     - added more explanations for why writing SOAP was chosen over linking to an 
       external perl/python library
     - added if-then construct


2016 SEP 11b
   * in bin
     - updated Makefile


2016 SEP 11a
   * in tools
     - updated makemovie.sh
     - updated makepost.sh
   * in bin
     - updated sod.wrp


2016 SEP 10a
   * in tools
     - updated makemovie.sh
  

2016 SEP 09b
   * in tools
     - updated makemovie.sh
  

2016 SEP 09a
   * in tools
     - updated makemovie.sh
     - updated makepost.sh
   * in src/data.c
     - in read_data_file_binary(), added format 008
     - in write_data_file_binary(), added format 008


2016 SEP 08a
   * in tools
     - updated makemovie.sh
     - deleted makemovie.mcr
     - deleted makepostfiles.sh
     - added makepost.sh


2016 SEP 07a
   * in bin
     - altered DBD_actuator.wrp, LES.wrp, wedge.wrp
   * in tools
     - added makemovie.mcr, makemovie.sh


2016 AUG 19a
   * in model/emfield/_Ohm/emfield.c
     - got rid of unused _dTedXj_interface_*()
   * in bin
     - modified DBD_actuator.wrp
     - modified MHD_generator.wrp


2016 AUG 17a
   * in bin
     - modified test_surface_charging.wrp


2016 AUG 08a
   * in cycle/tsemf/_split/tsemf.c
     - made small changes but without much effect


2016 AUG 07a
   * renamed
     - EXM_vec_t -> EXM_vec3D_t
     - EXM_gl1d_t -> EXM_gl1D_t
     - EXM_gl2d_t -> EXM_gl2D_t
     - EXM_gl3d_t -> EXM_gl3D_t
   * in model/fluid/_drift-diffusion/fluid.hh
     - added references to 2 papers "Electron and Ion.." and "Modeling Weakly-ionized Plasmas.."
   * in lib/exm/exm.c
     - renamed EXM_solve_XDMA to EXM_solve_XDMA_old
     - coded a new EXM_solve_XDMA that is faster for the 2nd sweep
   * in cycle/tsemf/_split/tsemf.c
     - made small changes but without much effect
   * in src/common.h
     - in npbs_t, added dUstaremfield_tmp is _TSEMF_SPLIT is defined


2016 AUG 06a
   * in model/emfield/doc
     - made small improvements in several sections of report.tex
   * in cycle/tsemf/_split/tsemf.c
     - made small changes


2016 AUG 05b
   * in cycle/tsemf
     - added directory split
   * in cycle/tsemf/_direct_inversion/tsemf.c
     - fixed typo in #error the ADI tsemf.c must be compiled with EMFIELD
       to #error the direct_inversion tsemf.c must be compiled with EMFIELD


2016 AUG 05a
   * in bin
     - modified test_surface_charging.wrp
     - modified MHD_generator.wrp


2016 AUG 04b
   * in model/emfield/_Ohm_generalized/emfield.c
     - in _Tk_interface(), now use an harmonic mean instead of a min function
       to determine Tk at the interface
   * in model/fluid/_drift-diffusion/fluid.c
     - enclosed function _Te_m1() within #ifdef UNSTEADY
   * in bin
     - modified test_surface_charging.wrp
     - modified dischargemagnetic.wrp


2016 AUG 04a
   * in model/fluid/_drift-diffusion/fluid.c
     - added function _Te_m1()
   * in model/emfield/_Ohm/emfield.c
     - brought back _dTedXj_interface() to its original form
     - in _Tk_interface(), now use an harmonic mean instead of a min function
       to determine Tk at the interface


2016 AUG 03b
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific() commented out update_Te_local_in_zone() 
   * in cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific() commented out update_Te_local_in_zone() 
   * in model/emfield/_Ohm/emfield.c
     - in _dTedXj_interface, made modifications
   * in model/emfield/doc/report.tex
     - improved section "Discretization of the Electron Temperature Gradients"


2016 AUG 03a
   * in bin
     - modified test_surface_charging.wrp


2016 AUG 02a
   * in model/emfield/_Ohm/emfield.c
     - renamed function _dTedXj_interface() to _dTedXj_interface_orig() 
     - rewrote _dTedXj_interface() adding Ediff to Ediv (seems to improve the monotonicity
       but needs further checking) 
   * in model/emfield/_Ohm_generalized/emfield.c
     - added function _positive()
     - in _Jstar_interface(), take the harmonic mean instead of the arithmetic mean
       when determining mu and Nk for temperature gradients
   * in model/emfield/doc/report.tex
     - in section "Discretization of the Electron Temperature Gradients"
       added a derivation (needs more work)


2016 AUG 01a
   * in model/emfield/*/emfield.c
     - in _Nk_smoothed(), fixed /nd to /(double)nd
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - removed avg_harmonic() function
   * in lib/exm/exm.c
     - added avg_harmonic() function
     - added EXM_fatal_error() function
   * in model/emfield/_Ohm/emfield.c
     - added function _positive()
     - in _Jstar_interface(), take the harmonic mean instead of the arithmetic mean
       when determining mu and Nk for temperature gradients


2016 JUL 31a
   * in model/emfield/doc/report.tex
     - added another section related to exact solution of 1D plasma with dielectric
   * in bin
     - modified test_surface_charging.wrp


2016 JUL 28b
   * in model/chem/Makefile
     - added doc directory in cleanall


2016 JUL 28a
   * in model/fluid/*/fluid.c
     - got rid of function find_Kstar() 
       ( not needed anymore, replaced by find_Kstar_interface)
   * in model/fluid/_Favre-Reynolds/fluid_source.c and model/fluid/_drift-diffusion/fluid.c 
     - in find_dSemfield_dU() and in find_Semfield(), added new source terms
       related to the gradient of epsilonr


2016 JUL 27a
   * in cycle/ts/doc/
     - changed reference from 1994 Bardina to the correct 1987 Bardina
   * in model/fluid/doc/_Transport_Equations/
     - added terms related to spatial variation of epsilon_r to charged species
       transport equations
   * in model/emfield/doc
     - improved explanations at end of analytical solution to surface charging


2016 JUL 26a
   * in model/fluid/doc/Plasma_Model/report.tex
     - added terms related to spatial variation of epsilon_r to transport equations


2016 JUL 25a
   * in model/fluid/doc
     - added Plasma_Model
   * in model/fluid/doc/Transport_Equations/report.tex
     - better explanations to ktilde


2016 JUL 24a
   * in bin/
     - moved 1Dplasma.wrp to test_surface_charging.wrp
     - modified test_surface_charging.wrp
   * in model/emfield/doc/
     - altered report.tex for non-constant epsilon_r


2016 JUL 23a
   * in bin/
     - modified LES.wrp


2016 JUL 22b
   * in bin/
     - modified 1Dplasma.wrp


2016 JUL 22a
   * in bin/
     - modified 1Dplasma.wrp


2016 JUL 21a
   * in bin/
     - added 1Dplasma.wrp


2016 JUL 20a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - renamed epsilon0 to (epsilon0*_epsilonr(np[l],gl))
   * in model/fluid/_drift-diffusion/fluid.c
     - renamed epsilon0 to (epsilon0*_epsilonr(np[l],gl))
   * in model/emfield/_Ohm/emfield.c
     - added function _epsilonr()
   * in model/emfield/_Ohm_generalized/emfield.c
     - in read_model_emfield_actions(), added initialization of epsilonr on all nodes
     - in read_model_emfield_actions_2(), added the action SetRelativePermittivity()
     - in write_model_emfield_template(), added the default call to SetRelativePermittivity()
     - added function _epsilonr_interface()  
     - in functions find_linearization_coefficients_inner_node_emfield(), 
       _Jdispstar_interface(), find_dtau_emfield(), multiplied epsilon0 by the local epsilonr
   * in model/emfield/_Ohm*/emfield.c
     - in find_post_variable_name_emfield(), and find_post_variable_value_emfield()
       added post variable epsilonr
         

2016 JUL 19a
   * in model/emfield/_Ohm/emfield.c
     - in read_model_emfield_actions(), added initialization of epsilonr on all nodes
     - in read_model_emfield_actions_2(), added the action SetRelativePermittivity()
     - in write_model_emfield_template(), added the default call to SetRelativePermittivity()
     - added function _epsilonr_interface()  
     - in functions find_linearization_coefficients_inner_node_emfield(), 
       _Jdispstar_interface(), find_dtau_emfield(), multiplied epsilon0 by the local epsilonr
   * in src/common.h
     - in npbs_t, added epsilonr if _EMFIELD_OHM or _EMFIELD_OHM_GENERALIZED is set
 

2016 JUL 18a
   * in model/emfield/doc/report.tex
     - fixed mistake related to the referencing of Eq. eqn:ddtDeltaphie


2016 JUL 17a
   * in model/fluid/_Favre-Reynolds*/fluid_source.c
     - in _Qk(), changed _etastar() to _etat()
   * in model/fluid/_Favre-Reynolds*/fluid_init.c
     - in write_init_fluid_template(), changed k=0 to k=1e-6
   * in model/fluid/doc/Transport_Equations/report.tex
     - updated surface boundary conditions
     - updated Q_k


2016 JUN 26a
   * in bin
     - minor changes to some wrp files


2016 JUN 25a
   * in model/fluid/_Favre-Reynolds_plasma/fluid.hh
     - in gl_model_fluid_t, got rid of DIFFUSION, EMSOURCE
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in read_model_fluid_actions(), write_model_fluid_template()
       got rid of DIFFUSION, EMSOURCE
     - in find_Kstar() and find_Kstar_interface() got rid of DIFFUSION
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_Sstar(), find_dSstar_dU(), got rid of EMSOURCE
     - in find_Saxi(), got rid of DIFFUSION 
    

2016 JUN 24a
   * in src/post.c
     - in integrate_shear_force_on_surface(), now calls find_Kstar_interface()
   * in model/thermo/_generic/thermo.c
     - added _T_from_w_rho_P()
   * in model/fluid/*/fluid_conv.c 
     - added MUSCLVARS
     - in find_musclvars(), find_Ustar_from_musclvars(), find_jacvars_from_musclvars(), 
       added code for MUSCLVARS2 (pressure is extrapolated) and for MUSCLVARS1
       (temperature is extrapolated) 


2016 JUN 23d
   * in model/fluid/*/fluid.c
     - added function find_Kstar_interface()
   * in lib/exm/exm.h
     - added macro avg()
   * in cycle/res/_generic/res.c
     - in add_dKstar_dG_residual(), now calls find_Kstar_interface()
   * in cycle/share/res_share.c
     - got rid of function avg()
   * in cycle/share/ts_share.c
     - in find_Kstar_dG_dUstar_interface(), now calls find_Kstar_interface()
     - in add_Kstar_dG_dUstar_to_TDMA(), now calls find_Kstar_interface()


2016 JUN 23c
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_musclvars(), find_Ustar_from_musclvars(), find_jacvars_from_musclvars(), 
       find_musclvars_from_jacvars(), added new musclvars where P is interpolated, not T
   * in model/thermo/_generic/thermo.c
     - commented out functions _Res_Telocal(), and find_Te_from_EoverN_test()


2016 JUN 23b
   * in model/emfield/Ohm_generalized/emfield.c
     - in _E_dot_Je_over_mueNe(), changed the smoothing function (increased monotonicity)


2016 JUN 23a
   * in model/emfield/Ohm_generalized/emfield.c
     - in find_Vk_from_mu_at_interface(), when adding DeltaVk_L and DeltaVk_R
       now take the minmod of both rather than an arithmetic average (increased monotonicity)
   * in model/emfield/Ohm/emfield.c
     - in _E_dot_Je_over_mueNe(), changed the smoothing function (increased monotonicity)


2016 JUN 22b
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - got rid of some unused variables in a couple of functions
   * in model/thermo/_generic/thermo.c
     - in _Res_Telocal(), got rid of some unused variables
   * in src/common.c
     - in _nonzero(), modified the way arg is modified if it is zero
   * in model/emfield/_Ohm_generalized/emfield.c
     - added find_Vk_from_mu_at_interface()
     - added _E_dot_Je_over_Ne_i_at_interface()
     - added _E_dot_Je_over_mueNe() 

 
2016 JUN 22a
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - added static function _nonzero() (used to be anchored in fluid_plasma.c)
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - changed _nonzero() to static
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - added _Nesmoothed()
     - in find_Se(), now obtain Ne from _Nesmoothed()
     - in find_Se(), now multiply Se by factTesource when TE==TE_TRANSPORT
     - in find_dSe_dU_transport(), now multiply dSe_dU by factTesource when TE==TE_TRANSPORT
     - in find_dSe_dU_transport(), now set all non-diagonal elements to zero (needs further checking)
     - in find_dSe_dU_transport(), now obtain Ne from _Nesmoothed()
   * in cycle/res/_generic/res.c
     - in add_dKstar_dG_residual(), now calls harmonic_mean_of_two_matrices instead of
       arithmetic_mean_of_two_matrices
   * in cycle/share/ts_share.c
     - in find_Kstar_dG_dUstar_interface(), add_Kstar_dG_dUstar_to_TDMA(), now calls
       harmonic_mean_of_two_matrices instead of arithmetic_mean_of_two_matrices
   * in src/common.c
     - added harmonic_mean_of_two_matrices()
   * in src/post.c
     - in integrate_shear_force_on_surface(), now calls
       harmonic_mean_of_two_matrices instead of arithmetic_mean_of_two_matrices


2016 JUN 21a
   * in model/thermo/_generic/thermo.c
     - added _Res_Telocal() and find_Te_from_EoverN_test()
   * in model/emfield/_Ohm/emfield.c
     - modified _E_dot_Je_over_Ne() to _E_dot_Je_over_mueNe() 
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_Se(), changed _E_dot_Je_over_Ne() to _E_dot_Je_over_mueNe()   
     - in find_dSe_dU_transport(), added dependence of E_dot_Je_over_mueNe
       wrt to mueN and wrt to N


2016 JUN 20a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_dSe_dU_transport(), added term function of _E_dot_Je_over_Ne()
     - in find_dSchem_dU(), add contribution to electron energy transport equation
       only if gl->model.fluid.TE==TE_TRANSPORT
     - in find_Se(), changed _E_dot_Je() to _E_dot_Je_over_Ne()
   * in model/emfield/_Ohm/emfield.c
     - in find_Vk_from_mu_at_interface(), fixed a bug: Vn was not determined at the interface
       but at the left node
     - added _E_dot_Je_over_Ne()
     - added _E_dot_Je_i_at_interface()


2016 JUN 19b
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in find_Gamma(), for electron energy transport, set dtaufact=1.0 not 1e-99
       if TE_TRANSPORT is set
     - in find_Gamma_inverse(), now calls invert_diagonal_matrix() instead
       of invert_matrix()
   * in src/common.c
     - added function invert_diagonal_matrix()
   * in model/emfield/_Ohm/emfield.c
     - rewrote _E_dot_Je() and made it function of E and Ve at the interfaces
       rather than at the nodes
     - added find_Vk_at_interface()
     - added find_Vk_from_mu_at_interface()


2016 JUN 19a
   * in cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific() within action UpdateEMField, 
       added call to update_Te_local_in_zone() after finding the EMField prim_mem
     - renamed numzone to numzones_updated and totzone to numzones_total
   * in cycle/_multizone_marching/cycle.c
     - renamed numzone to numzones_updated and totzone to numzones_total
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_vars_except_xi_from_gl(), initialized numzones_total
       and numzones_updated to 0
   * in bin/*.wrp
     - renamed numzone to numzones_updated 
     - renamed totzone to numzones_total
   * in cycle/share/cycle_share.h
     - in multizone_t, renamed res --> numzones_res, ts --> numzones_ts, 
       bdry --> numzones_bdry 


2016 JUN 18a
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_prim_emfield_mem_2(), fixed a bug: now calls find_Ek_muk_mem*() only 
       for fluid valid nodes
   * in cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), now in EMFIELD section, calls 
       setup_multizone() in between find_residual_with_multizone() and 
       update_U_with_multizone(): this ensures that the nodes with a xi less than ximax 
       are not updated  


2016 JUN 17a
   * in src/common.h
     - in npwk_t, added TDMA_A[nd],TDMA_B[nd],TDMA_C[nd]
   * in cycle/ts/_block_DDADI/ts.c
     - added store_TDMA_jacobians()
     - in update_dUtilde(), made changes so that stored jacobians are used
       in case _TS_STORAGE_JACOBIANS is defined
     - in update_U() and find_dU(), added calls to store_TDMA_jacobians()


2016 JUN 14a
   * in bin
     - updated DBD_actuator.wrp
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_wall(), added Nemax condition (function of J mag. and E mag.) to 
       negative species at anode BC 
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), added Nemax condition (function of J mag. and E mag.) to 
       negative species at anode BC 
   * in model/emfield/_Ohm/emfield.c
     - in _dphi_interface2() and _dphi_interface3(), added TYPELEVEL parameter
     - in find_prim_emfield_mem_1(), made changes so that np[l].bs->Eemagsmoothedmem
       is obtained only from FLUID nodes
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_Ee_interface3(), and find_Ee_interface2(), added TYPELEVEL parameter
     - in find_prim_emfield_mem_3(), made changes so that np[l].bs->Eemagsmoothedmem
       is obtained only from FLUID nodes


2016 JUN 13a
   * in bin
     - updated DBD_actuator.wrp
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_wall(), reverted  change to the electrode BC to pre 16jun07 WARP
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), reverted  change to the electrode BC to pre 16jun07 WARP


2016 JUN 10a
   * in bin
     - updated DBD_actuator.wrp
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_Sstar() and find_dSstar_dUstar(), added code to turn off the EMField
       source term at the near-bdry node. However, this is kept as an option only
       by setting SEMFIELD_ZERO_NEAR_BDRY to TRUE at the top of the file
 

2016 JUN 09a
   * in bin
     - updated DBD_actuator.wrp


2016 JUN 07b
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), made a change to the electrode BC: now, switches to cathode-type
       BC also if EstarC*thetasng<=0.0


2016 JUN 07a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_wall(), made a change to the electrode BC: now, switches to cathode-type
       BC also if EstarC*thetasng<=0.0


2016 JUN 03a
   * in cycle/restime/_Cauchy_2o+/restime.c
     - changed the call to find_dFstarxt_dUstar_interface(): now include jacvarsp1h, metricsp1h
       within parameters
     - added find_Lambdaxt_minus_dtau_from_jacvars()
     - added find_Lambdaxt_plus_dtau_from_jacvars()
   * in cycle/share/ts_share.c
     - in find_dFstar_dUstar_FVS_interface(), changed call to find_dFstarxt_dUstar_interface()
     - in find_dFstar_dUstar_FDS_interface(), changed call to find_dFstarxt_dUstar_interface()
   * in cycle/resconv/_FDS_2o_Parent/resconv.c and cycle/resconv/_FDS_2o_Yee/resconv.c
     - rewrote find_Delta_Lambda_for_dtau_local()
     - in add_dFstar_residual(), changed call to find_Delta_Lambda_for_dtau_local()


2016 JUN 02b
   * in model/fluid/_Favre-Reynolds_plasma/fluid_conv.c
     - fixed bug related to the find_Fstar_given_metrics() parameters 


2016 JUN 02a
   * in src/common.h
     - in npwk_t, added variable dtau
   * in cycle/ts/_block*/ts.c
     - in init_dUtilde(), store constant dtau in memory
     - in update_dUtilde(), now use constant dtau from memory instead of recalculating 
   * in model/fluid/*/fluid_conv.c
     - added find_Fstar_given_metrics()
   * in cycle/resconv/_FDS_2o_Parent/resconv.c
     - made several modifications to speed up the computing of the flux function
       (this resulted in minor alterations to the residual)
     - defined _RESCONV_DELTA_LAMBDA_STORAGE for faster computing of dtau
   * in cycle/resconv/_FDS_2o_Yee/resconv.c
     - defined _RESCONV_DELTA_LAMBDA_STORAGE for faster computing of dtau
   * in cycle/share/res_share.c
     - added find_Lambda_plus_dtau_FDS_from_jacvars() and find_Lambda_minus_dtau_FDS_from_jacvars()
     - in find_Lambda_plus_dtau_FDS() and find_Lambda_minus_dtau_FDS(), added calls to 
       find_Lambda_plus_dtau_FDS_from_jacvars() and find_Lambda_minus_dtau_FDS_from_jacvars()


2016 JUN 01b
   * in lib/soap/soap.c
     - in functions_builtin(), changed trunc for floor
   * in lib/exm/exm.h
     - added macro mod()
     - added macro intfromreal()
     - added macro sign()
   * in lib/exm/exm.c
     - renamed mod() to mod_old()
     - renamed sign() to sign_old()
   * in cycle/resconv/_FDS_2o_Yee/resconv.c
     - made changes to minimize calls to find_metrics_interface()
   * in cycle/resconv/_FDS_2o_Parent/resconv.c
     - made changes to minimize calls to find_metrics_interface()
   * in src/common.c, src/post.c, cycle/share/cycle_share.c, lib/soap/soap.c
     - replaced round() to intfromreal()


2016 JUN 01a
   * in bin
     - modified a few wrp files


2016 MAY 29a
   * in src/control.c
     - added bib details in bardina1987a
   * in bin
     - modified a few wrp files


2016 MAY 27b
   * in tools
     - modified makepostfiles.sh
     - added tecplotpostfiles.sh
     - modified gitnewversion.sh


2016 MAY 27a
   * in bin
     - modified a few wrp files


2016 MAY 26b
   * in bin
     - modified a few wrp files


2016 MAY 26a
   * in bin
     - modified a few wrp files


2016 MAY 24b
   * in bin
     - modified a few wrp files


2016 MAY 24a
   * in bin
     - modified a few wrp files


2016 MAY 23b
   * in src/bdry.c
     - in find_bdry_direc(), changed preferred nearest inner node to shortest distanced
       rather than longest distanced
       --> improves the convergence rates
   * in cycle/tsemf/_DDADI_iterative/tsemf.c
     - deleted function update_dUinc_from_dUtilde_emfield_2()
   * in cycle/share/cycle_share.c
     - in update_bdry_node(), fixed a bug: used to call update_bdry_emfield() instead of
       update_bdry_fluid()


2016 MAY 23a
   * in cycle/tsemf/_DDADI_iterative/tsemf.c
     - implemented new approach at treating the boundary nodes (all the code within BDRY_TREATMENT)
       --> seems to work well but needs more testing 


2016 MAY 22b
   * in model/emfield/*/emfield.c
     - in update_bdry_emfield(), added check that nodes used for the BC obey the
       nodes found from find_bdry_direc()
   * in src/control.c
     - in find_metrics_on_all_nodes(), now call find_bdry_direc() 
   * in cycle/share/cycle_share.c
     - in update_bdry_node(), now call find_bdry_direc()


2016 MAY 22a
   * in src/common.c
     - added distance2_between_nodes()
   * in src/bdry.c
     - in find_bdry_direc() and in is_multiple_bdry_direc(), included second adjacent inner 
        node when checking if direction is suitable
     - in find_bdry_direc(), now chooses a bdry direc as function of farthest inner node 
   * in cycle/share/cycle_share.c
     - in update_bdry_node_emfield(), now uses call to find_bdry_direc() to find which
       inner nodes to use when determining the boundary node properties
   * in model/emfield/*/emfield.c
     - in find_linearization_coefficients_bdry_node_emfield(), now check if
       theta given as a parameter corresponds to theta from find_bdry_direc(): if not, leave
       linearization coefficients to their default form
     - in find_linearization_coefficients_inner_node_emfield(), now set sigma to zero
       at dielectric boundary 
   * in cycle/tsemf/_direct_inversion/tsemf.c
     - in update_dUstar_emfield_direct_inversion_1(), and update_dUstar_emfield_direct_inversion_2()
       made the boundary node coefficients function of find_bdry_direc()


2016 MAY 21a
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c 
     - in write_runtime_template(), added variable subiter_tsemf
     - in runtime_actions_cycle_specific(), added variable read subiter_tsemf to 
       UpdateEMField() action
   * in src/main.c
     - in main(), added initialization gl.subiter_tsemf=4; if EMFIELD is defined
   * in src/common.h
     - in gl_t, added variable subiter_tsemf if EMFIELD is defined
   * in cycle/tsemf/_DDADI_iterative/tsemf.c
     - in update_U_emfield(), made the loop function of gl->subiter_tsemf


2016 MAY 20b
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific() added call to update_Te_local_in_zone()
   * in cycle/share/cycle_share.c
     - added update_Te_local_in_zone_1() and update_Te_local_in_zone()
   * in model/fluid/_drift-diffusion/fluid.c
     - added update_Te_local()
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - added update_Te_local()


2016 MAY 20a
   * in model/emfield/*/emfield.c
     - got rid of relaxphi_bdry and replaced it by 1.0 where it appeared
   * in model/emfield/*/cycle_emfield.hh
     - got rid of relaxphi_bdry 
   * in src/common.h
     - in gl_t, added RESIDUAL_ALTERED_EMFIELD
   * in cycle/share/cycle_share.c
     - in runtime_actions(), added RESIDUAL_ALTERED_EMFIELD=TRUE should Init() or Model()
       modules be called
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), added update_bdry_nodes before calculating
       the residual should RESIDUAL_ALTERED be TRUE for both the fluid and emfield
       actions
     - in init_cycle(), added initialized of RESIDUAL_ALTERED to FALSE


2016 MAY 19b
   * in cycle/share/cycle_share.c
     - deleted solve_multizone_emfield()
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific(), moved call to update_bdry_nodes_emfield()
       ahead of update_prim_emfield_mem_in_zone() instead of after update_U_emfield()
       --> speeds up considerably the convergence history especially when UpdateEMField
           is called multiple times for one call of UpdateFluid()
   * in model/emfield/*/emfield.c
     - in update_bdry_emfield(), changed the extrapolated boundary condition for phi
       from first order to second-order accurate
       --> needs testing


2016 MAY 19a
   * in bin
     - changes to DBD_actuator.wrp


2016 MAY 18b
   * in cycle/share/cycle_share.c
     - in resume_nodes_only_in_zone(), now only include the openmp pragmas
       if OPENMPTHREADS is defined
   * in cycle/share/res_share.c
     - replaced all /LU* by /_nonzero(/LU*)
     - added static function _nonzero()
   * in cycle/res/time/_Cauchy_2o+/restime.c
     - in find_Fstarxt_interface(), added NaN error check
     - in find_Deltaxt(), replaced  /LUstar* by /_nonzero(/LUstar*)
     - added static function _nonzero()
   * in cycle/resconv/_FDS_1o_Roe+/resconv.c and _FDS_2o_Yee+/resconv.c 
     - replaced all /LU* by /_nonzero(/LU*)
     - added static function _nonzero()


2016 MAY 18a
   * deleted cycle/resconv/_FDS_2o_RE
   * in cycle/resconv
     - added _FDS_2o_MUSCL_consvars
     - added _FDS_5o_WENO_consvars
   * in model/fluid/doc/Favre_averaging/report.tex
     - added definition of V_\perp for Launder-Sharma k-epsilon model


2016 MAY 17b
   * in cycle/resconv/.config
     - moved _FDS_2o_RE to experimental (doesn't work well)


2016 MAY 17a
   * in cycle/share/cycle_share.c
     - deleted update_prim_emfield_mem_in_zone_old()
   * in bin
     - rewrote beam.wrp
   * renamed
     - 'This is perhaps due to zetabar3 being set to zero in the control file' ->
       'Make sure zetaAden is not zero'
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - added find_musclvars_from_jacvars()
   * in cycle/resconv
     - added _FDS_2o_RE


2016 MAY 16b
   * in cycle/share/cycle_share.c
     - got rid of all code with SMALLTHREADS and VERYSMALLTHREADS: now, all the loops
       are theaded no matter their size
     - rewrote update_bdry_nodes() and update_bdry_nodes_emfield(): no more calls to
       join_all_threads(), rather call sweep_with_1D_segments()
     - added functions update_bdry_node() and update_bdry_node_emfield()
     - in resume_nodes_only_in_zone(), added pragmas for OPENMP threading
       

2016 MAY 16a
   * in bin
     - modified MHD_generator.wrp


2016 MAY 15c
   * in model/emfield/*/emfield.c
     - in find_E_at_interface(), added asserts to check if node is valid where phi is probed
   * in model/emfield/_Ohm/emfield.c
     - in find_prim_emfield_mem_1(), evaluate Eemagsmoothedmem at nearest inner node and
       set to zero if no nearby inner node can be found
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_prim_emfield_mem_3(), evaluate Eemagsmoothedmem at nearest inner node and
       set to zero if no nearby inner node can be found


2016 MAY 15b
   * in cycle/resconv
     - added directory _none (to be used with fluid models that specify no convection terms)
   * in cycle/resconv/*/resconv.c
     - added #error directive checking whether the fluid model has convection terms or not
   

2016 MAY 15a
   * in src/control.c
     - in write_innards(), added info for OPENMP threads if compiled with -DOPENMPTHREADS
   * in src/common.c
     - added void thread_lock_node_set(), thread_lock_node_unset(), thread_lock_global_set(),
       thread_lock_global_unset(), thread_lock_set(), thread_lock_unset(), 
       thread_lock_destroy(), thread_lock_init()
   * in src/common.h
     - added definitions of THREADTYPE_*
     - added definition of thread_lock_t
   * in model/_generic/model.c, cycle/res/_generic/res.c, cycle/ts/*/ts.c
     - changed the calls to pthread_mutex_lock to thread_lock_*_set
     - changed the calls to pthread_mutex_unlock to thread_lock_*_unset
   * in cycle/tsemf/*/tsemf.c
     - in update_U_from_dUstar_emfield(), added calls to thread_lock* before and after
       altering gl->effiter_U_emfield
   * in cycle/ts/_block_DDADI_iterative/ts.c
     - in init_dUinc(), took away the code that initialized dUinc on neighbor nodes;
     - in update_U(), call init_dUinc for valid nodes, not just inner nodes  


2016 MAY 14b
   * in config/config.c
     - made openmp threads active again and added -fopenmp flag to lib flags
   * in cycle/share/cycle_share.c
     - added execute_function_on_all_segments() which contains entirely the loop threading code 
     - rewrote create_segments()
     - altered sweep_with_1D_segments()
   * in cycle/tsemf/_DDADI_iterative/tsemf.c
     - in update_dUstar_emfield(), now does not compute the linearization coefficients
       at every sweep: stores them in memory (results in 25% speed up)
   * in src/common.h
     - in npbs_t, added variables dtauemfield and val0[nd],val1[nd],val2[nd] if
       _TSEMF_DDADI_ITERATIVE is set


2016 MAY 14a
   * in model
     - added directory share
   * moved model/fluid/share/* to model/share/
   * moved model/chem/share/* to model/share/
   * moved cycle/res/share/* to cycle/share/
   * moved cycle/ts/share/* to cycle/share/
   * various files
     - made changes to accomodate the changed in directory of model/fluid/share/fluid_share*
       model/chem/share/chem_share*, cycle/res/share/res_share*, cycle/ts/share/ts_share*     
   * in cycle/tsemf/_DDADI/tsemf.c
     - fixed bug: update_U_emfield_DDADI() has to be named update_U_emfield()
   * in cycle/tsemf/_none/tsemf.c
     - added compile-time error message in case EMFIELD is not defined


2016 MAY 13b
   * in cycle/share/cycle_share.c
     - deleted update_dUstar_emfield_pdma()
   * in src/control.c
     - in bib, added peaceman1955a
     - in write_innards(), added line for tsemf
   * in cycle
     - added directory tsemf
   * in cycle/tsemf
     - added directories _ADI, _DDADI, _DDADI_iterative, _direct_inversion
   * in cycle/ts
     - renamed _block_implicit* to _block_*
     - renamed DD-ADI to DDADI
   * moved cycle/res/conv to cycle/resconv
   * in cycle/resconv/*
     - made various modifications to the files to accomodate the directory name change
   * moved cycle/res/time to cycle/restime
   * in cycle/restime/*
     - made various modifications to the files to accomodate the directory name change


2016 MAY 13a
   * in cycle/share/cycle_share.c
     - in update_dUstar_emfield_DDADI_iterative(), made changes so that dUstaremfield is updated
       correctly on the boundary nodes
     - added update_dUinc_from_dUtilde_emfield_2() for testing purposes
     - in update_U_emfield_DDADI_iterative(), changed the call to update_dUinc_from_dUtilde_emfield
       to also include bdry nodes not just inner nodes
 

2016 MAY 12b
   * in cycle/share/cycle_share.c
     - renamed update_U_emfield_XDMA* to update_U_emfield_direct_inversion*


2016 MAY 12a
   * in bin
     - modified discharge.wrp and dischargemagnetic.wrp


2016 MAY 11b
   * in cycle/ts/_block_implicit_DDADI_iterative/ts.c
     - in update_dUtilde(), removed update of dUinc when theta==nd-1 (not a safe thing
       to do at this stage because of competing thread expecting the old value of dUinc
       but being given an updated value) 
     - added function update_dUinc_from_dUtilde
     - in update_U(), added call to update_dUinc_from_dUtilde
   * renamed
     - set_matrices_in_TDMA_line -> set_matrices_in_block_TDMA_line
     - find_bdry_TDMA_values_emfield -> find_linearization_coefficients_bdry_node_emfield
     - find_inner_TDMA_values_emfield -> find_linearization_coefficients_inner_node_emfield
     - gl->k -> gl->DDADIcnt
     - kmax -> DDADIcnt_max
   * in src/common.h
     - in npbs_t, added dUincemfield, Resemfield
     - in gl_t, added DDADIcnt_emfield
   * in cycle/share/cycle_share.c
     - added various functions related to DDADI_iterative (works awesome for discharges)
     - in add_convection_residual_emfield() and add_source_residual_emfield(),  and
       initialize_residual_emfield(), find_residual_emfield(), init_dUstar_emfield(),
       now uses Resemfield rather than dUstaremfield


2016 MAY 11a
   * in tools/
     - modified gitnewversion.sh
     - modified gitpull.sh
   * in README.git
     - modified instructions (bernserver should be called origin in various commands)
  

2016 MAY 10b
   * in cycle/ts/ref
     - added maccormack1997.pdf, maccormack2001.pdf and bardina1987.pdf
   * in src/control.c
     - in bib[numbib], added bardina1987a
   * in cycle/ts/_block-implicit_DDADI/ts.hh
     - changed reference from bardina1994a to bardina1987a 
   * renamed
     - dQtil dUtilde
     - dQinc dUinc
     - plug_into_TDMA set_matrices_in_TDMA_line
     - update_dUtil update_dUtilde
     - init_dQinc init_dUinc
     - update_dQ_from_dQtil update_dU_from_dUtilde
     - init_dUtil init_dUtilde
     

2016 MAY 10a
   * in src/init.c
     - got rid of all conditions related to READDATAFILE: they are not used anymore because
       read_init is not called if READDATAFILE is TRUE
   * in src/control.c
     - in readcontrol_actions(), now only call read_init() if !READDATAFILE
   * in model/fluid/*/fluid_init.c
     - in write_init_fluid_template(), removed 2 white spaces at the beginning of each line
   * in model/fluid/_drift-diffusion/fluid.c
     - in write_init_fluid_template(), removed 2 white spaces at the beginning of each line
   * in model/emfield/*/emfield.c
     - in write_init_emfield_template, removed 2 white spaces at the beginning of each line


2016 MAY 09b
   * in bin
     - in discharge.wrp, made changes 
   * in src/init.c
     - in read_init_actions(), fixed a bug related to the copying of the fluxes  
       at time level 0 to time level -1 and -2: now, this is only done if !READDATAFILE
       and if !gl->CONTROL_READ


2016 MAY 09a
   * in model/emfield/*/emfield.c
     - in write_cycle_emfield_template(), set default value of relaxphi_bdry to 1.0
   * in bin
     - in MHD_generator.wrp, made changes to unsteady section, and set relaxphi_bdry to 1.0


2016 MAY 08a
   * in bin
     - in discharge.wrp fixed initial conditions
     - in MHD_generator.wrp fixed unsteady section of cycle
   * in src/control.c
     - updated titles of papers under review in bib[numbib]
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), removed unused variable factP
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c
     - in find_Semfield(), removed unused variable NEARWALLNODE
   * in model/emfield/_Ohm_generalized/emfield.c
     - removed unused function _sigmatilde_interface()
     - commented unused function _sigmatilde()
   * in model/emfield/*/emfield.c
     - removed unused function find_sigmaeff()
   * in cycle/res/_generic/res.c
     - in res.c, in update_residual(), to avoid compiler warning only declare flux if 
       _TIMERES_CAUCHY_TRAPEZOIDAL or _TIMERES_TRAPEZOIDAL are defined 
   * in cycle/res/share/res_share.c
     - removed unused function find_Lambda_minus_plus_FDSplus_muscl_linearized_dF() 
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Gnoffo(), got rif of unused variable lambdaref


2016 MAY 07c
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_prim_emfield_mem_3(), added z component to effective electric when _2D is defined
   * changed .makefile-header-default


2016 MAY 07b
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_prim_emfield_mem_3(), added code to find Eemagsmoothed
     - added _Eemag_smoothed()
     - added find_Ee_interface2() and find_Ee_interface3()
     - in update_bdry_emfield(), changed the way phi is specified on dielectric surfaces:
       not a function of pressure gradient anymore
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in _Te_local(), now determines smoothed Emag through a call to _Eemag_smoothed


2016 MAY 07a
   * in model/emfield/_Ohm/emfield.c
     - in update_bdry_emfield(), changed the way phi is specified on dielectric surfaces:
       not a function of pressure gradient anymore
     - in find_prim_emfield_mem_1(), added code to calculate Eemagsmoothedmem
     - added function _Eemag_smoothed()
   * in src/common.h
     - in npbs_t, added variable Eemagsmoothedmem
   * in model/fluid/_drift-diffusion/fluid.c
     - in _Temem(), now determines smoothed Emag through a call to _Eemag_smoothed
   

2016 MAY 06e
   * in model/emfield/_Ohm/emfield.c
     - in find_prim_emfield_mem_1(), added some tentative code for a more monotone
       discretization of E (commented out for now)


2016 MAY 06d
   * in tools
     - deleted gitrevert.sh


2016 MAY 06c
   * in tools
     - improved gitrevert.sh


2016 MAY 06b
   * in tools
     - added gitrevert.sh
     - implemented basic checks within git*sh to ensure the scripts are run in the main
       warp directory


2016 MAY 06a
   * in all doc/Makefile or doc/*/Makefile
     - added a rm -f report.pdf
   * in tar/Makefile
     - made changes to compile the latex code in gridg and soap before copying the pdfs
   * in tools
     - modified gittoserver.sh
     - modified substr*.sh (now uses rpc instead of perl)
     - modified subword*.sh (now uses rpc instead of perl)
   * created .makefile-header-default
   * in Makefile
     - in cleanall, added cp .makefile-header-default .makefile-header
   * in cycle/share/cycle_share.c
     - in update_U_emfield(), now call update_U_emfield_XDMA() instead of DDADI


2016 MAY 05g
   * in Makefile
     - in cleanall, took away rm -f .makefile-header


2016 MAY 05f
   * in Makefile
     - in cleanall, added a rm -f .makefile-header


2016 MAY 05e
   * in config/Makefile
     - in clean, added a rm -f config-script
   * added README.git


2016 MAY 05d
   * in lib
     - got rid of the sim links to libgridg.a, libexm.a, and libsoap.a 
   * in lib/*/Makefile
     - added cp commands to copy the *.a files to the parent directory
   * in lib/Makefile
     - added rm -f *.a to make clean


2016 MAY 05c
   * in tools
     - in gitpush.sh, added make cleanall, and altered version number in src


2016 MAY 05b
   * in tools
     - added gitpush.sh
     - added gitpull.sh
   * added file .gitignore
   * in src/version.hh
     - set version to HEAD


2016 MAY 05a
   * in model/emfield/_Ohm_generalized/emfield.c
     - deleted function _mue_interface_upwind()
     - in _sigma_interface(), added code for HARMONIC_MEAN and GEOMETRIC_MEAN
     - in find_DeltaVk_from_mu(), now calls _Nk_smoothed instead of _Nk
   * in model/emfield/*/emfield.c
     - added _Nk_smoothed()
     - in find_Vk_from_mu(), now calls _Nk_smoothed instead of _Nk


2016 MAY 04b
   * in cycle/ts/_block_implicit_*ADI/ts.c
     - in update_dUtil(), changed multiply_matrix_and_matrix() by 
       multiply_diagonal_matrix_and_matrix() if no PRECONDITIONING
   * in cycle/share/cycle_share.c
     - added update_dUstar_emfield_DDADI()
     - added update_U_emfield_DDADI()


2016 MAY 04a
   * in model/emfield/_Ohm_generalized/emfield.c
     - in update_bdry_emfield(), changed EXTRAPOLATED bdry condition to first order rather
       than second order
     - in find_bdry_TDMA_values_emfield(), changed coefficients to implicit rather
       than explicit


2016 MAY 03b
   * in model/emfield/_Ohm/emfield.c
     - in update_bdry_emfield(), changed EXTRAPOLATED bdry condition to first order rather
       than second order
     - in find_bdry_TDMA_values_emfield(), changed coefficients to implicit rather
       than explicit
   * in cycle/share/cycle_share.c
     - in update_U_emfield(), now call XDMA rather than ADI


2016 MAY 03a
   * in cycle/share/cycle_share.c
     - added update_U_XDMA_emfield()
     - added update_dUstar_emfield_xdma_2()
     - added update_dUstar_emfield_xdma_1()


2016 MAY 02
   * in model/fluid/doc/Favre_Averaging/report.tex
     - fixed a typo related to the pressure gradient term within the exact form
       of the TKE equation


2016 MAY 01
   * in cycle/share/cycle_share.c
     - in sweep_with_1D_segments(), added THREADTYPE to parameters 
     - in create_segments(), added THREADTYPE to parameters  
   * in cycle/res/_generic/res.c
     - added THREADTYPE_STANDARD to parameters when calling sweep_with_1D_segments
   * in cycle/ts/*/ts.c
     - added THREADTYPE_STANDARD to parameters when calling sweep_with_1D_segments
   * in model/emfield/*/emfield.c
     - added _Ekmag()
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_prim_emfield_mem_2(), now sets Eemag in mem at each node
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in _Te_local(), changed the way the local Te is determined: now used Eemag
       at nodes rather than interfaces
   * in model/fluid/_drift-diffusion/fluid.c
     - in _Temem(), changed the way the local Te is determined: now used Eemag
       at nodes rather than interfaces
     - in _Emag(), now calls _Ekmag() from emfield module
   * in src/common.h
     - in npbs_t, added variable Eemagmem

 
2016 APR 30
   * in model/emfield/*
     - changed relaxtfact* for relax* 
   * in model/emfield/*/emfield.c
     - in update_bdry_emfield() and find_Ek_muk_mem(), modified how relax* acts on the
       update of the variables: now the relaxation factor is defined in the standard manner
     - added UNSTEADYTERMS flag
   * in model/fluid/_drift-diffusion/* and model/fluid/_Favre-Reynolds_plasma/*
     - changed relaxtfact* for relax* 
   * in model/fluid/_drift-diffusion/fluid.c
     - in add_dUstar_to_U() and update_bdry_wall(), modified how relax* acts on the
       update of the variables
     - in write_cycle_fluid_template(), modified the default values given to relax*
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in add_dUstar_to_U(), modified how relax* acts on the update of the variables
     - in write_cycle_fluid_template(), modified the default values given to relax*
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_wall(), modified how relax* acts on the
       update of the variables
   * in cycle/share/cycle_share.c
     - in update_U_from_dUstar_emfield(), changed the way relaxEMF acts on the update of 
       Ustar_emfield
   * in cycle/*/cycle.c
     - in write_runtime_template(), changed default value given to relaxEMF
   * in cycle/res/_generic/res.c
     - in add_dDstarU_residual(), fixed typo Res_trapedoidal to Res_trapezoidal


2016 APR 27a
   * in cycle/share/cycle_share.c
     - in find_dtau(), took away calls to _astar()
     - commented out function _astar()
   * in model/fluid/*/fluid_conv.c and model/fluid/_drift-diffusion/fluid.c
     - added function _V_from_jacvars()
   * in model/fluid/_drift-diffusion/fluid.c
     - in find_Gamma(), fix dtau[row] to dtaumin
   * in model/fluid/share/fluid_share.c
     - in _Vstar_from_jacvars(), now call _V_from_jacvars() rather than use jacvars.V


2016 APR 26a
   * in cycle/share/cycle_share.c
     - removed find_dtau_experimental()
     - in find_dtau(), made the pseudotime step non-constant (varies for each flux)
     - added find_constant_dtau() 
   * in cycle/ts/*/ts.c
     - now call find_constant_dtau() instead of find_dtau()
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in find_Gamma(), set dtau to dtaumin for all fluxes 


2016 APR 25
   * in model/fluid/_drift-diffusion/fluid.c
     - added #include <src/init.h>
   * in model/fluid/_Navier-Stokes_perfect/fluid_init.c
     - added #include <src/init.h>
   * in cycle/res/share/res_share.c
     - added find_Lambda_plus_minus_dtau_FDS()
   * in src/common.c
     - added set_matrix_to_matrix()
   * in cycle/res/_FDS_5o_WENO/convres.c
     - in add_dFstar_residual(), added calls to find_Lambda_plus_minus_dtau_FDS()
     - in find_Delta_Lambda_for_dtau(), now find dtau in more efficient way
       by storing the eigenvalues in ram
   * in cycle/share/cycle_share.c
     - added find_dtau_experimental() --> time step varied flux by flux; 
       has potential but needs refinement


2016 APR 24b
   * in bin
     - alterations to hyperviscous.wrp


2016 APR 24a
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c
     - in add_dFstar_residual(), fixed typo in parameters: fact_residual should be
       fact_trapezoidal
   * in cycle/ts/share/ts_share.c
     - added add_TDMA_jacobian_diagonally_dominant()
   * in cycle/ts/_block_implicit_DD-ADI/ts.c
     - in update_dUtil(), now call add_TDMA_jacobian_diagonally_dominant() instead of 
       add_dFstar_dUstar.., etc
   * in cycle/ts/_block_implicit_DD-ADI_iterative/ts.c
     - in update_dUtil(), now call add_TDMA_jacobian_* and find_TDMA_jacobian instead
       of add_dFstar_dUstar.., etc
   * in model/fluid/_Favre*/fluid.c
     - in write_model_fluid_template(), changed default kmin to 1.0e-10 and default wmin to 1.0e-20
   * in model/fluid/*/fluid_init.c
     - in init_node_*(), added calls to ensure_positivity_of_determinative_property()
   * in src/init.c
     - added ensure_positivity_of_determinative_property()


2016 APR 23a
   * in cycle/ts/share/ts_share.c
     - added find_A_plus_minus_from_jacvars_FDSplus()
     - added find_dFstar_dUstar_FDSplus_interface()
     - in find_A_plus_minus_from_jacvars_FVSplus(), took away Deltaxt term 
       within Lambdaxt (slowed down convergence)
   * in cycle/res/conv/_FDS_2o_MUSCL+/convres.hh
     - changed CONVJACOBIAN to CONVJACOBIAN_FDSplus
   * in cycle/res/conv/_FDS_5o_WENO+/convres.hh
     - changed CONVJACOBIAN to CONVJACOBIAN_FDSplus
   * in src/common.h
     - in npbs_t, renamed Resm1 to Res_trapezoidal_m1
     - in npbs_t, renamed Res to Res_trapezoidal
   * in cycle/res/_generic/res.c
     - in add_Sstar_residual(), add_Ystar_dH_residual(), add_dDstarU_residual()
       add_dKstar_dG_residual(), added fact and fact_trapezoidal parameters
     - in update_residual(), changed the calls to the various functions to 
       include fact and fact_trapezoidal
   * in cycle/res/conv/*/convres.c
     - in add_dFstar_residual(), added fact and fact_trapezoidal parameters
   * in cycle/res/time/*/timeres.c
     - in add_Z_dUstar_residual(), added fact and fact_trapezoidal parameters
   * in cycle/ts/share/ts_share.c
     - in find_TDMA_jacobians_conservative() multiplied contibutions to jacobians by fact
     - in find_TDMA_jacobians_nonconservative() added fact within calls to various TDMA functions
     - in add_Z_dUstardt_dUstar_to_TDMA(), add_dSstar_dUstar_to_TDMA(), and
       add_Ystar_dH_dUstar_to_TDMA(), added fact within parameters



2016 APR 22
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - in find_Lambdaxt() and find_Lambdaxt_interface() changed Z for LambdaZ
   * in model/fluid/*/fluid.c
     - added find_LambdaZ()


2016 APR 21b
   * in cycle/res/time/
     - removed _Cauchy_2o_limited
     - removed _Cauchy_2o_nonsplit
     - removed _WENO_3o
     - added _Cauchy_2o
   * in cycle/res/time/*/timeres.c
     - in add_Z_dUstar_residual(), got rid of the condition theta==0 or theta==nd-1
       ( this condition is now within update_residual within res.c)
   * in cycle/res/time/_Trapezoidal_2o/timeres.c
     - in add_Z_dUstar_residual(), got rid of fixing the residual on bs to the one on wk
       ( this is now within update_residual within res.c)
   * in cycle/res/_generic/res.c
     - in update_residual(), made changes as noted in previous two points
   * in model/_generic/model.c
     - added function add_to_clipped_variables2()
   * in model/fluid/_Favre*/fluid.c
     - added char *suffix to reformat_*()
   * in model/fluid/_Favre*/fluid.c, fluid_bdry.c, fluid_conv.c, fluid_init.c
     - changed calls to reformat_*()
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - deleted reformat_T_muscl() and reformat_rho_muscl()
     - added char *suffix to reformat_*()
   * in model/fluid/_Navier*/fluid.c,  fluid_conv.c
     - changed calls to reformat_*()


2016 APR 21a
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), made the term function of aspect ratio also
       function of pressure difference. Seems to work better.


2016 APR 20b
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Gnoffo(), added documentation of Gnoffo
       code related to not conditioning the eigenvalues that are higher than a certain
       value: this is kept commented thus because this type of clipping leads to hangs
     - in condition_Lambda_plus_minus_Parent(), changed the term function of the aspect
       ratio: now is set to the AR^0.2 instead of to the AR: necessary to prevent carbuncle
       at hypervelocities
 

2016 APR 20a
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), condition_Lambda_plus_minus_Standard(),
       and condition_Lambda_plus_minus_Gnoffo(), made major alterations to how
       the eigenvalues are conditioned: now they are function of astar and of sigma[flux]
       instead of sigmamax
     - in condition_Lambda_plus_minus_Parent(), took away the terms related to the
       pressure gradient: they caused some convergence hangs


2016 APR 19b
   * in cycle/res/share/res_share.c
     - deleted function find_Lambda_interface_FDS_RE()
     - in find_Lambda_minus_plus_FDSplus_muscl(), changed formulation so that
       the flux at the interface does not depend on find_Lambda_interface_FDS_RE()
       but on Fp0 or Fp1 simply
   * in cycle/ts/share/ts_share.c
     - in find_A_plus_minus_from_jacvars(), made a change to how Lambdaplusp0
       and Lambdaminusp1 are determined


2016 APR 19a
   * in cycle/res/conv/_FVS_2o_VanLeer+/convres.c
     - rewrote find_Fstar_interface_1o in FVS form (used to be written in FDS form)
     - changed xiconstant to 1.5 from 1.8
   * in cycle/res/conv/_FVS_2o_VanLeer+/convres.hh
     - set CONVJACOBIAN to CONVJACOBIAN_FVSplus from CONVJACOBIAN_FDS
   * in cycle/res/share/res_share.c
     - in find_Lambda_minus_plus_FVSplus_muscl(), changed lambaxt_p1h for lambaxt_p0 and
       lambdaxt_p1 within p0 and p1 eigenvalues


2016 APR 18b
   * in cycle/ts/share/ts_share.c
     - got rid of find_dFstar_dUstar_interface_Parent()
     - renamed find_dFstar_dUstar_interface_StegerWarming() to 
       find_dFstar_dUstar_FVS_interface() 
     - renamed find_dFstar_dUstar_interface_Roe() to 
       find_dFstar_dUstar_FDS_interface() 
     - renamed find_dFstar_dUstar_interface_Positive() to 
       find_dFstar_dUstar_FROMFLUXEIGENVALUES_interface() 
     - added find_dFstar_dUstar_FVSplus_interface()
     - in find_TDMA_jacobians_conservative() and find_TDMA_jacobians_nonconservative
       took away addition for Cauchy time stepping
     - added Cauchy time stepping additional code in find_dFstar_dUstar*_interface()
   * in cycle/res/conv/*MUSCL+*/convres.hh and cycle/res/conv/*WENO+*/convres.hh
     - set CONVJACOBIAN to CONVJACOBIAN_FVSplus
    

2016 APR 18a
   * renamed
     - find_Lambdaxt_fact to find_Deltaxt
     - lambdaxt_fact to deltaxt
     - Fstarspacetime to Fstarxt
   * moved
     - find_Deltaxt() from cycle/res/share/res_share.c to cycle/res/time/_Cauchy_2o+/timeres.c
   * in cycle/res/conv/_FVS_2o_VanLeer+/convres.c
     - made several changes so that the flux function is compatible with Cauchy_2o time stepping
   * in cycle/res/conv/_FVS_2o_VanLeer/convres.c
     - made several changes so that the flux function is compatible with Cauchy_2o time stepping
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - got rid of find_Lambdaxtplusminus_interface() and replaced with (Lambdaxt \pm fabs(Lambdaxt))
       where appropriate


2016 APR 17
   * in cycle/res/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), now do not call
       find_conditioned_Lambda_absolute_from_jacvars() even when 
       EIGENVALUES!=EIGENVALUES_ENFORCED_POSITIVE
     - in find_Lambda_minus_plus_FDSplus_muscl(), now always call condition_Lambda_plus_minus 
       even when  EIGENVALUES!=EIGENVALUES_ENFORCED_POSITIVE


2016 APR 16a
   * in cycle/res/conv/_FDS_1o_Roe+/convres.c
     - changed AVERAGETYPE to ROEAVERAGE
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c
     - changed AVERAGETYPE to ROEAVERAGE


2016 APR 15b
   * in cycle/ts/share/ts_share.c
     - added find_A_plus_minus_from_jacvars() : different linearization of the Steger-Warming
       fluxes taking into account Lambda_plus_minus conditioning.
   * in cycle/res/conv/_Steger-Warming+/convres.c
     - now calls find_Fstar_interface_FVS_muscl and find_Fstar_interface_FVSplus_muscl
       instead of computing the flux directly
     - now compatible with Cauchy time stepping


2016 APR 15a
   * in cycle/res/share/res_share.c
     - in find_Fstar_interface_FDS*(), replace arithmetic averages by Roe averages
     - in find_Lambda_minus_plus_FDSplus_muscl(), now calls condition_Lambda_plus_minus()
       only if EIGENVALUES==EIGENVALUES_POSITIVE, otherwise condition Lambda the interface
       as is usually done with MUSCL schemes
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), reduced dependence of zeta on aspect ratio
       and included a dependence of zeta on the normalized pressure gradient: this results
       in fewer convergence hangs
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in _Re_edge_from_jacvars(), fixed a bug related to the metrics: should be sqrt(Xmag2)
       not Xmag2


2016 APR 14b
   * in cycle/res/share/res_share.c
     - renamed find_Lambda_minus_plus_FDSplus_muscl() to 
       find_Lambda_minus_plus_FDSplus_muscl_linearized_dF() 
     - added function find_lambdap1h_RE()
     - in find_Lambda_minus_plus_FDSplus_muscl(), now call function find_lambdap1h_RE()
       for for a FDS flux discretization where F_i+F_{i+1} is NOT replaced 
       by A_{i+1/2}*(U_i+U_{i+1})


2016 APR 14a
   * in cycle/res/share/res_share.c
     - got rid of find_Lambda_minus_plus_FDSplus_muscl_experimental*()
     - renamed find_Fstar_interface_FDS_muscl to find_Fstar_interface_FDS_muscl_original
     - added find_Fstar_interface_FDS_muscl which now determines the reconstructed FDS
       through the positivity-preserving approach but without the final step of switching
       Yplus and Zminus to the other nodes
     - in find_Fstar_interface_FDS_muscl(), added bool parameter POSITIVE
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - in find_Fstar_interface(), now call the new find_Fstar_interface_FDS_muscl()
   * in cycle/res/conv/_FDS_5o_WENO/convres.c
     - in find_Fstar_interface(), now call the new find_Fstar_interface_FDS_muscl()
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - in find_dFstarspacetime_dUstar_interface(), now find interface properties with
       arithmetic averaging instead of Roe averaging
   * in model/fluid/share/fluid_share.c
     - in condition_Lambda_plus_minus_Parent(), made the conditioning function of the
       pressure gradient
   * in model/fluid/*/fluid_conv.c
     - added function _Pstar_from_jacvars()


2016 APR 13b
   * in cycle/res/share/res_share.c
     - added function find_Lambda_minus_plus_FDSplus_muscl_experimental() --> more
       compressive but harder to converge than find_Lambda_minus_plus_FDSplus_muscl()


2016 APR 13a
   * in model/thermo/_generic/thermo.c
     - added constant dTrangemin and set it to 100.0
     - substituted 5900.0 by (6000.0-dTrangemin) within the polynomial coefficients for cp and h


2016 APR 12b
   * in model/thermo/_generic/thermo.c
     - added constant dToverlap
     - made changes to find_Pa_index() so that it returns index2 along with index if
       there is an overlap
     - prevents hang when temperature is 1000K or 6000K


2016 APR 12a
   * in cycle/ts/share/ts_share.c
     - in find_TDMA_jacobians_conservative(), only call find_dFstarspacetime_dUstar_interface()
       if CONVJACOBIAN!=CONVJACOBIAN_POSITIVE
     - in add_dFstar_dUstar_to_TDMA(), only call find_dFstarspacetime_dUstar_interface()
       if CONVJACOBIAN!=CONVJACOBIAN_POSITIVE


2016 APR 11b
   * in model/fluid/share/fluid_share.c
     - modified condition_Lambda_plus_minus_Parent(): now sigma is simply the sound speed
       divided by a characteristic length instead of being based on the spectral radius
   * in cycle/ts/share/ts_share.c
     - added find_dFstar_dUstar_interface_positive() which is called if 
       CONVJACOBIAN is set to CONVJACOBIAN_POSITIVE within convres.hh
   * in cycle/res/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), added code setting Lambdaplus and Lambdaminus
       in npbs which is only used if CONVJACOBIAN_POSITIVE is set
     - in find_Lambda_minus_plus_FVSplus_muscl(), added code setting Lambdaplus and Lambdaminus
       in npbs which is only used if CONVJACOBIAN_POSITIVE is set
   * in src/common.h
     - in npbs_t, added Lambdaplus and Lambdaminus fluxes if CONVJACOBIAN==CONVJACOBIAN_POSITIVE


2016 APR 11a
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c
     - added flags ROE_EIGENVALUE_CONDITIONING and EIGENVALUE_CONDITIONING
   * in model/fluid/share/fluid_share.c
     - changed the parameters of the function condition_Lambda_plus_minus(): now include jacvarsp0
       and jacvarsp1 instead of just jacvarsp1h
 

2016 APR 10b
   * in model/fluid/share/fluid_share.c
     - moved condition*Gnoffo() functions from model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - improved functions condition_Lambda_plus_minus*()
   * in model/fluid/_Favre-Reynolds*/*
     - in fluid.hh added LAMBDA_STANDARD and LAMBDA_PARENT within global constants
     - added variable LAMBDA within gl_model_fluid_t, jacvars_t
     - got rid of zetaAa
     - renamed zetaAc to zetaA
     - renamed zetaAi to zetaAden
     - in fluid.c, write_model_fluid_template(), added LAMBDA=LAMBDA_PARENT;
     - in fluid.c, read_model_fluid_actions(), added LAMBDA_STANDARD and LAMBDA_PARENT constants
       and added a read of variable LAMBDA
     - in fluid_conv.c, removed find_conditioned_Lambda_absolute_from_jacvars_denom(),
       find_conditioned_Lambda_absolute_from_jacvars(), condition_Lambda_absolute()
     - in fluid_conv.c, renamed zetaAi to zetaAden, zetaAc to zetaA, and zetaAa to LAMBDA


2016 APR 10a
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in functions condition_Lambda*(), did some cleaning up 
     - in functions find_conditioned_Lambda*(), did some cleaning up 
     - in condition_Lambda_plus_minus(), added Gnoffo and Parent eigenvalue
       conditioning
   * in model/fluid/_Navier-Stokes_perfect/*
     - got rid of zetaAa
     - renamed zetaAc to zetaA
     - renamed zetaAi to zetaAden
   * in model/fluid
     - added directory share
   * in model/fluid/share/fluid_share.c
     - moved condition_Lambda*() functions from other fluid modules here
     - works well with _Navier-Stokes_perfect module 
     - but other fluid modules are not operational now


2016 APR 09b
   * in cycle/res/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), now do not condition lambdapp1h_RE
       but rather set it to the absolute value of lambdap1h_RE
     - in find_Lambda_minus_plus_FVSplus_muscl(), now do not condition Lambdaabsp0_RE
       and Lambdaabsp1_RE but rather set them to the absolute value of Lambdap0_RE
       and Lambdap1_RE
     - in find_Lambda_minus_plus_FDSplus_muscl() added call to condition_Lambda_plus_minus()
     - in find_Lambda_minus_plus_FVSplus_muscl() added call to condition_Lambda_plus_minus()
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - added function condition_Lambda_plus_minus()
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - added function condition_Lambda_plus_minus()


2016 APR 09a
   * in cycle/res/share/res_share.c
     - added function find_Fstar_interface_FVS_muscl()
     - added function find_Fstar_interface_FVSplus_muscl()
     - added function find_Lambda_minus_plus_FVSplus_muscl()
     - modified function find_Lambda_minus_plus_FDSplus_muscl() so that the solution is 
       monotone in the vicinity of discontinuities
   * in cycle/res/conv
     - added directory _FVS_2o_MUSCL+
   * in cycle/res/conv/_FVS_2o_MUSCL/convres.c
     - updated the algorithm so that it uses the function find_Fstar_interface_FVS_muscl()
   * in cycle/ts/share/ts_share.c
     - in find_dFstar_dUstar_interface_Roe(), changed roe averaging to arithmetic averaging



2016 APR 08b
   * in model/fluid/_Favre-Reynolds*/fluid_bdry.c
     - in update_bdry_wall(), changed kC to the max between kmin and 1e-20
   * in cycle/res/share/res_share.c
     - in find_Lambda_minus_plus_FDSplus_muscl(), now determines lambdaxt from muscl
       reconstructed state instead of interface state


2016 APR 08a
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - added functions reformat_T_muscl() and reformat_rho_muscl() 
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_jacvars_from_musclvars() and find_Ustar_from_musclvars()
       now call reformat_T_muscl() and reformat_rho_muscl()
       instead of reformat_T() and reformat_rho()
   * in src/common.h
     - in npbs_t, added flux_t Delta_Lambda[nd] if _CONVRES_DELTA_LAMBDA_STORAGE is defined
   * in cycle/res/_generic/res.c
     - in init_residual(), added initialization of Delta_Lambda[nd]
   * in cycle/res/share/res_share.c
     - added functions find_Fstar_interface_FDS_muscl() and find_Fstar_interface_FDSplus_muscl()
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - in find_Fstar_interface(), now calls find_Fstar_interface_FDS_muscl()
     - in find_Fstar_interface(), improved the algorithm: now computes interface flux only once 
       per loop
   * in cycle/res/conv/_FDS_5o_WENO/convres.c
     - in find_Fstar_interface(), now calls find_Fstar_interface_FDS_muscl()
   * in cycle/res/conv/_FDS_5o_WENO+/convres.c
     - in find_Delta_Lambda_for_dtau(), now use np[l].bs->Delta_Lambda
     - in find_Fstar_interface(), now calls find_Fstar_interface_FDSplus_muscl()
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c
     - in find_Delta_Lambda_for_dtau(), now use np[l].bs->Delta_Lambda
   * in cycle/res/conv/
     - added _FDS_2o_MUSCL+


2016 APR 07b
   * in cycle/res/conv/_FDS_5o_WENO+/convres.c
     - made improvements to make it positivity-preserving
   * in cycle/share/cycle_share.c
     - in function find_dtau(), now call find_Delta_Lambda_for_dtau()
       instead of find_Lambda_plus_dtau() and find_Lambda_minus_dtau()
   * in cycle/res/conv/*/convres.c
     - deleted functions find_Lambda_plus_dtau() and find_Lambda_minus_dtau()
     - added function find_Delta_Lambda_for_dtau()
  

2016 APR 07a
   * in model/fluid/_Favre_Reynolds*/fluid_bdry.c
     - got rid of functions _fBC3 and _fBC4 (not used anymore)
     - in update_bdry_wall(), changed kC=0.0; to kC=1.0e-20; to avoid singularity
       with positivity-preserving algorithms
   * in model/fluid/_Navier-Stokes_perfect/fluid_bdry.c
     - got rid of functions _fBC3 and _fBC4 (not used anymore)
   * in cycle/res/conv/
     - added _FDS_5o_WENO+
   * in src/control.c
     - updated title of parent2017a paper


2016 APR 05b
   * in cycle/res/conv/_FDS_*o_Parent/convres.c 
     - copied efficient multidimensional terms from _FDS_*o_Parent_X/convres.c
       (can be accessed by setting FLUXDISCTYPE to FLUXDISCTYPE_EFFICIENT)


2016 APR 05a
   * in cycle/res/conv/
     - moved _FDS_1o_Parent_fast to _FDS_1o_Parent_X
   * in cycle/res/conv/_FDS_2o_Parent_X/convres.c
     - copied convres.c from _FDS_2o_Parent and added modifications to get rid of 
       matrix inversion in both 2D and 3D
   * in cycle/res/conv/_FDS_1o_Parent_X/convres.c
     - made modifications to 3D algorithm to get rid of matrix inversion 
   * in model/fluid/*/fluid.hh
     - added #define FLUX_LAMBDA_CONVECTIVE 0
  

2016 APR 04
   * in cycle/res/conv/_FDS_1o_Parent_fast/convres.c
     - complete rewrite of the 2D flux functions: now as accurate as with the matrix
       inversion but without actually doing a matrix inversion


2016 APR 03
   * in cycle/res/conv/_FDS_1o_Roe+/convres.c
     - in find_Lambda_minus_plus_Roeplus(), fixed a bug related to TIMERES_CAUCHY:
       min() should be minmod()


2016 APR 02
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c
     - in find_Lambda_minus_plus_Roeplus(), fixed a bug related to TIMERES_CAUCHY:
       min() should be minmod()


2016 MAR 28
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made some modifications


2016 MAR 27
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c and cycle/res/conv/_FDS_1o_Roe+/convres.c
     - added function find_Lambdaxt_fact()
     - in find_Lambda_minus_plus_Roeplus(), added calls to find_Lambdaxt_fact()
     - in find_Fstar_interface_1o() and find_Fstar_interface_2o(), removed calls
       to find_Fstarspacetime_corners_positive_interface()
     - changed averaging type to arithmetic average from Roe average
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - removed find_Fstarspacetime_corners_positive_interface_bad()
     - removed add_dFstarspacetimem1_residual_old()
     - removed add_dFstarspacetimem1_residual_new()
     - removed find_Lambdas_around_interface()
     - removed add_dFstarspacetimem1_residual()
     - removed find_jacvars_at_interface()
     - removed find_Fstarspacetime_corners_positive_interface()
     - removed find_Fstarspacetime_corners_interface()
   * in model/fluid/_Favre-Reynolds*/fluid_conv.c
     - added function find_jacvars_at_interface_arith_average()


2016 MAR 26
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made some changes


2016 MAR 25a
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - added add_dFstarspacetimem1_residual()


2016 MAR 24
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made some modifications to cross jacvars: works better


2016 MAR 23
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made modifications to prepare for experimental multidimensional Roe-like scheme


2016 MAR 22a
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - added alternate coding for find_Fstar_interface_Roesolver() that can be used
       with a Cauchy time discretization (works ok)
   * in cycle/res/conv/_FDS_2o_Yee+/convres.c and cycle/res/conv/_FDS_1o_Roe+/convres.c
     - took away calls to _TIMERES_CAUCHYPLUS and replaced with _TIMERES_CAUCHY
   * in cycle/res/time/
     - deleted _Cauchy_2o and made adjustments to .config and Makefile in consequence


2016 MAR 21a
   * in cycle/res/conv/_FDS_1o_Roe+/convres.c
     - in find_Lambda_minus_plus_Roeplus(), fixed a bug in determining lambdaxt at node lp1
   * in cycle/res/conv/_FVS_1o_Steger-Warming+/convres.c
     - in find_Fstar_interface(), added Cauchy+ contributions for multidimensional time
       accuracy
     - in find_Lambda_minus_dtau(), find_Lambda_plus_dtau(), added contributions for
       multidimensional time accuracy
   * in cycle/res/conv/_FVS_2o_VanLeer+/convres.c
     - in find_Fstar_interface(), added Cauchy+ contributions for multidimensional time
       accuracy
     - in find_Lambda_minus_dtau(), find_Lambda_plus_dtau(), added contributions for
       multidimensional time accuracy
     - added FindFplusFminusCauchy() 


2016 MAR 20
   * in cycle/share/cycle_share.c
     - in find_dtau(), took away code for _TIMERES_CAUCHY
   * in cycle/res/conv/_FDS_*o_Parent/convres.c, _FDS_1o_Roe/convres.c, _FDS_2o_Yee/convres.c 
     - in find_Lambda_minus_dtau() and find_Lambda_plus_dtau(), added code for _TIMERES_CAUCHY
   * in cycle/res/time/
     - copied _Cauchy_2o+ to _Cauchy_2o
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - added functions find_Lambdaxt() and find_Lambdaxt_interface()
   * in cycle/res/conv/_FDS_1o_Roe+/convres.c, _FDS_2o_Yee+/convres.c 
     - in find_Lambda_minus_plus_Roeplus(), added CAUCHYPLUS contributions
     - in find_Fstar_interface_1o() and find_Fstar_interface_2o(), added call to
       find_Fstarspacetime_cross_interface() if _TIMERES_CAUCHYPLUS is defined
     - in find_Lambda_minus_dtau() and find_Lambda_plus_dtau(), made modifications
       dependent on CAUCHYPLUS being defined or not


2016 MAR 17b
   * in bin
     - minor changes to some control files


2016 MAR 17a
   * in model/fluid/_Navier-Stokes_perfect/fluid.hh
     - added LAMBDA in jacvars_t
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions(), added a read of the variable LAMBDA  
     - in write_model_fluid_template(), added variable LAMBDA
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_jacvars*(), added variable LAMBDA to jacvars
     - in find_conditioned_Lambda_from_jacvars(), made Lambda function of LAMBDA 


2016 MAR 16
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in condition_Lambda_Gnoffo() fixed a bug


2016 MAR 15b
   * in src/data.c
     - in read_data_file_ascii(), and write_data_file_ascii(), fixed bug related to
       the reading and writing of the EMField preliminary data


2016 MAR 15a
   * renamed
     - TRAPEZOIDAL -> _TIMERES_TRAPEZOIDAL
   * in cycle/res/time/
     - renamed directory _Trapezoidal_2o+ to _Trapezoidal_2o 


2016 MAR 14b
   * in cycle/res/time/_Trapezoidal_2o+/timeres.c
     - in add_Z_dUstar_residual(), now adds the time residual in the last ijk sweep, not the first
     - in add_Z_dUstar_residual(), now multiply the residual within wk by 2.0, so that
       the residual is well linearized 
   * in src/data.c
     - in read_data_file_binary(), added code at the end of the function to read
       Resm1 should TRAPEZOIDAL be set
     - in write_data_file_binary(), added code at the end of the function to write
       Resm1 should TRAPEZOIDAL be set
  

2016 MAR 14a
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_conditioned_Lambda_from_jacvars(), changed call condition_Lambda_Gnoffo() to
       condition_Lambda()
   * in cycle/share/cycle_share.c
     - in increase_time_level(), set np[l].bs->Resm1[flux]=np[l].bs->Res[flux];
       if TRAPEZOIDAL is set
   * in src/init.c
     - in read_init_actions(), set (*np)[l].bs->Resm1[flux]=0.0; and (*np)[l].bs->Res[flux]=0.0;
       if TRAPEZOIDAL is set
   * in src/common.h
     - in npbs_t, added Res,Resm1 if TRAPEZOIDAL is set
   * in cycle/res/time/
     - added directory _Trapezoidal_2o+


2016 MAR 10a
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_conditioned_Lambda_from_jacvars(), changed call condition_Lambda() to
       condition_Lambda_Gnoffo()
     - added function condition_Lambda_Gnoffo()


2016 MAR 08a
   * in cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), within action IncreaseTimeLevel(), now use
       multizone to initialize residual instead of doing it within one large zone (reduces the
       time needed to initialize the residual on multicore computers)


2016 MAR 07a
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made modifications to the  cross-difference terms: should be included only to the dimension
       perpendicular to a hyperbolic dimension


2016 MAR 06
   * in cycle/res/conv/_FDS_1o_X/convres.c
     - made modifications to include cross-difference terms with all-positive coefficients
  

2016 MAR 04a
   * in src/bin
     - altered 3Dbdry.wrp


2016 MAR 03a
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), do not add heat sphere if power deposited
       is equal to 0


2016 MAR 02a
   * in cycle/share/cycle_share.c
     - in runtime_actions(), set gl->RESIDUAL_ALTERED to TRUE if Init() or Model()
       actions are called at runtime
   * in src/common.h
     - in gl_t, added bool RESIDUAL_ALTERED
   * in cycle/_multizone/cycle.c
     - at end of init_cycle(), set RESIDUAL_ALTERED to FALSE
     - in runtime_actions_cycle_specific(),  is RESIDUAL_ALTERED is TRUE, then set
       UPDATE_ALL_ZONES to TRUE
     - in runtime_actions_cycle_specific(), after residual is updated set RESIDUAL_ALTERED to FALSE
   * in cycle/_multizone_marching/cycle.c
     - at end of init_cycle(), set RESIDUAL_ALTERED to FALSE
     - in runtime_actions_cycle_specific(),  is RESIDUAL_ALTERED is TRUE, then set
       UPDATE_ALL_ZONES to TRUE set window.is to domain.is and call resize_marching_window()
     - in runtime_actions_cycle_specific(), after residual is updated set RESIDUAL_ALTERED to FALSE


2016 MAR 01a
   * in cycle/share/cycle_share.c
     - in function find_dtau(), made modifications to dtau when UNSTEADY is set
   * in cycle/res/time/_Cauchy_1o+/timeres.c
     - added function find_Lambdaxtplusminus_interface()
     - added function find_Lambdaxt_plus_dtau()
     - added function find_Lambdaxt_minus_dtau()
     - in find_Fstarspacetime_interface(), added call to find_Lambdaxtplusminus_interface()
     - in find_dFstarspacetime_dUstar_interface(), added call to find_Lambdaxtplusminus_interface()


2016 FEB 29b
   * renamed
     - find_Lambda_minus -> find_Lambda_minus_dtau
     - find_Lambda_plus -> find_Lambda_plus_dtau
   * in cycle/res/share/res_share.c
     - added function find_Lambda_minus_dtau_FVS
     - added function find_Lambda_plus_dtau_FVS
     - added function find_Lambda_minus_dtau_FDS
     - added function find_Lambda_plus_dtau_FDS
   * in cycle/res/conv/_FVS_*/convres.c
     - in find_Lambda_minus_dtau(), replaced code by a call to find_Lambda_minus_dtau_FVS
     - in find_Lambda_plus_dtau(), replaced code by a call to find_Lambda_plus_dtau_FVS
   * in cycle/res/conv/_FDS_*/convres.c (except for positivity-preserving schemes)
     - in find_Lambda_minus_dtau(), replaced code by a call to find_Lambda_minus_dtau_FDS
     - in find_Lambda_plus_dtau(), replaced code by a call to find_Lambda_plus_dtau_FDS
   * in cycle/res/conv
     - renamed _FDS_1o_Parent_X to _FDS_1o_X


2016 FEB 29a
   * in src/main.c
     - in main(), changed the flag -cr to -res
     - in main(), improved the flags descriptions
   * in cycle/res/conv/_FDS_1o_Parent_X/convres.c
     - in find_Fstar_interface(), implemented a "seemingly" positivity-preserving
       Roe flux
     - in find_Lambda_minus() and find_Lambda_plus(), made changes so that
       the pseudotime step yields a "seemingly" positive solution at high CFL 
     - needs further checking
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - added function find_jacvars_at_interface_Parent_average_test()


2016 FEB 25a
   * in lib/gridg/2Dbase.c
     - in Rotate2D(), fixed a bug related to when pi should be added to phi
   * in lib/gridg/3Dbase.c
     - in Rotate3D(), fixed a bug related to when pi should be added to phi
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), now resets runtime vars only if gl->RESETRUNTIMEVARS
       is TRUE
   * in src/main.c
     - in main(), added new flag "-var": if set, the set gl->RESETRUNTIMEVARS to FALSE
     - in main(), renamed flag "-reset" to "-iter"
   * in src/common.h
     - in gl_t, added bool variable RESETRUNTIMEVARS


2016 FEB 24a
   * in tools
     - added openmptest.c and openmptest.sh


2016 FEB 23b
   * in cycle/res/time
     - renamed _Cauchy2o+ to _Cauchy1o+


2016 FEB 23a
   * in src/control.c
     - in find_metrics_on_all_nodes(), improved the error message when emfield node is
       not active where fluid node is
   * in model/emfield/*/emfield.c
     - in write_cycle_emfield_template(), changed the default value of sigmaref
       to 3E-6 S/m
   * in model/fluid/_drift-diffusion/fluid.c and model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in write_cycle_fluid_template(), changed default value of zetaGammae
       from 0.001 to 0.01
   * in lib/soap/soap.c
     - in SOAP_fatal_error(), improved error message


2016 FEB 22b
   * in model/emfield/*/emfield.c, model/fluid/*/fluid.c, model/ebeam/*/ebeam.c
     - changed fatal_error(*) to SOAP_fatal_error(codex,*) where applicable
   * in cycle/share/cycle_share.c, cycle/*/cycle.c
     - changed fatal_error(*) to SOAP_fatal_error(codex,*) where applicable


2016 FEB 22a
   * in model/emfield/doc/report.tex
     - added section on electromotive force
   * in model/emfield/_Ohm/emfield.c and model/emfield/_Ohm_generalized/emfield.c
     - in _Jemfstar_interface(), added psi limiter on electromotive force
     - in read_model_emfield_actions_2(), added scan of EMFmaxpower in action
       SetElectroMotiveForce
     - in write_model_emfield_template(), added an argument: the maximum power allowed
     - in read_model_emfield_actions(), initialized EMFmaxpower to 1e99
   * in src/common.h
     - in npbs_t, added EMFmaxpower


2016 FEB 18
   * in bin/arc_discharge.wrp
     - reduced the CFL increment for better stability.


2016 FEB 17
   * in src/common.c
     - in _i(), i is given 3 dimensions instead of nd
 

2016 FEB 16
   * renamed
     - SetHeatAdded() to SetHeatDeposited()
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in write_model_fluid_template(), added AddHeatSphere() action
     - in read_model_fluid_actions_2(), added AddHeatSphere() action
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in runtime_actions_cycle_specific(), improved error message when the number of arguments
       given to UpdateFluid() is not as expected
   * in USAGE
     - minor updates


2016 FEB 15
   * in lib/latex/warpdoc.cls
     - changed the default font to txfonts should mtpro2 not be present on the server


2016 FEB 14
   * in cycle/res/time/
     - added _WENO_3o  (upwinded WENO approach)
     - doesn't work well, so put in experimental
   * in cycle/res/conv
     - added _FDS_3o_WENO (upwinded WENO approach)
     - doesn't work well, so put in experimental
   * in cycle/res/conv/_FVS_2o_VanLeer*/convres.c
     - added code to handle Cauchy time discretization (but kept the compiled-time 
       error message because it doesn't work well) 
   * in model/fluid/*/fluid_source.c
     - in find_Saxi(), added fatal_error if x1<1e-15
    

2016 FEB 13
   * in model/fluid/_Favre-Reynolds_plasma/fluid_post.c
     - in find_post_variable_name_fluid(), changed Nk to wk for the non
       charged species
     - in find_post_variable_value_fluid(), changed Nk to wk for the non
       charged species 
   * in src/post.c
     - improved error handling of some sscanf calls 
   * in src/control.c
     - in write_innards(), added compiler name and version in case gcc or icc is used
   * in src/config.c
     - added TEST flag within y/n questions
   * in src/Makefile
     - took away flag -lgomp
   * in cycle/res/doc/report.tex
     - added WENO time discretization


2016 FEB 12
   * in lib/exm/exm.c
     - added function find_terminal_window_size()
   * in src/control.c
     - in write_innards(), added a call to find_terminal_size()
     - in write_innards_row(), added linewidth as a parameter
   * in src/common.c
     - in fatal_error(), added call to find_terminal_size()
     - got rid of EXITONFATALERROR flag
   * in lib/gridg/share.c
     - in GRIDG_fatal_error(), added call to find_terminal_size()
   * in lib/soap/soap.c
     - in SOAP_fatal_error(), added call to find_terminal_size()
   * in src/main.c
     - took away EXITONFATALERROR global variable
     - in main(), got rid of -nox flag
       

2016 FEB 11b
   * in src/post.c
     - got rid of _x functions
     - at the beginning, make a call to read_control_functions() 
   * in src/control.c
     - in _x_DISTMPI_compatible(), improved error messages 
   * in lib/exm/exm.c
     - in strind(), changed the sign of the indent: if indent is specified with negative
       sign, do a hang indent. 
     - added function strwrpind()
   * in src/control.c
     - added function write_innards_row()
     - in write_innards, made changes to call write_innards_row() for all rows part of the
       "innards"


2016 FEB 11a
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), took away the statement that set codex->FUNCTION to FALSE
   * in src/common.h
     - in gl_t, added METRICS_INITIALIZED
   * in src/control.c
     - added function _Omega_DISTMPI_compatible()
     - modified read_control_functions() to call _Omega_DISTMPI_compatible()
     - at the beginning of read_control(), initialized gl->METRICS_INITIALIZED to FALSE
     - at the end of find_metrics_on_all_nodes(), set gl->METRICS_INITIALIZED to TRUE


2016 FEB 10b
   * in model/thermo/_generic/thermo.c
     - in _T_from_w_e(), rewrote error message
   * in src/common.c
     - in fatal_error(), added call to strwrp
   * in lib/exm/exm.c
     - added functions strind, strins, strrep, strwrp
   * in src/control.c
     - in various functions, made modifications to use new functions strind, strins, 
       strrep, strwrp
   * in lib/soap/soap.c
     - in SOAP_fatal_error, added call to strwrp
     - in clean_comments(), improved error handling of closed comment "}" without matched
       opening comment "{"
   * in lib/gridg/share.c
     - in GRIDG_fatal_error, added call to strwrp


2016 FEB 10a
   * in src/data.c
     - defined dt_steady as 1.0e99 seconds
     - in write_data_file*(), set dt to dt_steady instead of 0
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in write_runtime_template(), added modification when UNSTEADY and EMFIELD are set:
       the time level should only be increased if ximax_emfield<xiverge_emfield
   * in model/thermo/_generic/thermo.c
     - in function _T_from_w_e(), now do a fatal_error everytime T is not converged
   * in src/post.c
     - in function write_post_template(), improved the default template


2016 FEB 09b
   * in lib/soap/soap.c
     - in clean_comments(), find line number when string or comment not closed properly
   * in src/main.c
     - in process_flag_1(), added better handling in case there is no argument following
       a specified flag


2016 FEB 09a
   * in lib/gridg/2Dbase.c 
     - in Corners_argum(), changed the order of the arguments to something more intuitive
     - in Block_argum(), took away the feature of passing fewer segments than dimensions
       (now must use NO segment strictly) 
     - improved error handling by checking if node used has been initialized previously
   * in lib/gridg/3Dbase.c 
     - in Corners_argum(), changed the order of the arguments to something more intuitive
     - in Block_argum(), took away the feature of passing fewer segments than dimensions
       (now must use NO segment strictly)
     - improved error handling by checking if node used has been initialized previously
   * in lib/gridg/doc/report.tex
     - updated documention to reflect changes in arguments order within Corners() commands
   * in lib/gridg/*base.c
     - improved the error handling associated with various sscanf() calls
   * in src/control.c
     - in find_metrics_on_all_nodes(), verified that the cell area or volume should always
       be positive
   * in model/fluid/_Favre-Reynolds_plasma/fluid_post.c
     - changed the post variables w_* to N_*


2016 FEB 08b
   * in model/fluid/_Favre-Reynolds*/fluid_init.c
     - in write_init_fluid_template(), changed default of psi
   * in model/thermo/_generic/thermo.c    
     - added function find_default_init_number_density_string()
     - added function find_default_init_number_density_fraction_string()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_init.c
     - in write_init_fluid_template(), added call to find_default_init_number_density_fraction_string()   
   * in model/fluid/_drift-diffusion/fluid.c
     - in write_init_fluid_template(), added call to find_default_init_number_density_string()   


2016 FEB 08a
   * in lib/soap/soap.c
     - in SOAP_get_argum_double() and SOAP_get_argum_long(), improved the error
       message
     - in evaluate_arithmetic_1(), functions_builtin(), SOAP_var_value(), 
       replace_NOT_operator(), added better error handling of sscanf
   * in src/common.c
     - added function find_zone_from_argum()
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in function read_model_fluid_actions_2(), call find_zone_from_argum()
   * in model/emfield/*/emfield.c
     - in function read_model_emfield_actions_2(), call find_zone_from_argum() 
   * in src/bdry.c 
     - in function read_bdry_actions() within Region command call find_zone_from_argum() 
   * in src/init.c
     - in read_init_actions_fluid() and read_init_actions_emfield() within Region command,
       call find_zone_from_argum
   * in lig/gridg/2Dbase.c
     - added function ReverseIndex_argum()
   * in lig/gridg/*base.c
     - added verify_zone_validity() and verify_node_validity()
     - improved the error handling of various actions 
   * in lib/gridg/eg/tecgrid*.c
     - made changes to include the line numbers within the processed code
   


2016 FEB 07b
   * in lib/gridg/share.c
     - added function GRIDG_fatal_error()
   * in lib/gridg/*.c
     - replaced the fprintf(stderr..) with GRIDG_fatal_error()
   * renamed
     - DEFAULT_INITVAR -> defaultinitvartypefluid
     - DEFAULT_INITVAR_EMFIELD -> defaultinitvartypeemfield
     - momentumfluxpos -> posmomentumflux 
     - totalenergyfluxpos -> postotalenergyflux
     - numpostvarfluid -> totalpostvarfluid 
     - numinitvarfluid -> totalinitvarfluid 
     - numinitvaremfield -> totalinitvaremfield
     - numpostvaremfield -> totalpostvaremfield
   * in model/fluid/*/fluid.hh
     - added constant totalinitvartypefluid
   * in model/emfield/*/emfield.hh
     - added constant totalinitvartypeemfield
   * in src/init.c
     - in read_init_actions_emfield() and read_init_actions_fluid() added a fatal_error
       if the initial condition type is out of bound
   * in src/main.c
     - improved the error handling for -pr flag, -pt flag, and -n flag   


2016 FEB 07a
   * in USAGE
     - added section on "Post-processing Data" by using the post module with 
       -pm flag
   * in src/post.c
     - in write_post_template(), improved the default template
     - in read_post_functions(), improved the error handling of the sscanf() functions
   * in lib/soap/soap.c
     - in SOAP_get_argum_double() and SOAP_get_argum_long() fixed a bug: added a
       check to make sure that there is nothing within the argum right of the string being
       converted to a number
     - added function SOAP_is_double_a_long()
     - in SOAP_substitute_expression(), now calls SOAP_is_double_a_long()
   * in lib/gridg/1Dbase.c and lib/gridg/2Dbase.c and lib/gridg/3Dbase.c
     - in Equation*D() and functions() added error handling of sscanf
     - in various functions calling sscanf, added a check to make sure that there
       is nothing within the argum right of the string being
       converted to a number
   * in src/common.c
     - in find_bool_var_from_codex() and find_int_var_from_codex(), added error
       handling using SOAP_is_double_a_long()
   * in src/bdry.c
     - in read_bdry_actions(), improved the error handling of the sscanf() calls 
   * in src/init.c
     - in read_init_actions_fluid() and read_init_actions_emfield(), improved the error
       handling of the sscanf() functions
   * in src/control.c
     - in read_control_functions, improved the error handling of the sscanf() calls


2016 FEB 06b
   * in src/post.c
     - got rid of all calls to resume_nodes_only_in_zone() and associated code
     - added functions integrate_emfield_force(), integrate_Qbeam(),
       integrate_EdotJ(), integrate_emfield_work()
     - in read_post_functions(), added calls to integrate_emfield_force(),
       integrate_Qbeam(), integrate_EdotJ(), integrate_emfield_work()
     - in write_post_template(), modified template 


2016 FEB 06a
   * in src/post.c
     - in verify_post_domain_is_single_x_plane(), fixed a bug: the nodes shouldn't be 
       resumed if the post domain is a single x plane
     - deleted all the (commented) extranode code because it's not intended to be used anymore
     - added function integrate_shear_force_on_surface()
     - added function integrate_pressure_force_on_surface()
     - in read_post_functions(), added call to integrate_shear_force_on_surface()
       and integrate_pressure_force_on_surface()
   * in lib/soap/printf.c
     - in verify(), if errno then don't output error to the screen if NDEBUG is set
 

2016 FEB 05b
   * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
     - added find_dSaxi_dU()
     - in find_dSstar_dUstar(), added call to find_dSaxi_dU()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in find_alpha(), only check for fatal error if NDEBUG is not set
   * in src/control.c
     - in readcontrol_actions(), fixed a bug related to the Post() action not
       checking for the Cycle module to have been read
     

2016 FEB 05a
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - added function reformat_rho()
   * in model/fluid/_Navier-Stokes_perfect/fluid_conv.c
     - in find_Ustar_from_musclvars(), added call to reformat_T() and reformat_rho()
     - in find_jacvars_from_musclvars(), added call to reformat_T() and reformat_rho()
   * in model/fluid/*/fluid_bdry.c and _drift-diffusion/fluid.c
     - deleted function is_bdry_interface_equal_to_bdry_node()
   * in cycle/res/conv/(_FVS_1o_Steger-Warming+,_FVS_2o_MUSCL,_FVS_2o_VanLeer,_FVS_2o_VanLeer+)/convres.c, 
     - got rid of call to is_bdry_interface_equal_to_bdry_node()   
   * in cycle/res/conv/_FDS_5o_WENO
     - rewrote find_Fstar_interface()
   * in model/fluid/_Favre-Reynolds*/fluid_conv.c
     - in find_musclvars(), changed musclvars so that the first ns-1 vars are w and not rhok
     - in find_jacvars_from_musclvars(), made changes to reflect new musclvars and added call
       to reformat..()
     - in find_Ustar_from_musclvars(), made changes to reflect new musclvars and added call
       to reformat..()
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - rewrote function reformat_rhok()
   * in model/fluid/_Favre-Reynolds_Tv/fluid.c
     - in reformat_w(), apply the clipping also to the charged species, not just the neutrals
     - in find_prim_fluid(),  apply the wmin clipping also to the charged species, not just the neutrals
     - in write_cycle_fluid_template(), took away  code specific to the charged species
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - deleted update_bdry_wall_old()
     - in update_bdry_wall() got rid of (non-effective) call to is_node_bdry_dielectric()
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall() got rid of (non-effective) call to is_node_bdry_dielectric()
   * in model/emfield/_none/emfield.c
     - deleted is_node_bdry_dielectric()
   * in cycle/res/conv/time
     - added directory _Taylor_3o
   * in model/fluid/_Favre-Reynolds*/fluid_source.c
     - in function find_Saxi() wrote the axisymmetric source terms due to convection as function
       of U rather than being explicitly written in terms of flow variables   
   * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
     - added function find_Saxi()
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions(), and write_model_fluid_template() added AXISYMMETRIC variable
 

2016 FEB 04b
   * in cycle/res/conv/
     - added _FDS_5o_WENO 
     - works not bad but needs some fine tuning


2016 FEB 04a
   * in src/main.c
     - got rid of check_residual_low_ram
   * in cycle/share/cycle_share.c
     - got rid of check_residual_low_ram()
   * in tar/Makefile
     - added code to copy USAGE to warp_package/USAGE.txt
     - now erases warp_package/USAGE.txt and warp_package/LICENSE.txt when doing make clean
   * in README
     - made minor updates
   * added file COMPILE giving compilation instructions
   * in cycle/*/cycle.c and cycle/share/cycle_share.c
     - changed last parameter of find_ximax() from TRUE to IJK_UPDATE_YES and from FALSE
       to IJK_UPDATE_NO
   * in model/fluid/_Navier-Stokes_perfect/fluid.c
     - in read_model_fluid_actions_2(), added SetHeatAdded() and SetBodyForce() actions
     - in write_model_fluid_template(), added SetHeatAdded() and SetBodyForce() actions
     - in read_model_fluid_actions(), set Qadd and Fbody[] to zero when the control file is
       read at first
   * in src/common.h
     - in npbs_t, added Fbody and Qadd if _FLUID_NAVIERSTOKESPERFECT is set
   * in model/fluid/_Navier-Stokes_perfect/fluid_source.c
     - in find_Sstar(), added the body forces and the heat added


2016 FEB 03b
   * in src/main.c
     - in main(), added flag -crl (check residual low ram) along with call
       to check_residual_low_ram()
   * in cycle/share/cycle_share.c
     - moved check_residual() to check_residual_low_ram()
     - added a new check_residual() which updates the prims on the entire domain 
       at once
     - in process_code_runtime(), added call to update_runtime_codex_xi_from_gl()
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c and cycle/_multizone_marching/cycle.c
     - in init_cycle(), made changes so that residual and ximax of both the fluid and emfield
       is correctly calculated prior to the iteration process


2016 FEB 03a
   * in model/emfield/*/emfield.c
     - in read_cycle_emfield_actions(), output _EMFIELD_ACTIONNAME to stdout only if 
       VERBOSE is set to TRUE
     - in _Jdispstar_interface(), changed /dt by /_nonzero(dt) to prevent a division
       by zero should dt be set to zero
   * in model/emfield/_Ohm_generalized/emfield.c
     - added function _Jemfstar_interface()
     - in _Jtstar_interface(), added call to _Jemfstar_interface()
     - in find_Fstar_interface_emfield(), added call to _Jemfstar_interface()
   * in cycle/share/cycle_share.c
     - in read_cycle_actions(), only read runtime module if !gl->CONTROL_READ
     - in read_cycle(), only init_cycle if init_cycle
     - in runtime_actions(), added call to read_cycle()
   * in src/data.c
     - in various functions, changed string "in format" to "in WARP format"
     - in various functions, changed string "writing to" to "writing to WARP"
     - in read_data_file(), got rid of the wfprintf() statements before and after
       reading the data file (not needed anymore because read_data_file() is not
       called within  the Init() module anymore)
   * in src/init.c
     - in read_init(), took away the initialization of gl->INIT_FLUID_READ and 
       gl->INIT_EMFIELD_READ 
     - in write_init_template(), took away ReadDataFile() from Init() template
     - in read_init_actions(), took away ReadDataFile() action
     - in read_init_actions(), added initialization of U at previous time levels
       if UNSTEADY is set
   * in src/control.c
     - in read_control(), added initialization of gl->INIT_FLUID_READ and 
       gl->INIT_EMFIELD_READ to FALSE
     - in read_control(), added time as a codex global variable 
     - in read_control_actions(), added call to read_data_file() after Bdry() action
       is executed
     - in read_control_actions(), just  after read_data_file(), updated "time" variable
       within codex  



2016 FEB 02b
   * in bin
     - changed DBD_actuator.wrp and MHD_generator.wrp slightly


2016 FEB 02a
   * renamed
     - EMF -> EMFIELD
     - emf -> emfield
     - Emf -> EMField
     - Emfield -> EMField
     - Urefemfield -> Uref_emfield
   * in src/common.h
     - in np_t, added EMFoverL should EMFIELD be defined
     - in np_t, got rid of addVcrossB variables
     - in gl_t, added CONTROL_READ;
   * in model/emfield/*/emfield.c
     - deleted _time_marching_method_emf()
     - in read_model_emfield_actions(), added init. of EMFoverL
     - in write_model_emfield_template(), added call to SetElectroMotiveForce()
     - in read_model_emfield_actions_2(), added call to SetElectroMotiveForce()
     - changed the calls from SOAP_var_value to find_*_var_from_codex()
     - in read_model_emfield_actions(), do not initialize E,J,EMFoverL, sigmasolid
       if gl->CONTROL_READ is TRUE
   * in cycle/share/cycle_share.c
     - in runtime_actions(), added call to read_model()
   * in src/control.c
     - at the beginning of read_control(), set gl->CONTROL>READ to FALSE 
     - at the end of read_control(), set gl->CONTROL>READ to TRUE 
   * in lib/soap/soap.c
     - added function SOAP_is_var_in_codex()
   * in src/common.c
     - added find_double_var_from_codex(), find_bool_var_from_codex(), find_int_var_from_codex()
   * in model/fluid/*/fluid.c
     - changed the calls from SOAP_var_value to find_*_var_from_codex()
   * in model/_generic/model.c
     - in read_model(), only init clipped variables if gl->CONTROL_READ is not true
   * in model/ebeam/_fixed/ebeam.c
     - in read_model_ebeam_actions() do not initialize Qbeam if gl->CONTROL_READ is TRUE
   * in src/init.c
     - in read_init(), do not check for INIT_FLUID_READ or INIT_EMFIELD_READ if 
       CONTROL_READ is TRUE
   * in lib/soap/soap.c
     - changed the way the arguments are counted (from 1 instead of from 0) when outputting
       information to the screen after the fatal_error -- more intuitive this way


2016 FEB 01b
   * in tar/warp_package/USAGE.txt
     - separated the commands into more sections and added details
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in function _et_denom(), replaced ETMAGMIN by gl->model.fluid.etdiv
   * in  model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in write_model_fluid_template(), added variable etdiv
     - in read_model_fluid_actions(), added variable etdiv
   * in model/fluid/*/fluid.c
     - in write_model_fluid_template(), improved the comments of AXISYMMETRIC, Pecletmax, 
       kdiv, and psidiv
   * in model/emfield/*/emfield.c
     - in read_model_emfield_actions_2(), added action SetSolidConductivity
     - in write_model_emfield_template(), added action SetSolidConductivity
     - in various functions, changed gl->model.emfield.sigmasolid to np[l].bs->sigmasolid
   * in src/common.h
     - in npbs_t, added sigmasolid if _EMFIELD_OHMGENERALIZED or _EMFIELD_OHM is set


2016 FEB 01a
   * in src/control.c
     - in write_innards(), added variable str which is needed should USERNAME be defined
       by the compiler
   * in tar
     - renamed warpball to warp_package and changed the Makefile appropriately
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in write_model_fluid_template(), changed default value of zetaD from 0.2 to 1.0
 

2016 JAN 31a
   * in src/control.c
     - in write_innards(), changed the title
     - added function center_string()
     - in word_break(), now copy str to newstr before doing manipulations
   * added directory tar
     - in Makefile, made modifications to incorporate new tar directory
   * in lib/soap/doc/report.tex
     - made the document up to date
   * in lib/gridg/doc/report.tex
     - made the document up to date


2016 JAN 30a
   * in src/control.c
     - in write_innards(), took away output of residual module and metrics module
       (both can only be "generic" anyway)
     - added write_line(), write_citations(), word_break(), strins(), replace_str(),
       and replace_cites()
     - added constants bibname[] and bib[]
     - in write_innards(), made changes to incorporate citations
   * in various *.hh
     - added citations where appropriate
   * in src/main.c
     - deleted print_line()
     - in main(), call write_line() instead of print_line()


2016 JAN 29b
   * in src/init.c
     - in read_init(), do not call update_prim_emf_mem_in_zone() anymore
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - in init_cycle() added call to update_prim_emf_mem_in_zone() if EMF is defined
   * in model/emfield/_Ohm_generalized/emfield.c
     - in read_cycle_emfield_actions(), added variable relaxfactEk
     - in write_cycle_emfield_template(), added variable relaxfactEk
   * in model/fluid/*/fluid_source.c
     - got rid of find_dSquasi1D_dU()
     - got rid of find_Squasi1D()
   * in model/metrics/_generic/metrics.c
     - got rid of all code specific to 1D
   * in src/control.c, src/common.h, src/bdry.c, src/post.c, src/common.c
     - got rid of all code specific to 1D
   * renamed
     print_innards() -> write_innards()
   * in src/control.c
     - in write_innards(), printf _THERMO_METHOD only if _FLUID_MULTISPECIES is set
     - in write_innards(), added  by _USERNAME on _HOSTIP
   * in src/config.c
     - in output_makefileheader(), added -D_USERNAME and _D_HOSTNAME flags


2016 JAN 29a
   * in model/emfield/*/emfield.c
     - in find_Ee_for_Townsend_ionization(), rewrote the discretized form of Ee
       for monotone solutions --> works great now


2016 JAN 28b
   * in model/emfield/_Ohm_generalized/emfield.c
     - added function find_E_for_DeltaVk()
     - in find_DeltaVk_from_mu(), can call find_E_for_DeltaVk() (if desired)
     - in find_E_Townsend(), made sure sigmaden is non zero
   * renamed
     - find_E_Townsend -> find_Ee_for_Townsend_ionization
   * in model/emfield/_Ohm/emfield.c
     - added function find_Ee_for_Townsend_ionization_new() --> still need testing
     - in find_dtau_emf(), made dx=sqrt(dxmin*dxmax) (used to be rather dx=dxmin)
 

2016 JAN 28a
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_E_Townsend() changed the way the Townsend E field is determined: it's
       now essentially monotonic
     - in preamble, changed relaxfactEk to 0.5 from 0.0
     - in find_dtau_emf(), made dx=sqrt(dxmin*dxmax) (used to be rather dx=dxmin)


2016 JAN 27c
   * in model/emfield/_Ohm_generalized/emfield.c
     - in find_DeltaVk_from_mu(), do not determine metrics even when node is not resumed:
       simply calling _X() is fine now
     - added flag EFIELD_SPECIES_FRAME
     - in find_prim_emf_mem_2(), added call to find_Ek_muk_mem_nonlocal() when
       EFIELD_SPECIES_FRAME is set to FALSE
     - in find_E_Townsend(), changed minmod(sigmap1h*Ep1h[i],sigmam1h*Em1h[i]) to
       minmod(sigmap1h,sigmam1h)*minmod(Ep1h[i],Em1h[i]) --> improves considerably the
       monotonicity at high magnetic field especially


2016 JAN 27b
   * in lib/soap/soap.c
     - added function SOAP_count_all_vars()
     - added function SOAP_clean_added_vars()
     - in SOAP_process_code(), added SOAP_VARS parameter
   * in lib/soap/soap.h
     - removed CLEANSTACK from SOAP_codex_t
   * in various files
     - added SOAP_VARS_KEEP_ALL to parameters to SOAP_process_code
     - got rid of calls to CLEANSTACK
   * in src/init.c
     - in read_init_actions() and read_init(), changed SOAP_VARS_KEEP_ALL to SOAP_VARS_CLEAN_ADDED 
   * in src/bdry.c
     - in read_bdry_actions(), changed SOAP_VARS_KEEP_ALL to SOAP_VARS_CLEAN_ADDED 
   * in model/_generic/model.c
     - in read_model(), changed SOAP_VARS_KEEP_ALL to SOAP_VARS_CLEAN_ADDED
   * in model/fluid/*/fluid.c
     - in read_cycle_fluid_actions(), and read_model_fluid_actions(), added calls to
       SOAP_count_all_vars() and SOAP_clean_added_vars()
   * in model/emfield/*/emfield.c
     - in read_cycle_emfield_actions(), and read_model_emfield_actions(), added calls to
       SOAP_count_all_vars() and SOAP_clean_added_vars()


2016 JAN 27a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - added function _et_denom()
     - in find_Dstar(), called _et_denom(et) instead of _nonzero(et) to find et on the denominator
       of Dstar --> prevents occasional NANs when et is very close to zero
   * in src/common.c
     - added invert_matrix_new() to check invert_matrix
   * in tools/prandtlmeyer.c
     - added command line arguments
   * in src/control.c
     - in read_control(), added UNSTEADY to codex


2016 JAN 26b
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_vars_except_xi_from_gl(), added xiverge_emf to the runtime
       variables 
   * in model/emfield/*/emfield.c
     - renamed xivergephi to xiverge_emf
   * in bin/*.wrp
     - renamed xivergephi to xiverge_emf
   * renamed everywhere:
     - TYPELEVEL_BASE -> TYPELEVEL_FLUID   
     - TYPELEVEL_WORK -> TYPELEVEL_FLUID_WORK   
   * in src/control.c
     - added function print_innards()
     - in write_control(), call print_innards() at the beginning of the control file


2016 JAN 26a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in find_dH_dUstar(), part of TEST section, find_dTe_dU() and _Te() were
       called with the wrong arguments
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c and model/fluid/drift-diffusion/fluid.c
     - in function find_dSstar_dUstar(), got rid of the limitation on dSstar_dUstar[speceminus][speceminus]
       when TEST flag is set
   * in model/fluid/*/fluid_init.c and model/fluid/drift-diffusion/fluid.c
     - in function write_init_fluid_template(), rewrote the template 
   * in model/emfield/*/emfield.c
     - in function write_init_emfield_template(), rewrote the template
   * in model/thermo/_generic/thermo.c
     - in find_default_init_mass_fraction_string(), fixed a bug related to when no O2 and N2 species
       were present
   * in lib/soap/soap.c   
     - in SOAP_copy_all_vars(), fixed a bug: when there are no variables to copy, the first
       variable name should be set to NULL
   * in src/init.c
     - added function reformat_initvar_species_fractions()
   * in model/fluid/_Favre-Reynolds*/fluid_init.c 
     - at the beginning of functions init_node_*(), added call to reformat_initvar_species_fractions() 
   

2016 JAN 25b
   * in src/init.c
     - in read_init_actions(), added calls to add_bdry_types_fluid_to_codex()
       and add_bdry_types_emfield_to_codex()
   * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c 
     - deleted write_bdry_types_fluid()
     - added write_bdry_fluid_template()
   * in model/emfield/*/emfield.c 
     - deleted write_bdry_types_emfield()
     - added write_bdry_emfield_template()


2016 JAN 25a
   * in src/control.c
     - in find_metrics_on_all_nodes() determine if boundary node needs centered metrics by calling
       is_node_bdry_symmetry_plane() prior to update_metrics_at_bdry_node()
   * in model/_generic/model.c
     - added function is_node_bdry_symmetry_plane()
   * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c
     - added function is_node_bdry_symmetry_plane_fluid()
   * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_fluid(), no need anymore to determine metrics prior to updating bdry node 


2016 JAN 24
   * in src/common.c
     - added add_int_to_codex(), add_double_to_codex(), and add_string_to_codex()
       (moved from cycle/share/cycle_share.c)
   * in src/bdry.c
     - in read_bdry_actions(), added call to add_bdry_types_fluid_to_codex()
   * in model/fluid/*/fluid_bdry.c and model/fluid/_drift-diffusion/fluid.c 
     - in write_bdry_types_fluid(), rewrote bdry types in non-digital form
     - added function add_bdry_types_fluid_to_codex()
     - in update_bdry_fluid(), replaced bdry types from digital form to non-digital form
   * in model/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), treat dielectrics the same as electrodes (do not
       check if boundary is a dielectric)
   * in model/emfield/*/emfield.c 
     - in write_bdry_types_emfield(), rewrote bdry types in non-digital form
     - added function add_bdry_types_emfield_to_codex()
     - in update_bdry_emfield(), replaced bdry types from digital form to non-digital form
     - in find_bdry_TDMA_values_emf(), replaced bdry types from digital form to non-digital form


2016 JAN 23b
   * in cycle/ts/_block_implicit_ADI/Makefile
     - renamed chem_share.a to ts_share.a (was altered by mistake on 2016 JAN 23a)
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in add_dUstar_to_U(), now clip wemin before imposing Te to the rhoe flux from
       the local approximation
 

2016 JAN 23a
   * in model/chem/*/chem.c
     - in test_dW_dx(), added screen output of rhok, Te, T, Tv, EoverN prior to test
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c and model/fluid/_drift-diffusion/fluid.c 
     - in test_dSchem_dU(), now find reduced electric field from potential instead of setting it
       to zero
   * in model/chem
     - added directory share
   * in model/chem/share
     - added chem_share.c 
   * in model/chem/share/chem_share.c
     - moved test_dW_dx() from model/chem/*/chem.c  
   * in model/chem/_Air_Plasma_8s_28r_Macheret/chem.c and model/chem/_N2_Plasma_3s_3r/chem.c 
     - in find_dW_dx() added full linearization of Townsend ionization as an option (set TOWNSEND_IMPLICIT
       to true in the preamble)     
   * in model/fluid/_Favre-Reynolds_plasma/fluid_source.c and model/fluid/_drift-diffusion/fluid.c
     - in find_dSstar_dUstar(), added line to make sure that the jacobian term related to the
       electron transport can not be positive 


2016 JAN 22b
   * in cycle/_multizone/cycle.c
     - in init_cycle(), and in runtime_actions_cycle_specific() made changes so that multizone
        is compatible with EMF 


2016 JAN 22a
   * in model/fluid/Favre-Reynolds_plasma/fluid_plasma.c
     - in _Te_local(), added Temin as a parameter, and make sure that Te is greater than Temin
   * in model/fluid/Favre-Reynolds_plasma/fluid_source.c
     - Changed calls to _Te_local by adding Temin=T
   * in model/fluid/Favre-Reynolds_plasma/fluid.c
     - in add_dUstar_to_U(), changed call to _Te_local by adding Temin=gl->model.fluid.Temin
     - in find_prim_fluid(), added code to make sure that Te is at least as high as T
   * in model/fluid/Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_inflow(), update_bdry_inflow_reservoir(), update_bdry_inflow_reservoir_2(),
       update_bdry_inflow_plasma, now extrapolate Te from nearest inner nodes rather than fix
       it in time
     - in update_bdry_wall(), now do not force a cathode condition if boundary is a dielectric.
       Rather, determine if boundary is cathode or anode with the sign of the electric field only


2016 JAN 21b
   * in bin
     - small changes to DBD_actuator*wrp
     - small change to dielectrics3D.wrp 
   * in cycle/_standard/cycle.c
     - in write_runtime_template(), removed call to UpdateFluidConstantPseudotimeStep()
  

2016 JAN 21a
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_inflow_plasma(), changed BC for Te: now set it equal to T
     - in update_bdry_inflow_plasma(), do not extrapolate the charged species densities --
       rather, keep them constant at the inflow


2016 JAN 20b
   * in model/emfield/*/emfield.c
     - in function find_Fstar_interface_emf(), use function _Jstar_interface()
       instead of find_Jstar_at_interface()
     - in function find_J_at_node_from_Jstar_at_interfaces(), use function _Jstar_interface()
       instead of find_Jstar_at_interface()
     - added function _Jtstar_interface()
     - in find_post_variable_name_emfield(), added Jt
     - in find_post_variable_value_emf(), added Jt 


2016 JAN 20a
   * in model/emfield/*/emfield.c
     - in find_post_variable_value_emf() only computer mue and Ve if node is valid
       at the BASE level. Otherwise, set them to zero
     - added function _phim1()
     - added function _dphim1dXj()
     - added function _Jdstar_interface()
     - in find_Fstar_interface_emf(), added displacement current through call to _Jdstar_interface()
     - in find_Sstar_emf(), set Sstar to zero
     - in find_phi_TDMA_coefficients(), added epsilon0/dt to sigma in TDMA coefficients when
       UNSTEADY is set
     - in find_dtau_emf() added epsilon0/dt to sigma
   * in src/main.c
     - in main(), now set CYCLEMODULE to TRUE whether QUICK is TRUE or FALSE
     - done so that cycle module is read when outputting postfile, which is necessary to
       initialize some relaxation parameters needed in determining the boundary conditions
       for plasma fluid modules
   * in model/emfield/doc/report.tex
     - added section 2.1 Displacement Current and Current Components
   * in src/common.h
     - in npbs_t, added fluxemf_t Uemfm1 when UNSTEADY is set
   * in src/data.c
     - made changes to the read_data*() functions to read in Uemfm1 when UNSTEADY is set 
   * in cycle/share/cycle_share.c
     - in increase_time_level(), set Uemfm1 to Uemf

  
2016 JAN 19b
   * in src/control.c
     - moved function find_metrics_on_all_nodes() from cycle/share/cycle_share.c
     - fixed a bug in function find_metrics_on_all_nodes(): the inner nodes must all be
       determined prior to the boundary nodes
   * in model/metrics/_generic/metrics.c
     - removed function find_metrics_from_base_level()
     - improved function find_metrics_at_node() by finding Omega and X from memory
       rather than calculating them
   * in model/emfield/*/emfield.c
     - got rid of the calls to find_metrics_from_base_level() and replaced them by _X()
       and _Omega()
     - changed the call to _xi_emf() 
       (got rid of metrics terms within arguments)
     - in find_Sstar_emf(), set source term to zero if fluid node not valid 
   * in cycle/share/cycle_share.c
     - got rid of the calls to find_metrics_from_base_level() and replaced them by 
       find_metrics_at_node
   * in cycle/ts/share/ts_share.c
     - got rid of the calls to find_metrics_from_base_level() and replaced them by 
       find_metrics_at_node
   * in src/common.c
     - in function find_ijk_from_l(), now set j=k=0 if 1D and k=0 if 2D


2016 JAN 19a
   * in bin
     - added DBD-actuator.wrp
   * in src/main.c
     - in main(), changed screen titles of the "node type" output for both the fluid
       and emfield fluxes
   * in model/emfield/_Ohm/emfield.c
     - in _mu_mem(), set mobilities to zero should the node not be valid in TYPELEVEL_BASE
     - in _sigma_mem(), set sigma to gl->model.emfield.sigmasolid should the node not be valid 
       in TYPELEVEL_BASE
   * in src/common.c
     - took away npmt_t
     - added Omega and X in npbs_t
   * in model/metrics/_generic/metrics.c
     - renamed Jinv to Omega (used to be always equal in 2D and 3D)
     - made changes to reflect new location of Omega and X within npbs_t
   * in src/post.c
     - in find_body_forces_properties(), made changes to reflect new location of Omega
       within npbs_t
   * in cycle/share/cycle_share.c
     - added function find_metrics_on_all_nodes()
   * in src/control.c
     - in readcontrol_actions(), added call to find_metrics_on_all_nodes()
   * in model/fluid/*/fluid_bdry.c
     - in various functions, changed call to mt->X to bs->X


2016 JAN 18b
   * in cycle/res/conv/_FDS_1o_Parent_X/convres.c
     - implemented a novel way to implement the cross-derivative terms based on
       the upwinded Cauchy_2o time discretization -- as expected, this yields a
       resolution similar to the one obtained with the standard _FDS_1o_Parent scheme
       with zetaAd=1.0
  

2016 JAN 18a
   * in model/thermo/_generic/thermo.c
     - renamed CPmix to cpmix in several functions
     - in function _T_from_w_e(), added more screen output information when cnt>95 
       just before exiting the loop at cnt=100
   * renamed
     - reformat_c() to reformat_w()
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in find_prim_fluid(), changed the way the mass fractions were clipped
       (they used to be all clipped following wmin which should only be used for the
        neutral species -- now, the neutrals, ions, and electrons, are clipped 
        separately)
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - in find_alpha(), sigma is now found from _sigma_positive() rather than being
       limited through _nonzero()
   * in cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific(), put update_prim_emf_mem_in_zone()
       right before finding the residual rather than after updating U
     - in runtime_actions_cycle_specific(), put update_bdry_nodes() right after updating U 
       rather than before finding the residual
     - the latter two changes were necessary to ensure that the emf primmem are 
       valid while computing the fluid properties


2016 JAN 17
   * in cycle/res/time/_Cauchy_2o+/timeres.c
     - made many changes to find_Fstarspacetime_interface() and 
       find_dFstarspacetime_dUstar_interface() so that the code reflects the latest
       derivation of the cross-derivative space-time terms 
     - the old code for these 2 functions has been moved to oldcode.c
     - this shouldn't affect the residual or the convergence history in any way 
       as long as Z is the identity matrix. If not, then differences are expected


2016 JAN 15b
   * in config/config.c
     - added new global constant OPENMP which is set to FALSE
     - made modifications to get_makefile_vars() so that there is no openmp
       option when OPENMP is set to FALSE
   * in cycle/res/time/
     - renamed _Cauchy_2o to _Cauchy_2o+
     - renamed _Taylor_1o to _Taylor_1o+
   * in model/fluid/_drift-diffusion/fluid.c
     - added function _Nk_from_U()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - added function _Nk_from_U()
   * in model/emfield/*/emfield.c
     - in find_Sstar_emf(), call _Nk_from_U() instead of calculating it directly


2016 JAN 15a
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), now reads gl->dt from cycle variables after each cycle
     - in update_runtime_codex_vars_except_xi_from_gl(), added gl->dt to cycle variables
     - got rid of _TS_EXPLICIT_CONSTANT_DT within update_runtime_codex_vars_except_xi_from_gl()
   * in cycle/res/conv/_FDS_*+/convres.c
     - got rid of calls to find_jacvars_at_interface_pos_average() and replaced them
       with calls to find_jacvars_at_interface_Parent_average()
     - set averaging to ROEAVERAGE by default instead of POSAVERAGE
   * in model/fluid/conv/*/fluid_conv.c or model/fluid/conv/*/fluid.c
     - deleted function find_jacvars_at_interface_pos_average()
   * in src/data.c, src/common.h, src/main.c 
     - got rid of _TS_EXPLICIT_CONSTANT_DT 
   * in bin/sedov.wrp
     - made the time step dt increase exponentially within the Cycle() module


2016 JAN 14b
   * in model/fluid/
     - renamed _Navier-Stokes to _Navier-Stokes_perfect and made necessary
       changes to files within
   * in src/common.h
     - renamed NAVIERSTOKES to NAVIERSTOKESPERFECT
   * in bin
     - renamed modules NavierStokes() to NavierStokesPerfect()
   * in model/emfield/_Ohm_generalized/emfield.c
     - added function _dPkdXj()
     - in find_Vk_from_mu(), find dPkdXj at node directly, not from interfaces
   * in cycle/share/cycle_share.c
     - in create_segments(), added is_node_valid_local() to list of parameters
     - in sweep_with_1D_segments() added is_node_valid_local() to list of parameters
     - in sweep_with_1D_segments(), call create_segments() with is_node_valid_local()
     - renamed update_prim_emf_mem_in_zone() to update_prim_emf_mem_in_zone_old()
     - threaded the function update_prim_emf_mem_in_zone() through calls to sweep_with_1D_segments()
     - in various functions other than update_prim_emf_mem_in_zone(), added &is_node_inner 
       to parameters of sweep_with_1D_segments()
   * in cycle/ts/*/ts.c
     - added &is_node_inner to parameters of sweep_with_1D_segments()
   * in cycle/res/_generic/res.c
     - added &is_node_inner to parameters of sweep_with_1D_segments()


2016 JAN 14a
   * in cycle/ts/share/ts_share.c
     - in find_TDMA_jacobians_conservative(), fixed a bug: B and C must be set to zero along
       with B1 and C1
       o Bug only affects physical models with no convection terms (such as drift-diffusion 
         for instance)
     - added add_Kstar_dG_dUstar_to_TDMA_check()
     - added add_Dstar_to_TDMA_check()
   * in bin
     - in Makefile, added gmon.out to list of files that must be deleted
     - in dischargemagnetic.wrp, fixed Standard(); module within Cycle()
     - added sedov.wrp


2016 JAN 13b
   * in USAGE
     - added CPU profiling section
   * in model/thermo/_generic/thermo.c
     - in _hk_from_T(), made computation more efficient by setting T^3=T*T^2, T^4=T*T^3, etc
     - in _cpk_from_T(), made computation more efficient by setting T^3=T*T^2, T^4=T*T^3, etc
     - in _hk_from_T(), only call _cpk_from_T() if dTplus has a magnitude more than 1e-20K
   * renamed
     - _dPkdXj to _dPkdXj_interface
     - _dPedXj to _dPedXj_interface
     - _dTkdXj to _dTkdXj_interface
     - _dTedXj to _dTedXj_interface
     - _dNkdXj to _dNkdXj_interface
   * in model/emfield/_Ohm/emfield.c
     - added function _dPkdXj()
     - in find_Vk_from_mu(), find dPkdXj at node directly, not from interfaces


2016 JAN 13a
   * in cycle/res/conv/*/convres.hh
     - added the definition of _CONVRES_ORDER  
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - made phimax function of _CONVRES_ORDER
     - in find_Fstarspacetime_interface(), made changes to incorporate the effect of matrix Z
     - in find_dFstarspacetime_dUstar_interface(), made changes to incorporate the effect of matrix Z
 

2016 JAN 12b
   * in lib/soap/soap.c
     - added function SOAP_var_value_string()
     - added function SOAP_free_all_vars()
     - added function SOAP_copy_all_vars()
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), made modifications so that the vars part
       of codex at the end of the runtime module are reset to their original values (prior
       to the runtime module). 


2016 JAN 12a
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - added function _phi()
     - altered find_Fstarspacetime_interface() and find_dFstarspacetime_dUstar_interface()
       and made them function of _phi()


2016 JAN 11
   * in cycle/
     - renamed  Runtimearg_t to readcontrolarg_t
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), initialized all variables in Runtimearg  
     - in runtime_actions(), added action Init() and call to read_init() 
   * in src/control.h
     - in readcontrolarg_t took away npextranode, Aextranode, EXTRANODE
     - in readcontrolarg_t added VERBOSE
   * in cycle/*/cycle.c
     - in runtime_actions_cycle_specific(), changed np=((readcontrolarg_t *)codex->action_args)->np
       for np=*((readcontrolarg_t *)codex->action_args)->np
   * in src/init.c
     - in read_init_actions(), only output to the screen _EMFIELD_ACTIONNAME and _FLUID_ACTIONNAME
       if VERBOSE is TRUE
   * in src/bdry.c
     - in read_bdry_actions(), only output to the screen _EMFIELD_ACTIONNAME and _FLUID_ACTIONNAME
       if VERBOSE is TRUE


2016 JAN 10b
   * in model/emfield/*/emfield.c
     - added function write_init_emfield_template()
   * in src/init.c
     - in write_init_template(), made changes and now calls write_init_emfield_template()
   * in model/thermo/_generic/thermo.c
     - added find_default_init_mass_fraction_string()
   * in model/fluid/_Favre-Reynolds*/fluid_init.c
     - in function write_init_fluid_template(), made changes so that the mass fraction
       default values are determined from find_default_init_mass_fraction_string()
       

2016 JAN 10a
   * in src/init.c
     - in write_init_template(), made changes and now calls write_init_fluid_template()
   * in model/fluid/*/fluid_init.c 
     - added function write_init_fluid_template()
   * in model/fluid/_Favre-Reynolds/fluid_source.c
     - in function _Qk_old() fixed bug in 3D: theta and vartheta should be defined both in 2D and 3D
   * in model/thermo/_generic/thermo.c
     - added function find_species_variable_name()
    

2016 JAN 09a
   * in src/test.c
     - improved the screen output of some help messages
     - deleted test_Roe_average_2 where Roe averaging was done with constant metrics
       (was unreliable)
   * in src/common.c
     - in display_matrix(), changed %E to %+12.5E


2016 JAN 08
   * in src/test.c
     - added functions test_dsdT(), test_s(), test_cp(), test_h()
     - in main(), added calls to new functions
   * in model/fluid/_Favre-Reynolds_Tv/fluid.c
     - in find_dtau_fact(), got rid of unused code function of speceminus


2016 JAN 07b
   * in model/emfield/
     - moved #error directives from emfield.hh to emfield.c 
   * in model/fluid/
     - moved #error directives from fluid.hh to fluid.c where appropriate 
   * in model/chem/
     - added _Air_1s_0r
     - renamed AIR to Air and PLASMA to Plasma within directory names
   * in model/thermo/_generic/thermo.c
     - added the species Air
     - added #ifdef specN2 before every use of specN2 
     - added #ifdef speceminus before every use of speceminus
   * in model/chem/*/chem.hh
     - got rid of speceminus definition when the plasma does not include electrons 
       (used to be #define speceminus -1) 
   * in config/config.c
     - added "MAKEFLAGS += --stop" in output_makefileheader()
   * in src/main.c
     - in output_stamp(), added ncs 


2016 JAN 07a
   * in cycle/res/conv
     - added experimental method _FDS_1o_Parent_X
     - added experimental method _FDS_2o_Parent_X


2016 JAN 06b
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - made modifications to speed up the algorithm by reducing how many times
       the square matrices are multiplied with one another
       (this speedup is achieved while not changing in any way the mathematics of the
        algorithm)


2016 JAN 06a
   * in src/data.h
     - in input_t, only add name_m2, M2 if _TIME_RES_BW>2 
     - in input_t, only add name_m3, M3 if _TIME_RES_BW>3 
   * in src/data.c
     - made modifications in several functions taking into consideration
       latest changes to input_t
   * in src/common.h
     - in npbs_t, only include Um3 if _TIME_RES_BW>3
     - in npbs_t, only include Um2 if _TIME_RES_BW>2
   * in cycle/share/cycle_share.c
     - in increase_time_level(), only update Um3 if  _TIME_RES_BW>3
     - in increase_time_level(), only update Um2 if  _TIME_RES_BW>2
   * in src/main.c
     - made modifications in several functions taking into consideration
       latest changes to input_t and to npbs_t
   * in cycle/res/time/_Cauchy_2o_limited
     - in file .config, added _limited to name
     - in file timeres.c, function fphi(), reverted to ret=arg;
   * in src/config.c
     - added *choicecomment() strings to add a comment such as [EXPERIMENTAL]
       after the choice is listed 


2016 JAN 05b
   * moved cycle/res/time/_Cauchy_2o/ to cycle/res/time/_Cauchy_2o_limited 
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - got rid of the limiters
     - got rid of cross-difference terms in add_Z_dUstar_residual()
   * in cycle/res/conv/*/convres.c
     - for all MUSCL and FVS schemes, added #error should _TIMERES_CAUCHY be set
     - added calls to find_Fstarspacetime_interface() to all Roe non-MUSCL
       discretization schemes


2016 JAN 05a
   * in cycle/ts/share/ts_share.c
     - added find_Kstar_dG_dUstar_interface()
     - added find_Dstar_interface()
     - added find_TDMA_jacobians_conservative()
     - added find_TDMA_jacobians_nonconservative()
   * in cycle/ts/_block_implicit_ADI/ts.c
     - in update_dUtil(), now find the jacobians using find_TDMA_jacobians_nonconservative()
       and find_TDMA_jacobians_conservative()
   * in cycle/ts/_block_implicit_DD-ADI/ts.c
     - in update_dUtil(), now find the jacobians using find_TDMA_jacobians_nonconservative()
       and find_TDMA_jacobians_conservative()
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - in add_Z_dUstar_residual(), added minmod limiter
     - in find_Fstarspacetime_interface(), added minmod limiter


2016 JAN 04b
   * in cycle/ts/share/ts_share.c
     - got rid of add_dFstar_dUstar_to_TDMA_StegerWarming() 
     - added find_dFstar_dUstar_interface_StegerWarming()
     - in add_dFstar_dUstar_to_TDMA(), made modifications for calls to 
       find_dFstar_dUstar_interface_StegerWarming() rather than add_dFstar_dUstar_..()
     - fixed a bug in find_dFstar_dUstar_interface_*():   
       find_metrics_at_interface(np,gl,lp1,lp0,theta,&metricsp1h); should be
       find_metrics_at_interface(np,gl,lp0,lp1,theta,&metricsp1h); 
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - deleted add_dFstarspacetime_dUstar_to_TDMA()
  

2016 JAN 04a
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in find_Aabs_from_jacvars(), changed multiply_matrix_and_matrix() by
       multiply_diagonal_matrix_and_matrix() when the first matrix is the eigenvalue matrix
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - deleted find_Aabs_from_jacvars_denom()
     - added find_Adeninv_from_jacvars() which finds the inverted Aabs directly without
       doing a matrix inversion
     - in find_Aabs_from_jacvars(), the eigenvalues lambdap are not conditioned anymore, they are rather  
       set to the absolute value of lambda
     - rewrote function add_dFstarspacetime_dUstar_to_TDMA()
   * in cycle/ts/share/ts_share.c
     - got rid of add_dFstar_dUstar_to_TDMA_Roe() and add_dFstar_dUstar_to_TDMA_Parent()
     - added find_dFstar_dUstar_interface_Parent()
     - added find_dFstar_dUstar_interface_Roe()
     - in add_dFstar_dUstar_to_TDMA(), made modifications for calls to 
       find_dFstar_dUstar_interface_*() rather than add_dFstar_dUstar_to_TDMA_*() 
  

2016 JAN 03b
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - changed FACT_SPACETIME_CROSS_DERIVATIVE_F to 1.2 and FACT_SPACETIME_CROSS_DERIVATIVE_U to 0.0 
     - in add_Z_dUstar_residual(), added an if condition so that flux is not computed
       if FACT_SPACETIME_CROSS_DERIVATIVE_U is set to 0.0
     - in add_dFstar_jacobian_spacetime, added an if condition so that flux is not computed
       if FACT_SPACETIME_CROSS_DERIVATIVE_F is set to 0.0


2016 JAN 03a
   * in config/config.c
     - in get_makefile_vars(), made it impossible to set "number of dimensions" to 1
   * in cycle/*/cycle.c
     - in function write_runtime_template(), renamed iter==0 to iter==1
   * moved cycle/ts/conv/*/convts.c to cycle/ts/share/ts_share.c
   * in src/main.c
     - in output_stamp(), got rid of convts
   * in Makefile
     - in cleanall: added rm -f  `find . -type f -name '*~' -print` to delete all *~ files
       within all subdirectories
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - added function add_dFstar_jacobian_spacetime()


2016 JAN 02b
   * in cycle/res/conv/_FDS_2o_Yee/convres.c
     - added call to find_dFstar_residual_spacetime() within find_Fstar_interface_2o() 
       and find_Fstar_interface_1o()


2016 JAN 02a
   * copied cycle/res/time/_Cauchy_2o/ to cycle/res/time/_Cauchy_2o_old
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - in find_dFstar_residual_spacetime(), added a spacetime split operator for
       higher monotonicity 
     - in add_Z_dUstar_residual(), added a spacetime split operator for higher monotonicity
     - Cauchy second-order works awesome now, at least with the Parent or Yee schemes
   * in src/main.c
     - in function output_stamp(), changed 2015 for 2016
   * in LICENSE
     - changed 2015 for 2016
   * in bin
     - modified unsteady.wrp and riemann.wrp files


2015 DEC 31
   * in cycle/_multizone_marching/cycle.c
     - in init_cycle(), changed gl->iter==0 to gl->iter==1
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - added find_Aabs_from_jacvars_denom()
     - rewrote find_dFstar_residual_spacetime()
     

2015 DEC 30b
   * in src/main.c
     - got rid of flag -dt
     - in main(), added gl->dt=1e99; after the gl->time is initialized
   * in src/data.c
     - in read_data_file_binary(), read_data_file_ascii(), write_data_file_binary(), 
       write_data_file_ascii(), added the variable gl->dt in the data file first line
       just after the variable gl->time
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - added add_Z_dUstar_residual_primitives()
   

2015 DEC 30a
   * in cycle/res/time/_Cauchy_2o/timeres.c
     - added find_Aabs_from_jacvars()
     - rewrote add_Z_dUstar_residual() so that dU is upwinded in the direction of the
       flux Jacobian (yields a monotone solution for any time step)


2015 DEC 29b
   * in cycle/_multizone/cycle.c and cycle/_standard/cycle.c
     - in write_runtime_template() took away "iter=0;"
   * in cycle/share/cycle_share.c
     - in increase_time_level(), added iter=0;
   * in src/config.c
     - got rid of UNSTEADY flag
   * in cycle/res/
     - added directory timeres
   * in cycle/res/timeres/
     - added directories _steady-state, _Taylor_1o, _Taylor_2o, _Taylor_minmod_2o, _Cauchy_2o
   * in cycle/res/_generic/res.c
     - got rid of find_dFstar_residual_spacetime() and moved to cycle/res/timeres
     - got rid of add_Z_dUstar_residual() and moved to cycle/res/timeres
   * in src/main.c
     - in output_stamp(), got rid of UNSTEADY and added timeres
   * in src/data.c
     - in read_data_file(), made sure gl->iter was at least 1 after reading in the data file


2015 DEC 29a
   * in cycle/res/conv/_FDS_2o_MUSCL
     - in find_Fstar_interface(), added call to find_dFstar_residual_spacetime()
   * in cycle/res/_generic/res.c
     - did some cleanup to the functions add_Z_dUstar_residual() 
       and find_dFstar_residual_spacetime()


2015 DEC 28
   * in cycle/*/cycle.c
     - in function write_runtime_template(), changed WriteDataFile() to 
       WriteDataFile(outputfilename);
   * in cycle/_multizone/cycle.c
     - in function write_runtime_template(), moved WriteDataFile code after
       the properties update
   * in cycle/share/cycle_share.c
     - in function add_string_to_codex(), made changes so that the parameter varvalue
       is not altered by the function
     - in update_runtime_codex_vars_except_xi_from_gl(), added outputfilename to the 
       codex vars
   * in lib/soap/soap.c
     - in function substitute_vars(), added EXIT_SUCCESS and EXIT_FAILURE to list of predefined
       variables
   * in src/control.c
     - in readcontrol_actions(), changed gl->iter=0 to gl->iter=1 so that the first
       iteration is 1 instead of 0


2015 DEC 24
   * renamed
     - next_time_level to increase_time_level
     - NextTimeLevel to IncreaseTimeLevel
   * in cycle/res/_generic/res.c
     - got rid of all code related to FIRSTAPPROACH (non-monotone)


2015 DEC 23a
   * in bin
     - renamed unsteady.wrp to riemann.wrp
     - added unsteady.wrp (unsteady hypersonic flow)
   * in cycle/res/_generic/res.c
     - minor changes
    

2015 DEC 22b
   * in cycle/res/_generic/res.c
     - minor changes


2015 DEC 22a
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - added function find_Uprime_from_jacvars()
     - added function find_Uprime_from_U()
   * in cycle/res/_generic/res.c
     - added function find_dFstar_residual_spacetime_new() where U is replaced by Uprime
     - added function add_Z_dUstar_residual_new() where U is replaced by Uprime


2015 DEC 21b
   * in src/common.h
     - in npbs_t, added flux Um3
   * in src/data.h
     - in input_t added name_m3 variable and M3 flag
   * in src/main.c
     - in main(), made adjustments for Um3 fluxes
   * in src/data.c
     - in read_data_file(), made adjustments for Um3 fluxes
   * in cycle/share/cycle_share.c
     - in next_time_level(), made adjusments for Um3 fluxes
   * in cycle/res/_generic/res.c
     - added add_Z_dUstar_residual_crossminmod()
     - deleted function add_Z_dUstar_residual_spatialminmod() 
     - renamed add_Z_dUstar_residual() to add_Z_dUstar_residual_cross()
     - added add_Z_dUstar_residual() where the time derivative is limited with a minmod


2015 DEC 21a
   * in cycle/res/conv/
     - added _FDS_1o_Parent_fast
       (similar to the _FDS_1o_Parent but without a matrix inversion)
   * in cycle/res/_generic/res.c
     - added function add_Z_dUstar_residual_spatialminmod() 


2015 DEC 20
   * in cycle/res/_generic/res.c
     - added flags BETAXT0 and SPACETIME_CROSS
     - made changes in add_Z_dUstar_residual() accomodating new  BETAXT0 and SPACETIME_CROSS
       flags
   * in cycle/_multizone/cycle.c 
     - in function write_runtime_template(), changed UNSTEADY template
   * in cycle/_standard/cycle.c 
     - in function write_runtime_template(), changed UNSTEADY template
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - in function find_Fstar_interface(), added call to find_dFstar_residual_spacetime()
   * in cycle/res/conv/_FDS_1o_Roe/convres.c
     - in function find_Fstar_interface(), added call to find_dFstar_residual_spacetime()
   * in cycle/res/conv/_FDS_1o_Parent/convres.c
     - in function find_Fstar_interface(), added call to find_dFstar_residual_spacetime()
     

2015 DEC 19
   * in cycle/share/cycle_share.c
     - in function next_time_level(),  updated codex variable "time" after doing the 
       time level update
   * in cycle/res/_generic/res.c
     - added constants FACT_SPACETIME_CROSS_DERIVATIVE_F, FACT_SPACETIME_CROSS_DERIVATIVE_U
       which multiply the spacetime cross-derivatives
     - added function add_Z_dUstar_residual_slow() to check validity of add_Z_dUstar_residual()


2015 DEC 18
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - added function find_jacvars_from_U()
   * in cycle/res/_generic/res.c
     - renamed add_Z_dUstar_residual() to add_Z_dUstar_residual_dimensionally_split()
     - added multidimensional spacetime terms within add_Z_dUstar_residual()
     - added function find_dFstar_residual_spacetime()
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in function find_Fstar_interface(), added call to find_dFstar_residual_spacetime()
   * in cycle/share/cycle_share.c
     - in function next_time_level(), changed the Um1 and Um2 fluxes for all valid nodes,
       not just the inner nodes


2015 DEC 17
   * in src/data.c
     - in read_data_file_binary(), read_data_file_ascii(), write_data_file_binary(), 
       write_data_file_ascii(), added file format 007 
   * in src/main.c 
     - in main(), added gl.time=0.0
   * in cycle/_standard/cycle.c
     - in init_cycle(), took away initialization of gl.time 
   * in cycle/share/cycle_share.c
     - in next_time_level(), added gl->time+=gl->dt;
     - in update_runtime_codex_vars_except_xi_from_gl(), added time variable to 
       runtime vars when UNSTEADY is set
   * renamed 
     - UpdateFluidConstantTimeStep -> UpdateFluidConstantPseudotimeStep


2015 DEC 16
   * in cycle/share/cycle_share.c
     - added function next_time_level()
   * in cycle/_multizone/cycle.c and cycle/_standard/cycle.c
     - in runtime_actions_cycle_specific(), added a call to next_time_level()
     - in write_runtime_template(), added a call to NextTimeLevel(); 
     - in perform_one_iteration(), only set CONVERGED to TRUE if not UNSTEADY
   * in cycle/_multizone_marching/cycle.c
     - added error message should UNSTEADY flag be set
   * in src/main.c
     - in main(), made DT flag non mandatory
   * in src/data.c
     - in write_data_file(), added code to produce .wbak2 file from .wbak
   * in cycle/_multizone/cycle.c
     - in init_cycle(), added calls to find_ximax
     - in perform_one_iteration(), added call to update_runtime_codex_xi_from_gl() at the beginning
       of each iteration


2015 DEC 06
   * in bin
     - added impinge.wrp


2015 DEC 03
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default values for zetaAc, zetaAa,
       and zetaAi to 0.1 (hopefully this won't be changed again )
   * in bin
     - added shockbdry.wrp
   * in model/fluid/_Favre*/fluid_init.c
     - in function write_init_types_fluid(), changed comments on how to set omega in freestream
       (multiply omega by 10 if flow is hypersonic)


2015 DEC 02
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default values for zetaAc, zetaAa,
       and zetaAi to 0.2, 0.0, 0.1
   * in model/fluid/_Favre-Reynolds/fluid_bdry.c
     - got rid of electrode and dielectric boundary condition functions


2015 DEC 01
   * in bin
     - changed the separation.wrp control file to match the one of the concatenated
       channels test case in "The Use of Domain Decomposition in Accel.."


2015 NOV 29
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default values for zetaAc, zetaAa,
       and zetaAi to 0.1
   * in bin
     - added separation.wrp 


2015 NOV 28
   * in model/fluid/_Favre*/fluid.c
     - in function _eps(), now set eps=max(k,0)/psi instead of k/psi
     - in function _etat(), make sure etat is always positive
   * in model/fluid/_Favre*/fluid_source.c
     - in find_Stnorm(), for OMEGA1988 model, make sure psi is always positive
       in determining the source term
     - in find_dStnorm_dU(), for OMEGA1988 model, make sure psi and k are always
       positive in determining the jacobian terms


2015 NOV 26
   * in bin
     - renamed the control.* files to *.wrp
   * in tools
     - added substr-wrpfiles.sh
   * in USAGE
     - renamed .warp to .wrp
   * renamed Pecletmin to Pecletmax everywhere
   * in model/fluid/*/fluid_conv.c
     - in condition_Lambda(), made both convective and acoustic waves function of SPECTRALRADIUS
       (convective waves used to be always function of sigma, whether SPECTRALRADIUS was TRUE or not)  
     - in find_conditioned_Lambda_from_jacvars(), changed the way the convective waves are conditioned 
       (far more robust now)
     - in find_conditioned_Lambda_from_jacvars_denom(), changed SPECTRALRADIUS to TRUE
     - in _Pe_from_jacvars(), changed the definition of the Peclet number: now function of Vstar, 
       and not of the sound speed
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default value for zetaAc from 0.2 to 0.5
       and for zetaAa from 0.2 to 0.0 


2015 NOV 25
   * in model/fluid/_Navier-Stokes/fluid.c
     - in function _T(), fixed a bug on how T is determined form eint when node is suspended
   * in cycle/res/conv/.config
     - set _FDS_2o_Parent_MUSCL to experimental
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default value for zetaAd from 0.2 to 1e-4
       and for Pecletmin from 100.0 to 20.0 


2015 NOV 23
   * in bin
     - changed a few control files


2015 NOV 19
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - changed the default limiter to minmod


2015 NOV 17
   * in model/fluid/*/fluid_conv.c
     - in function find_jacvars_at_interface_Parent_average(), changed the averaging at the interface
       for the velocity components: now, take the minmod instead of the geometric average


2015 NOV 13
   * in model/fluid/*/fluid_conv.c
     - in function condition_Lambda(), made conditioning linear (i.e. fabs(Lambda)+zeta*a
       instead of sqrt(sqr(Lambda)+zeta*sqr(a))
     - in function condition_Lambda(), made convective waves conditioning function of
       spectral radius instead of sound speed


2015 NOV 12
   * in cycle/res/conv/_FDS_2o_Parent_MUSCL/convres.c
     - in function _f_cross() got rid of absolute value of fact (should always be positive anyway)
     - got rid of function minmodmulti()


2015 NOV 11
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in function _f_cross(), modified the way the terms are limited by not taking the
       absolute value of fact (fact should always be positive anyway)
     - in function _f_cross() got rid of CONDITION_BDRY_NODES
     - got rid of function maxmag2()
   * in cycle/res/conv/_FDS_2o_Parent_MUSCL/convres.c
     - in function _f_cross() got rid of CONDITION_BDRY_NODES
     - got rid of function avg2()


2015 NOV 06
   * in model/emfield/doc/report.tex
     - added section on more general way of finding surface charge on dielectrics


2015 NOV 05
   * in model/ebeam/doc/report.tex
     - added section on ebeam kinetic model 
   * in model/emfield/doc/report.tex
     - added section on finding the dielectric boundary condition when dielectric becomes charged


2015 OCT 22
   * in cycle/res/conv/_FDS_1o_Parent/convres.c
     - in function find_Fstar_interface(), inverted the order of the flux jacobians multiplying
       the cross derivatives
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in function find_Fstar_interface(), inverted the order of the flux jacobians multiplying
       the cross derivatives
   * in cycle/res/conv/_FDS_2o_Parent_MUSCL/convres.c
     - in function find_Fstar_interface(), inverted the order of the flux jacobians multiplying
       the cross derivatives
       --> Yields much higher resolution for subsonic flows
       --> Does not affect much supersonic flows


2015 OCT 21
   * in cycle/res/share/res_share.c
     - added Venkatakrishnan limiter


2015 OCT 19
   * in cycle/res/conv/_FDS_1o_Parent/convres.c
     - updated the multidimensional FDS to using primitive variables instead of conservative
       variables within the cross derivatives


2015 OCT 18
   * in bin/
     - some changes to the control files


2015 OCT 17
   * in model/fluid/*/fluid_conv.c
     - in function find_conditioned_Lambda_from_jacvars_denom(), now call condition_Lambda() with
       SPECTRAL_RADIUS set to FALSE rather than TRUE
   * in model/fluid/*/fluid_bdry.c
     - added function is_node_bdry_no_cross()
   * in model/fluid/_drift-diffusion/fluid.c
     - added function is_node_bdry_no_cross()
     - added function is_bdry_interface_equal_to_bdry_node()
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default setting
       for zetaAa (now equal to zetaAc instead of 0.2) and for zetaAi (now equal to 0.2 instead of 0.001)


2015 OCT 16c
   * in cycle/res/conv/_FDS_2o_Parent_MUSCL/convres.c
     - tested new things but nothing should have changed since version 15OCT16b


2015 OCT 16b
   * in cycle/res/conv/_FDS_2o_Parent_MUSCL/convres.c
     - in _f_cross(), changed the limiter
       --> Seems to work great, but needs more testing
 

2015 OCT 16a
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - added function condition_Lambda_denom() for testing purposes
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - added flag SECOND_ORDER_TERMS and made associated modifications within functions
   * in cycle/res/conv/_FDS_2o_MUSCL/convres.c
     - changed default value for LIMITER to LIMITER_MINMOD from LIMITER_VANLEER
       --> no convergence hang
   * in cycle/res/conv/
     - added directory _FDS_2o_Parent_MUSCL


2015 OCT 15b
   * in src/bdry.c
     - just before function adjust_node_type(), added a #if condition checking that
       bb must be equal to 2


2015 OCT 15a
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - in function _fBC2(), reverted the stencil to pre 15OCT10 version (less compressive)
       --> the more compressive stencil gave convergence hangs in 3D


2015 OCT 14
   * in cycle/_multizone_marching/cycle.c
     - in function runtime_actions_cycle_specific(), fixed a bug: gl->cycle.varphiverge
       should be called with a SOAP_get_argum_double() not SOAP_get_argum_long()
     - in function runtime_actions_cycle_specific(), fixed another bug:
       at the end of the function, find_ximax() should be called with STORE_POS set to
       TRUE not FALSE
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - in function is_node_bdry_no_cross(), added the boundary type "0" to the boundaries
       that should have no cross derivatives terms
       --> Need more testing


2015 OCT 13
   * in src/bdry.c
     - in function adjust_node_type(), commented out the last operation
       of turning the corner nodes (in 3D) to outflow
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - added function is_node_bdry_no_cross()
       --> turns off cross-diffusion terms on certain types of bdry nodes
       --> needs more testing
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in function _f_cross(), implemented call to is_node_bdry_no_cross()


2015 OCT 12
   * in bin
     - added control.injector to test 3D injector flows


2015 OCT 11
   * in bin
     - added control.discharge* 
     - added control.dielectrics*


2015 OCT 10
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - renamed _f_cross_2() to _f_cross()
   * in model/fluid/_Navier-Stokes/fluid_bdry.c
     - in function _fBC2(), changed the stencil and made it a bit more compressive


2015 OCT 08a
   * in bin/
     - added control.faraday and control.beam


2015 OCT 07
   * in bin/control.ramp
     - improved it slightly


2015 OCT 06
   * in bin/control.ramp
     - made it simpler, for smoother and easier runs


2015 OCT 05
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in function f_cross_2(), changed algorithm to make sure that all non inner
       nodes obtain their properties from nearest inner nodes
     - deleted find_Fstar_interface_original()
     - in find_Fstar_interface(), now call f_cross_2() instead of f_cross() for
       3D fluxes
       --> fixed a problem encountered when solving ramp injector due to corner nodes
           having much different temperature than other nearby boundary nodes
       --> corner nodes are problematic because their properties
           are copied from near inner nodes rather than treated as other boundary nodes
 

2015 OCT 04
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - added function _f_cross_2() which is the same as _f_cross() but has
       the type of node (INNNER or not) as arguments
       --> for now, yields same results as _f_cross()
       --> but can be used later maybe if there are convergence hangs
     - changed CNTBDRYMAX from 0 to 999
       --> now always computes the cross-diffusion terms at boundaries
       --> this seems to be necessary, but needs further testing 
       --> does not lead to convergence hangs (previous observation on OCT 03b was 
           premature and not correct)


2015 OCT 03b
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - set CNTBDRYMAX to 0 instead of 4 because it was giving convergence hangs 
       for some 2D problems (in 3D, it was set to 0 already)
      

2015 OCT 03
   * in src/main.c
     - in main(), got rid of "gl.iter=1;" after solution is converged 


2015 OCT 02b
   * in model/fluid/*/fluid_conv.c
     - in function f_Parent_average(), now take the min between the two determinative properties
       instead of a blend between a min function and a geometric average function
       --> leads to fully monotone solutions even when used with a Roe averaging for the
           normal 2nd derivatives
       --> blending a geometric average is not needed anymore to avoid carbuncle phenomenon
           because Parent averaging is only used for the cross derivatives, not for the normal
           2nd derivatives
       --> needs further checking (perhaps this leads to convergence hangs?)


2015 OCT 02a
   * in src/common.c
     - in _zone_intersection(), implemented checks that lead to a fatal_error should no
       intersection be found between both zones
   * in cycle/share/cycle_share.c
     - in update_runtime_codex_vars_except_xi_from_gl(), added variables
       window.is, window.ie
   * in src/bdry.c
     - in read_bdry_actions(), added some code to check that the bandwidth of the Cut domain
       is at least 3 nodes in each dimension. If not, do a fatal_error()
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in find_jacvars_at_interface_normal(), changed the averaging type from Parent to Roe
       --> for some reason, Parent averaging on the normal 2nd derivatives leads to issues
           in 3D ramp injector problems (perhaps in boundary layer)
       --> needs verification
   * in cycle/ts/conv
     - renamed _FDS_1o to _FDS_1o_Roe
     - added _FDS_1o_Parent


2015 OCT 01
   * in model/fluid/_Favre-Reynolds_plasma/fluid.c
     - in function write_model_fluid_template(), changed default values
       for N2VIBJOULEHEATING and EMSOURCE
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - within function find_Fstar_interface(), added 3D part of the algorithm
       --> NEEDS TESTING


2015 SEP 30
   * in src/data.c
     - in read_data_file_interpolation(), changed the calls to init_node_fluid()
       and init_node_emfield() to include DEFAULT_INITVAR and DEFAULT_INITVAR_EMF
       instead of the default "1"
   * in model/emfield/*/emfield.hh
     - added constant DEFAULT_INITVAR_EMF
   * in model/fluid/*/fluid.hh
     - added constant DEFAULT_INITVAR
   * in model/fluid/*/fluid_init.c
     - added find_default_initvar()
     - removed interpolate_between_nodes()
   * in src/post.c
     - added interpolate_between_nodes() as static function
 

2015 SEP 29
   * in src/data.c, src/data.h, src/init.c, src/main.c
     - made modifications to interpolation file related code so that the
       interpolation data file is handled in the same way as the ascii data file
   * in src/data.c
     - in function read_data_file_interpolation(), fixed bug related to inverted matrix
       not being initialized
     - in function read_data_file_interpolation(), fixed bug related to matrices not
       being freed from memory
     - in function read_data_file_interpolation(), added emfield data
     - in function write_data_file_interpolation(), added emfield data
   * in model/emfield/*/emfield.c
     - added find_default_initvar_emf()


2015 SEP 28
   * in src/data.c
     - ported function write_interpolation_file() from warp-nomhd 
     - ported function read_interpolation_file() from warp-nomhd
   * in src/data.h
     - modified input_t to include interpolation variables
   * in src/init.c
     - in function read_init_actions(), added call to read_interpolation_file
   * in src/main.c
     - in main(), made modifications to include interpolation files read and write


2015 SEP 27
   * in model/fluid/_drift-diffusion/fluid.c
     - added function find_jacvars_at_interface_Parent_average()
     - added function find_Uprime()
     - added function find_dUstar_dUprime_from_jacvars()
   * in model/fluid/_Favre-Reynolds_Tv/fluid_conv.c
     - added function find_jacvars_at_interface_Parent_average()
     - added function find_Uprime()
     - added function find_dUstar_dUprime_from_jacvars()
   * in model/fluid/_Favre-Reynolds_plasma/fluid_conv.c
     - added function find_jacvars_at_interface_Parent_average()
     - added function find_Uprime()
     - added function find_dUstar_dUprime_from_jacvars()
   * in src/common.c
     - in functions find_numerical_jacobian*(), made dU function of Uref only


2015 SEP 26b
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - in find_jacvars_at_interface_Parent_average(), renamed fact to Mtheta
     - added function _f_Parent_average() to simplify find_jacvars_at_interface_Parent_average()
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - in find_jacvars_at_interface_Parent_average(), added computation of Vtheta and Mtheta
     - added function _f_Parent_average() which blends a min function with a geometric average
       for the Parent average of the determinative properties


2015 SEP 26a
   * in src/test.c
     - added new function find_jacvars_at_interface()
     - in various functions, substituted find_jacvars_at_interface_Roe_average 
       by find_jacvars_at_interface()
     - in function test_L(), got rid of the testing part that involved finding L using
       invert_matrix() from Linv
       --> invert_matrix() is not general enough to invert the new eigenvectors
     - added function test_jacvars()
     - within main() added call to test_jacvars() 
   * in src/common.c
     - in function invert_matrix(), added some asserts to check if the matrix can be inverted 
       by the current algorithm 
       --> need to improve this function in the future and make it more general
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - added function find_jacvars_at_interface_Parent_average()
       --> works awesome


2015 SEP 25
   * in model/fluid/_Favre-Reynolds/fluid_conv.c
     - added function find_Uprime() 
     - added function find_dUstar_dUprime_from_jacvars() 


2015 SEP 24
   * in model/fluid
     - renamed _Favre-Reynolds_drift-diffusion to _Favre-Reynolds_plasma
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - got rid of testing functions find_Uprime*() and find_dUstar_dUprime_from_jacvars*() 
       except the strategy that was optimal
   * in src/test.c   
     - added function test_dUstar_dUprime()
     - in main(), added call to test_dUstar_dUprime
   * in model/_model.h
     - added function declarations for find_Uprime(), find_dUstar_dUprime_from_jacvars(),
       and find_jacvars_at_interface_Parent_average()
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - got rid of redundant function declarations for find_Uprime(), find_dUstar_dUprime_from_jacvars(),
       and find_jacvars_at_interface_Parent_average()


2015 SEP 23
   * in cycle/res/_generic/res.c
     - changed the limiter for the D*U flux to minmod instead of van Leer
       --> better to avoid compressive limiters throughout the code as they lead to unreliable behavior
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - modified the function find_jacvars_at_interface_Parent_average() and added
       an average that is a blend of geometric average and min functions
       --> is not sensitive to carbuncles and results in almost monotonic solutions
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - modified the calls to find_jacvars_at_interface_Parent_average() to include metrics
       within the parameters


2015 SEP 22
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - in find_jacvars_at_interface_Parent_average(), changed the averaging so that rho and a2
       are set to the minimum of their respective left and right states
       --> makes the solution almost perfectly monotonic at hypervelocities
       --> but accentuates carbuncle phenomenon 


2015 SEP 21b
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - added new function find_jacvars_at_interface_Parent_average()
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - added new function find_jacvars_at_interface_cross() which calls 
       find_jacvars_at_interface_Parent_average() to find properties at interface 
     - renamed find_jacvars_at_interface() to find_jacvars_at_interface_normal()
     - altered other functions so that they call find_jacvars_at_interface_cross()
       or find_jacvars_at_interface_normal() instead of find_jacvars_at_interface()
   

2015 SEP 21a
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - implemented new functions find_Uprimestar_given_metrics*() and find_dU_dUprime_from_jacvars*()
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - renamed find_Fstar_interface() to find_Fstar_interface_good()  
     - added find_Fstar_interface() which differs from find_Fstar_interface_good() by cross differencing
       primitive variables instead of the conserved variables
       --> makes a big difference for hypersonic flows  
     - in find_jacvars_at_interface(), changed Roe averaging for pos averaging 
       --> makes a big difference for hypersonic flows


2015 SEP 19b
   * in cycle/ts/
     - renamed implicit_block to block_implicit
     - renamed IMPLICIT_BLOCK to BLOCK_IMPLICIT
   * in src/common.h
     - renamed IMPLICIT_BLOCK to BLOCK_IMPLICIT


2015 SEP 19a
   * in model/fluid/*/fluid_conv.c
     - in condition_Lambda(), changed the conditioning of the waves: now the dissipation is either
       only function of the sound speed for the matrices on the numerator of the flux function or of
       the spectral radius for the matrices on the denominator of the flux function
   * in model/fluid/*/fluid.c
     - in function write_model_fluid_template(), changed the default values for zetaAc, zetaAa, zetaAi
       to 0.2, 0.2, and 0.001 respectively
   

2015 SEP 18b
   * in model/fluid/*/*
     - renamed Pemin to Pecletmin
   * compared to warp.15sep16b, this version oscillated more for hyper test case.
     --> INVESTIGATE 


2015 SEP 18a
   * in model/fluid/_Favre-Reynolds*/fluid.c
     - in function write_model_fluid_template(), added Pemin
     - in function read_model_fluid_actions(), added Pemin
     - in function write_model_fluid_template(), changed default value of kdiv to 1e0
   * in model/fluid/_Favre-Reynolds*/fluid_conv.c
     - made modifications to find_jacvars*() so that T is stored in jacvars rather than eta
     - modified _Pe_from_jacvars() so that it finds Pe from T instead of from eta   
     - made modifications to find_jacvars*() so that Pemin is initialized correctly
     - moved functions condition_Lambda(), find_conditioned_Lambda_from_jacvars(),
       find_conditioned_Lambda_from_jacvars_denom(), from cycle_share.c
     - modified find_conditioned_Lambda_from_jacvars() to make it function of Pemin 
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - in function _Pe_from_jacvars(), made modification to ensure that eta is always positive


2015 SEP 17b
   * renamed 
     - FindLfromJacVars_Eigenset1 --> find_L_from_jacvars_eigenset1
     - Rearrange_metrics_eigenset2 --> rearrange_metrics_eigenset2
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - got rid of Pe from jacvars
     - added eta in jacvars
     - added function _Pe_from_jacvars()
   * in model/fluid/_Favre-Reynolds*/fluid_conv.c 
     - added eta in jacvars
     - added function _Pe_from_jacvars()
     - in find_jacvars*(), added determination of eta within jacvars
   * in model/fluid/_drift-diffusion/fluid.c
     - added "dummy" function _Pe_from_jacvars()


2015 SEP 17a
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - removed functions find_jacvars_*_old()
     - added static function _Pe()
     - made changes to functions find_jacvars() to include the Peclet number within jacvars
   * in cycle/share/cycle_share.c
     - in function find_conditioned_Lambda_from_jacvars(), made fact function of the Peclet number


2015 SEP 16b
   * in cycle/share/cycle_share.c
     - in function find_conditioned_Lambda_from_jacvars(), made further alterations to how zetaAc is limited
       --> works almost awesome
       --> try to improve it a bit more tomorrow by setting it to zero when it gets very close to zero


2015 SEP 16a
   * in cycle/share/cycle_share.c
     - in function find_conditioned_Lambda_from_jacvars(), made alterations to how zetaAc is limited
       in regions with strong viscous effects


2015 SEP 15b
   * in model/fluid/_Navier-Stokes/fluid.c
     - in functions write_model_fluid_template(), and read_model_fluid_actions(),
       and find_Kstar(), renamed k to kappa
   * in bin
     - renamed k to kappa in appropriate control files
   * in cycle/ts/conv/*/convts.c
     - added #include <cycle/share/cycle_share.h>
   * in cycle/share/cycle_share.c
     - replaced find_conditioned_Lambda_from_jacvars() from find_conditioned_Lambda_from_jacvars_local()
       in cycle/res/conv/_FDS_2o_Parent/convres.c
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - removed find_conditioned_Lambda_from_jacvars_local()


2015 SEP 15a
   * in model/fluid/_Navier-Stokes/fluid_conv.c
     - in function find_L_from_jacvars(), renamed local variable V to v (here v stands for V_y)
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - added function find_conditioned_Lambda_from_jacvars_local()
       -> changes the conditioning of the convective ways such that they become zero
          where the physical dissipation is high and/or where the velocity component is much
          less than the speed
       -> seems to work great but needs further checking
       -> vary inflow rho and V, and T over a wide range
          

2015 SEP 14a
   * in model/fluid/*/fluid.c and in model/fluid/*/fluid_conv.c 
     - got rid of function find_Lambda_prime_from_jacvars()
     - got rid of function find_Lambda_prime_from_jacvars_2()
   * renamed 
     - find_Lambda_prime_from_jacvars -> find_conditioned_Lambda_from_jacvars
     - find_Lambda_prime_from_jacvars_2 -> find_conditioned_Lambda_from_jacvars_denom
   * in cycle/share/cycle_share.c
     - wrote new function find_conditioned_Lambda_from_jacvars()
       -> Differs from previous find_Lambda_prime_from_jacvars by adding zeta*sigma instead
          of zeta*a to the eigenvalues with sigma being the spectral radius 
     - wrote new function find_conditioned_Lambda_from_jacvars_denom()
     - wrote new function condition_Lambda()
   * in bin/control*
     - changed the default values for zeta's to 0.1
   * the FDS_2o_Parent scheme now works great
     - converges for all test cases even with CROSS_DIFFUSION_FACT=1.0
     - now need to limit eigenvalue conditioning in boundary layers somehow


2015 SEP 12a
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - implemented new theory in _f_cross() where the cross-dissipation terms
       vanish in smooth flow regions
     - when CROSS_DIFFUSION_FACT is set to 0.5, this converges flawlessly on all test cases
       but has somewhat non-optimal resolution for sinewall case
     - when CROSS_DIFFUSION_FACT is set to 1.0, the resolution is optimal for the sinewall
       case
     - Need to further improve _f_cross() and limit it somehow in discontinuous regions


2015 SEP 11b
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - fixed some bugs 
     - works great now


2015 SEP 11a
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - rewrote the entire module starting from _FDS_1o_Parent this time
       (instead of _FDS_2o_Yee)
     - works better near the surfaces 


2015 SEP 10b
   * in model/fluid/_drift-diffusion/fluid.c
     - added missing function find_Lambda_prime_from_jacvars_2()
 

2015 SEP 10a
   * renamed
     - FindFint_ --> find_Fstar_interface_
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - Implemented new strategy -- new 2o scheme is now simply awesome


2015 SEP 09b
   * in src/common.h
     - in npbs_t, added Um2
   * in src/data.h
     - in input_t, added *name_m2 and M2 
   * in src/data.c
     - include Um2 near Um1 and M2 near M1 where appropriate
   * in src/main.c
     - added call for -im2 flag


2015 SEP 08
   * in cycle/res/conv/_FDS_2o_Parent/cycle.c
     - made some changes
    

2015 SEP 07
   * renamed 
     - multiply_two_matrices -> multiply_matrix_and_matrix
   * in cycle/res/conv/_FDS_1o_Parent/convres.c
     - added a new temporary flux function that includes a minmod of the cross derivative terms
       for improved monotonicity at hypervelocities


2015 SEP 07a
   * in bin/control.3s_discharge_2D
     - small changes


2015 SEP 06
   * in src/main.c
     - in function main(), improved the layout of the screen output when warp is 
       run without flags or with the wrong set of flags
   * in config/config.c
     - got rid of function print_banner() and all associated calls
   * in src/common.h
     - in gl_t, made sure that the dt variable is only declared once (used to be declared        
       by both the _explicity_constant_dt module and by the UNSTEADY flag
   * in cycle/ts
     - moved _explicit_constant_dt to old
     - altered .config and Makefile accordingly 
   * in cycle/_standard/cycle.c
     - in function runtime_actions_cycle_specific(), added action UpdateFluid2()
   * in cycle/*/cycle.c
     - in function runtime_actions_cycle_specific(), added initialization 
       of gl->LOCAL_TIME_STEPPING
   * in src/common.h
     - in definition of gl_t, added variables LOCAL_TIME_STEPPING and dtau
   * in cycle/share/cycle_share.c
     - in function find_dtau(), added fixed pseudotime step should LOCAL_TIME_STEPPING
       be set to TRUE
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - in find_Fstar_interface_2o(), made flux function of dtau should UNSTEADY flag
       not be set


2015 SEP 05
   * in model/fluid/.config
     - moved _drift-diffusion_new to experimental
       --> will work on it later perhaps, it's dubious linking the potential to the 
           other equations will yield an advantage other than simplifying the control file..
   * renamed
     - update_runtime_codex_variables_from_gl_2 --> update_runtime_codex_xi_from_gl
     - update_runtime_codex_variables_from_gl_1 --> update_runtime_codex_vars_except_xi_from_gl  
   * in cycle/_standard/cycle.c, cycle/_multizone/cycle.c, src/bdry.c
     - renamed _zone_intersection_old() to _zone_intersection()
   * in src/common.c
     - renamed function _zone_intersection() to _zone_intersection_experimental()
     - renamed function _zone_intersection_old() to _zone_intersection()
     - in function _zone_intersection(), added some asserts to make sure a valid zone of intersection
       is found
   * in cycle/share/cycle_share.c
     - added the function read_cycle() 
       --> used to be part of cycle/*/cycle.c
   * in cycle/*/cycle.c
     - added the function init_cycle() which is called by read_cycle() in cycle_share.c


2015 SEP 04
   * in model/fluid/_drift-diffusion_new/fluid.c
     - updated all functions (for the new phi flux component)
   * in model/fluid/_drift-diffusion/fluid.c
     - in function find_Ustar_from_musclvars(), fixed a bug: the loop went from 1 to ns
       but should have gone from 1 to nf


2015 SEP 04a
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - made changes to the flux function 
   

2015 SEP 03
   * renamed find_Ustar_2 to find_Ustar_given_metrics
   * added directory _drift-diffusion_new in model/fluid
   * in model/fluid/_drift-diffusion_new/fluid.c
     - updated the functions until line 940  
   * in model/fluid/_drift-diffusion/fluid.c
     - in function find_Gamma(), fixed a bug related to the electron energy transport equation
       --> row==ns+nd+4 should here be row==ns
 

2015 SEP 03a
   * in bin
     - added control.unsteady and rununsteady.soap


2015 SEP 02
   * in cycle/_standard/cycle.c
     - in the function runtime_actions_cycle_specific(), added a new action
       UpdateFluidEmfield() which updates both the fluid and the emfield equations as if
       they were integrated in coupled form 
       --> seems to work well, but needs more testing to be sure this is OK


2015 SEP 02a
   * in cycle/res/conv
     - added the directory _FDS_2o_Parent
   * in cycle/res/conv/_FDS_2o_Parent/convres.c
     - implemented second-order terms 
     - implemented a limiter function blending the first-order with the second-order terms


2015 SEP 01
   * in cycle
     - renamed _marching_window_multizone to _multizone_marching
   * in cycle/_multizone_marching/cycle.c
     - made modifications to make them compatible with the latest approach of calling
       UpdateFluid() from within the Runtime() module
   * in cycle/share/cycle_share.c  
     - in function process_code_runtime(), took away the CONVERGED check and moved it to cycle.c
       because it is cycle dependent
   * in cycle/*/cycle.c
     - in function perform_one_iteration(), added CONVERGED check from cycle_share.c 
   * in cycle/doc/report.tex
     - changed the method name "Marching Window / Multizone" to "multizone-marching"


2015 AUG 31
   * in cycle/share/cycle_share.c
     - split solve_multizone() in 3 functions
   * in cycle/_multizone/cycle.c
     - now call 3 separate functions instead of solve_multizone()
   --> STILL NEED TO CHANGE MARCHING_MULTIZONE CYCLE


2015 AUG 30
   * in cycle/share/cycle_share.c
     - moved write_runtime_template() to cycle.c
     - split runtime_codex_variables_from_gl in two functions
     - added solve_multizone_reverse() to be used with EMF
       --> NEEDS IMPROVEMENTS
     - in process_code_runtime, added checks for convergence, taken from cycle.c
   * in cycle/_standard/cycle.c 
     - various bug fixes related to the new formulation of the runtime module
   * in cycle/_multizone/cycle.c
     - various bug fixes related to the new formulation of the runtime module
       --> STILL NEEDS TESTING


2015 AUG 29
   * in src/bdry.c
     - in read_bdry_actions(), improved the fatal_error messages to give better feedback
   * in src/common.h
     - in gl_t added BDRY_FLUID_READ, BDRY_EMFIELD_READ
   * renamed controlactionname_cycle to _CYCLE_ACTIONNAME
   * in src/control.c
     - in function read_control(), made changes to handle the new actionname for the cycle module  
       ("Cycle()" instead of "CycleStandard()"..)
   * in cycle/share/cycle_share.c
     - in process_code_runtime(), added call to process_code_runtime_cycle_specific()
     - in write_runtime_template, added call to write_runtime_template_cycle_specific()
     - added write_runtime_template()
   * in cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - added function process_code_runtime_cycle_specific()
     - added function write_runtime_template_cycle_specific()
     - removed write_runtime_template()
   * in cycle/_multizone/cycle.c
     - in perform_one_iteration(), moved the location of process_code_runtime() 
       --> NEEDS CHECKING AND IMPROVEMENTS
       --> DO THE SAME MODIFICATION TO MARCHING MULTIZONE CYCLE


2015 AUG 28
   * in model/fluid/_Favre-Reynolds*/fluid_post.c 
     - in function find_post_variable_name_fluid() changed the name of the post variable c_ to w_
     - in function find_post_variable_name_fluid() changed the name of the post variable eps to epsilon
     - renamed c1 to w1
     - renamed ce1 to we1 
   * in cycle/res/doc/report.tex
     - changed the section titles so that they match the directory names in cycle/res/doc/conv 
   * in model/emfield/*/emfield.c
     - in function update_bdry_emfield(), fixed a bug related to phi at the dielectrics surfaces:
       the loop should go from 1 to ncs not from 1 to ns
   * in model/chem/*/chem.hh
     - added documentation related to how the species should be ordered: 1. electrons, 2. negative ions,
       3. positive ions, 4. neutrals
   * renamed update_model_mem_emf to update_prim_emf_mem_in_zone
   * in model/emfield/*
     - took away the bool INIT parameter from find_prim_emf_mem_1, find_prim_emf_mem_2, find_prim_emf_mem_3 
   * in cycle/share/cycle_share.c
     - took away the bool INIT parameter from find_prim_emf_mem_1, find_prim_emf_mem_2, find_prim_emf_mem_3
   * in src/data.c
     - in read_data_file(), took away calls to find_prim_emf_mem_1 and find_prim_emf_mem_2
   * in src/common.h
     - in gl_t added INIT_FLUID_READ, INIT_EMFIELD_READ
   * in src/init.c
     - made changes to call fatal_error should INIT_FLUID_READ or INIT_EMFIELD_READ not be TRUE when
       they should be


2015 AUG 27
   * in cycle/ts/doc
     - altered report.tex and all.bib to include a reference to the book by Oran and Boris
   * in model/fluid
     - renamed _Favre-Reynolds_plasma to _Favre-Reynolds_drift-diffusion
   * in cycle/res/conv
     - renamed most subdirectories
   * in model/_generic/model.c
     - in read_model() added checks for MODEL_FLUID_READ, MODEL_EMFIELD_READ, MODEL_EBEAM_READ
   * in src/control.c
     - in function read_control(), took away checks for MODEL_FLUID_READ, MODEL_EMFIELD_READ, 
       MODEL_EBEAM_READ


2015 AUG 26
   * in src/common.h
     - in structure gl_t, added MODEL_FLUID_READ, CYCLE_FLUID_READ, 
       MODEL_EMFIELD_READ, CYCLE_EMFIELD_READ, MODEL_EBEAM_READ
   * in src/control.c
     - in function read_control(), prior to reading control file initialized 
       MODEL_FLUID_READ and CYCLE_FLUID_READ to FALSE
     - in function read_control(), after control file is read, check if MODEL_FLUID_READ
       or CYCLE_FLUID_READ are FALSE; if so, call a fatal_error()
   * in model/fluid/*/fluid.c
     - in function read_cycle_fluid_actions(), set gl->CYCLE_FLUID_READ to TRUE
     - in function read_model_fluid_actions(), set gl->MODEL_FLUID_READ to TRUE
   * in model/emfield/*/emfield.c
     - in function read_cycle_emfield_actions(), set gl->CYCLE_EMFIELD_READ to TRUE
     - in function read_model_emfield_actions(), set gl->MODEL_EMFIELD_READ to TRUE
   * in model/ebeam/*/ebeam.c
     - in read_model_ebeam_actions(), set gl->MODEL_EBEAM_READ to TRUE
     - in read_model_ebeam_actions(), now function of _EBEAM_ACTIONNAME
   * in model/ebeam/*/ebeam.hh
     - added definition of _EBEAM_ACTIONNAME
    


2015 AUG 25
   * in model/fluid/_Favre-Reynolds_plasma/fluid_plasma.c
     - added function _Emag_interface()
     - modified function _Te_local() so that the smoothing operator is function of Emag at
       4 interfaces rather than 3 nodes
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in update_bdry_wall(), implemented the "ratchet" strategy with Ethresholdbdry set to 1e-2 V/m
       --> needs checking
   * in model/fluid/_drift-diffusion/fluid.c
     - changed Ethresholdbdry from 1e3 to 1e-2 V/m


2015 AUG 24
   * in model/emfield/_Ohm_generalized/emfield.c
     - set NEAR_BDRY_INNER_NODES_WITH_ZERO_B to 1 instead of 2


2015 AUG 23
   * in model/emfield/_Ohm/emfield.c
     - added function find_Ek_at_interface()
   * in model/fluid/_drift-diffusion/fluid.c
     - in the new function _Temem() made the smoothing operator function of Emag at
       4 interfaces rather than just 2
       --> NEEDS TESTING
  

2015 AUG 22
   * renamed PRIMMEM to FLUIDPRIMMEM
   * in model/fluid/_drift-diffusion/fluid.c
     - added reformat_Te() function
     - modified find_U() and find_prim_fluid() functions to call reformat_Te()
     - modified write_model_fluid_template() to add Temin and Temax
     - modified read_model_fluid_actions() to add Temin and Temax
     - added function _Emag_interface()
     - added function _Temem_new function of _Emag_interface()
       --> NEEDS TESTING
   * in model/emfield/*/emfield.c
     - in write_model_emfield_template(), changed the default value for Te_buffer
       from 200 K to 0 K
     - in write_model_emfield_template(), changed default value for Jmax from 1000
       to 20000 A/m2

  
2015 AUG 21
   * several filed
     - renamed fluxes to "flux components" in the comments 


2015 AUG 20
   * in src/common.c
     - in function is_node_inner_within_n_nodes_of_bdry(), got rid of the fatal_error calls
       and replaced them with asserts
   * in model/emfield/_Ohm_generalized/emfield.hh
     - changed the name of actionname from Ohm to OhmGeneralized
   * in model/fluid/_Favre-Reynolds_plasma/fluid_bdry.c
     - in function update_bdry_wall(), changed the charged species boundary condition to be
       more in sync with those in drift-diffusion/fluid.c
   * in model/fluid/_drift-diffusion/fluid.c
     - in function update_bdry_wall(), implemented a "ratchet" approach to prevent too-often switching
       from cathode to anode and vice-versa at electrode


2015 AUG 19
   * in src/common.c
     - added function is_node_inner_within_n_nodes_of_bdry()
   * in model/emfield/_Ohm_generalized/emfield.c
     - added constant NEAR_BDRY_INNER_NODES_WITH_ZERO_B 
     - in function set_B_to_zero_near_bdry, call is_node_inner_within_n_nodes_of_bdry() 
       instead of is_node_inner_near_bdry()
     - in function find_DeltaVk_from_mu(), call is_node_inner_within_n_nodes_of_bdry() 
       instead of is_node_inner_near_bdry()
   * in model/fluid/_drift-diffusion/fluid.c
     - simplified the formulation of function update_bdry_wall() but without changing what it does
   * in bin/Makefile
     - added "default" option so that a simple make wouldn't clean the directory


2015 AUG 18
   * in model/fluid/_drift-diffusion/fluid.c
     - in function update_bdry_wall(), fixed the way the neutrals number density
       is specified at the surface: used to be fixed, now is extrapolated from
       the nearest inner node 
        

2015 AUG 17
   * in model/fluid/_drift-diffusion/fluid.c
     - in function update_bdry_wall(), now take the max between C and B nodes
       when determining Ne at anode
     - fixed a bug in determining Ne at anode when taking the max between C and B Nodes


2015 AUG 16
   * in bin
     - added and modified control files (for testing)  
   * in model/fluid/_drift-diffusion/fluid.c
     - changed Ethresholdbdry to 1e2


2015 AUG 15
   * in model/fluid
     - renamed _Favre-Reynolds_mix to _Favre-Reynolds
     - renamed _Favre-Reynolds_mix_Tv to _Favre-Reynolds_Tv
     - renamed _Favre-Reynolds_mix_Tv_Te to _Favre-Reynolds_plasma
   * renamed modele to prime
   * renamed find_model to find_prim
   * renamed MODELMEM to PRIMMEM
   * renamed update_bdry_prim_emf to update_bdry_emfield
   * renamed update_bdry_prim to update_bdry_fluid
   * in model/fluid/_drift-diffusion/fluid.c
     - added update_bdry_outflow()
     - in function update_bdry_prim(), added call to update_bdry_outflow if BDRYDIRECFOUND not true
   * renamed find_prim_mem_emf to find_prim_emfield_mem
   * renamed find_prim_mem to find_prim_fluid_mem
   * renamed find_prim to find_prim_fluid
   * renamed write_init_types to write_init_types_fluid
   * renamed write_bdry_types to write_bdry_types_fluid
   * renamed write_bdry_types_emf to write_bdry_types_emfield
   * renamed write_init_types_emf to write_init_types_emfield
   * renamed find_post_variable_name_emf to find_post_variable_name_emfield
   * renamed init_node to init_node_fluid
   * renamed init_node_emf to init_node_emfield


2015 AUG 14b
   * in cycle/res/conv
     - deleted all */doc directories
     - modified all */Makefile accordingly
   * improved tools/substr-Makefile.sh  
   * renamed prim to model
     - changed all makefiles, .h, .hh and .c files accordingly


2015 AUG 14
   * renamed functions
     - update_dU_emf_tdma to update_dUstar_emf_tdma
     - update_dU_emf_pdma to update_dUstar_emf_pdma
     - update_dU_emf update_dUstar_emf
   * in cycle/share/cycle_share.c
     - in function update_dUstar_emf_tdma(), got rid of fatal_error if theta is equal to 2
       (not needed anymore because the function works fine in 3D)
   * in prim/fluid/_drift-diffusion/fluid.c
     - in update_bdry_wall(), made the switch from cathode to anode function of Ethresholdbdry
       with the latter set as a constant at the beginning of the file
   * in lib/gridg
     - removed test and test2 directories
   * in bin
     - cleaned up all example problems (not useful anymore because they used deprecated
       control files)
   * moved test control files from src to bin


2015 AUG 13
   * in cycle/*/cycle.c
     - in function write_cycle_template() changed the default sigma from 0.0 to 0.5
   * in prim/fluid/_Navier-Stokes/fluid.c and prim/fluid/_Favre-Reynolds*/fluid.c
     - in function write_prim_fluid_template(), improved the comments for zetaAa, zetaAc, zetaAi
   * in prim/fluid/doc/Favre_Averaging/report.tex
     - fixed a mistake in the source term vector S
   * in prim/fluid/_drift-diffusion and prim/fluid/_Favre-Reynolds_mix_Tv_Te
     - moved #error directives from fluid.c to fluid.hh
   * in prim/emfield/_Ohm and prim/emfield/_Ohm_generalized
     - moved #error directives from emfield.c to emfield.hh
   * in prim/emfield/*/emfield.c
     - fixed bug in find_Sstar_emf() --> couldn't be compiled with no UNSTEADY flag
   * in prim/metrics/doc
     - updated document


2015 AUG 12
   * renamed some functions
     - add_convection_residual to add_dFstar_residual
     - add_diffusion_residual to add_Kstar_dG_residual
     - add_plasma_residual to add_Ystar_dH_residual and add_dDstarU_residual
     - add_source_residual to add_Sstar_residual and add_Z_dUstar_residual
   * in cycle/res/_generic/res.c
     - in add_Z_dUstar_residual(), fixed a bug: needed to multiply U by Omega
   * in cycle/res/doc/report.tex
     - made document up to date 
   * added cycle/res/share
   * in cycle/res/share/res_share.c
     - added _f_lim function 
   * in cycle/res/_generic/res.c and cycle/res/conv/*/convres.c 
     - removed _f_lim() function
   * in prim/thermo/doc/report.tex
     - updated document
   * in prim/thermo
     - renamed _NASA2002 to _generic 
   * in prim/emfield/doc/report.tex
     - fixed a mistake in the derivation of the potential equation: the sign of the 
       pressure gradient terms was wrong (this doesn't affect emfield.c because the sign 
       of the pressure gradients there was right)
   * in prim/emfield/_Ohm/emfield.c and in prim/emfield/_Ohm_generalized/emfield.c
     - in function find_Sstar_emf(), added unsteady source terms     
   * in prim/chem/*PLASMA*/chem.hh
     - added  #define _CHEM_PLASMA
   * in prim/fluid/_drift-diffusion/fluid.c and prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - added code to stop compilation if _CHEM_PLASMA is not defined
   * in prim/emfield/_Ohm*/emfield.c
     - added code to stop compilation if _CHEM_PLASMA is not defined
   * renamed add_dFstar_jacobian_1 to add_dFstar_jacobian
   * in cycle/ts/share/ts_share.c
     - got rid of function add_dFstar_jacobian()
    

2015 AUG 11
   * in cycle/ts/doc/report.tex
     - made document up to date 


2015 AUG 10
   * in cycle/share/ts_share.c
     - in add_source_jacobian(), added unsteady terms
   * in prim/fluid/_drift-diffusion/fluid.c
     - got rid of all unsteady functions and their calls
     - renamed C to dS_dU or to dSstar_dUstar where appropriate     
   * in prim/fluid/_Favre-Reynolds_mix/fluid_conv.c
     - in find_L_from_jacvars_eigenset2(), assert(sum>..) is changed to assert(Xmag>..)
     - in find_Linv_from_jacvars_eigenset2(), assert(sum>..) is changed to assert(Xmag>..)
   * in prim/fluid/_Favre-Reynolds_mix/fluid.c, prim/fluid/_Favre-Reynolds_mix_Tv/fluid.c 
     - added function find_Z()
   * in prim/fluid/_Favre-Reynolds_mix*/fluid_source.c, prim/fluid/_Navier-Stokes/fluid_source.c 
     - got rid of all unsteady functions and their calls
     - renamed C to dS_dU or to dSstar_dUstar where appropriate
   * in prim/emfield/_none/emfield.c
     - added function _phi() which returns always zero
   * renamed some functions
     - add_convection_jacobian to add_dFstar_jacobian
     - add_diffusion_jacobian to add_Kstar_dG_jacobian
     - add_plasma_jacobian to add_Ystar_dH_jacobian and add_dDstarU_jacobian
     - add_source_jacobian to add_Sstar_jacobian and add_Z_dUstar_jacobian
   * in cycle/ts/_implicit_block_DDADI_iterative/ts.c
     - in function update_dQ_from_dQtil(), fixed call to add_dUstar_to_U()
   * in src/common.h
     - renamed _TS_BLOCK_TDMA_DDADI_ITERATIVE to _TS_IMPLICIT_BLOCK_DDADI_ITERATIVE


2015 AUG 08
   * in cycle/res/_generic/res.c
     - added function add_ZdUdt_residual()
       (i) needs further modifications in prim/fluid and in cycle/ts/_generic
   * in cycle/res/doc
     - updated document


2015 AUG 07
   * in cycle/res/_generic/res.c
     - finished implementation of second-order terms for dDU/dx
   * in cycle/res/conv/*/convres.c
     - renamed function _phi() to _f_lim()
   * in cycle/res/doc
     - updated document
   * deleted cycle/res/_generic/doc
   * in prim/metrics/doc
     - updated document


2015 AUG 06
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c 
     - in function update_bdry_wall() made changes to the boundary condition 
       (i) now at the anode, Ne is again reverted to the value at the near wall node instead
           of the max between the near-wall and near-near-wall nodes.
   * in prim/chem/_N2_PLASMA_3s_3r
     - moved doc/townsend to prim/chem/_AIR_PLASMA_8s_28r_Macheret
     - removed doc
     - removed symbolic link _N2_PLASMA_3s_3r
   * in prim/fluid/_drift-diffusion/fluid.c
     - added the constant flag DSTAR_DIAGONAL
   * in prim/emfield/_Ohm_generalized/emfield.c
     - added the constant maxiterEk and set it to 200 (used to be set to 20)
   * in prim/chem/*_PLASMA_*/chem.c  
     - in find_dW_dx(), fixed bugs related to Townsend ionization linearization 
   * moved cycle/res/conv/doc to cycle/res/doc
   * in cycle/res/doc
     - added discretization stencils for YdHdx and dDU/dx
   * in cycle/res/_generic/res.c
     - started implementation of second-order terms for dDU/dx


2015 AUG 05
   * in prim/fluid/_drift-diffusion/fluid.c
     - in function test_dSchem_dU(), added calls to _mu, and changed call to test_dW_dx()
     - in function find_dSchem_dU(), added calls to _mu, and changed call to find_dW_dx()
   * in prim/fluid/_Favre-Reynolds_mix*/fluid_source.c
     - in function test_dSchem_dU(), added calls to _mu, and changed call to test_dW_dx()
     - in function find_dSchem_dU(), added calls to _mu, and changed call to find_dW_dx()
   * in prim/chem/_chem.h
     - changed the calls to find_dW_dx() and test_dW_dx() to include mu
   * in prim/chem/*/chem.c
     - changed the calls to find_dW_dx() and test_dW_dx() to include mu
   * in prim/chem/*_PLASMA_*/chem.c  
     - in find_dW_dx(), added linearization of Townsend ionization reaction rates
     - in find_W() and find_dW_dx(), made sure Estar is greater or equal to Estarmin
   * in prim/chem/doc/report.tex
     - added a new section related to the linearization of the Townsend ionization terms at constant
       current
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c 
     - in function update_bdry_wall() made changes to the boundary condition 
       (i) now at the anode, Ne is again fixed to the max between Ne at the near-wall and Ne at the 
           near-near-wall boundary nodes
       (ii) needs further checking


2015 AUG 04
   * in prim/fluid/_drift-diffusion/fluid.c
     - found a bug in the function find_prim(): Nk was not clipped properly
   * in prim/emfield/_Ohm_generalized/emfield.c
     - in function find_DeltaVk_from_mu(), within the pressure gradients, use function _X() instead
       of calling find_metrics()
     - added functions _sigmatilde() and _sigmatilde_interface()
       -> temporary functions used for testing only
   * in prim/metrics/_generic/metrics.c
     - in function _X(), added an assert for is_node_resumed


2015 AUG 03
   * in prim/fluid/_drift-diffusion/fluid.c
     - in the function update_bdry_wall(), fixed a bug: Nk was not extrapolated properly for 
       the neutral species; Now Nk at the boundary for the neutrals is not varied in pseudotime


2015 JUL 31
   * in prim/fluid/doc/Performance_parameters
     - improved document
   * in prim/fluid/_drift-diffusion/fluid.c   
     - in function update_bdry_wall() made changes to the boundary condition:
       (i)  now at the anode, Ne is fixed to Ne at the near-wall boundary node instead of being
            fixed to the max between Ne at the near-wall and Ne at the near-near-wall boundary nodes
       (ii) now, when determining whether the boundary should be treated as anode versus cathode,
            use an if condition pased on phi directly (as in 2D3c and 2D6c) rather than an 
            if condition based on Eeta
     - added function find_Z()
     - added function find_Sunsteady() 
     - added function find_dSunsteady_dU()  
       --> still needs work thus
     - modified find_dSstar_dUstar() to include jacobian dSunsteady_dU
     - modified find_Sstar() to include vector Sunsteady
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c   
     - in function update_bdry_wall() made changes to the boundary condition 
       (i) now at the anode, Ne is fixed to Ne at the near-wall boundary node instead of being
           fixed to the max between Ne at the near-wall and Ne at the near-near-wall boundary nodes
       (ii) now, when determining whether the boundary should be treated as anode versus cathode,
            use an if condition pased on phi directly (as in 2D3c and 2D6c) rather than an 
            if condition based on Eeta
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_plasma.c
     - added function find_Z()
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_source.c
     - modified function find_Sunsteady() so that (U^(n+1)-U^n) is multiplied by Z
     - modified function find_dSunsteady_dU() to include effect of Z 
       --> still needs work thus
   * in src/main.c
     - in function main(), added *dtstring again in the variables declaration and initialized it to NULL
       (was deleted inadvertently previously)


2015 JUL 30
   * in cycle/res/conv/doc
     - Added documentation for all FDS schemes
   * in prim/fluid/_drift-diffusion/fluid.c
     - made the preconditioning functions find_Gamma and find_Gamma_inverse equal to those
       in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - removed qdissipation and replaced with aref*zetaD 
       as in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - made PRECONDITIONING TRUE as default in control file


2015 JUL 29
   * in cycle/doc
     - improved document to incorporate latest notation
   * in cycle/ts/doc
     - improved document to incorporate latest notation
   * in lib/latex
     - deleted all *.bib and ProReport.cls (not used anymore by any document in warp)
   * in cycle/res/conv/doc
     - added new document outlining the various convective derivative discretization stencils
     - Documented all FVS schemes


2015 JUl 28
   * in prim/fluid/doc/Favre_averaging
     - made significant changes to the document to incorporate latest formulation of the nitrogen
       vibrational energy ((rho_N2 e_v) instead of (rho e_v))
   * in prim/fluid/doc/MHD_Quasi1D
     - improved document
   * in prim/fluid/doc/Performance_Parameters
     - improved document
    

2015 JUL 27
   * in prim/chem/doc
     - updated the documentation to include most chemical solvers (except the hydrocarbon ones) 
   * in prim/thermo/doc
     - made small improvements to the documentation


2015 JUL 24
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_conv.c,  
        prim/fluid/_Favre-Reynolds_mix_Tv/fluid_conv.c,
        prim/fluid/_Favre-Reynolds_mix/fluid_conv.c
     - there was a conflict between w (species mass fraction) and w the z-component of the velocity
     - thus, renamed u to Vx, V to Vy, and w to Vz where appropriate
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_source.c,  
        prim/fluid/_Favre-Reynolds_mix_Tv/fluid_source.c,
        prim/fluid/_Favre-Reynolds_mix/fluid_source.c
     - rewrote the function _Qk()
         _Qk was previously written function of beta
	 which gives the same answer as the standard form, but is harder to read and check
         with little to no advantage in computing speed
   * in prim/metrics/doc
     - updated the documentation with latest notation


2015 JUL 23
   * in prim/fluid/doc
     - improved the documentation for Transport_Equations
     - got rid of Old/


2015 JUL 22
   * deleted prim/fluid/_Favre-Reynolds_mix_Tv   
   * renamed prim/fluid/_Favre-Reynolds_mix_Tv2 to prim/fluid/_Favre-Reynolds_mix_Tv   
   * in prim/fluid/_Favre-Reynolds_mix_Tv/fluid.h 
     - added N2VIB_MILLIKAN and N2VIB_MACHERET flags 
   * in prim/fluid/_Favre-Reynolds_mix_Tv/fluid.c 
     - in write_prim_fluid_template() and read_prim_fluid_actions(), made modifications to handle
       the MILLIKAN and MACHERET options for N2VIB
   * in prim/fluid/_Favre-Reynolds_mix_Tv/fluid_source.c 
     - in _tauvt() and find_dSvib_dU(),  made modifications to handle
       the MILLIKAN and MACHERET options for N2VIB
   * in prim/thermo/
     - renamed _NASA_1996 to _NASA2002
     - got rid of _NASA1971 and _perfect and _perfect_old
   * in prim/thermo/_NASA_1996/doc
     - further updated the documentation 
   * in prim/fluid/_Navier-Stokes
     - deleted the directory doc
   * in prim/fluid/_Favre-Reynolds_mix
     - deleted the directory doc
   * in prim/fluid/_Favre-Reynolds_mix_Tv
     - deleted the directory doc
   * moved prim/fluid/_Favre-Reynolds_mix_Tv_Te/doc to prim/fluid/doc
   * in prim/fluid/doc
     - updated the various docs 


2015 JUL 21
   * in prim/thermo/_NASA_1996/doc
     - updated the documentation so that it is in sync with the latest notations
   * in prim/emfield/_Ohm/doc
     - deleted all files
     - the documentation here is not necessary, because it is a subset of the documentation
       in prim/emfield/_Ohm_generalized/doc


2015 JUL 17
   * in prim/emfield/_Ohm_generalized/doc
     - deleted all existing documentation
     - added a new document
   * removed directory prim/emfield/old


2015 JUL 15
   * in prim/fluid/_Favre-Reynolds_Mix_Tv_Te/fluid_source.c
     - in the function _tauvt(), simplified the calls to _N() and _Nk()
     - doesn't change the residual, this was done just for better readability     


2015 JUL 14
   * in prim/fluid/_Favre-Reynolds_Mix_Tv_Te/fluid_plasma.c
     - in function  _Te_local(), attempted another approach at smoothing the magnitude
       of the electric field
       -> doesn't work so well, so reverted to previous approach


2015 JUL 07
   * in prim/fluid
     - renamed zetabar1 to zetaAc
     - renamed zetabar2 to zetaAa
     - renamed zetabar3 to zetaAi
   * renamed dtaufactelectron to zetaGammae
   * renamed dtaufaction to zetaGammai


2015 JUL 02
   * renamed cion cimin cimax cemin cemax to wion wimin wimax wemin wemax


2015 JUL 01
   * renamed mass fraction "c" to "w" everywhere
   * renamed CP to cp
   * renamed _sk to _s
   * renamed _mk to _m


2015 JUN 02
   * in cycle/_multizone
     - now compatible with recent changes to how convergence parameters are located in gl  
   * in cycle/_marching-window_multizone
     - now compatible with recent changes to how convergence parameters are located in gl


2015 JUN 01tmp
   * in prim/fluid/_Favre-Reynold_mix_Tv/fluid_source.c
     - added Sathyan's Millikan contributions (temporary)


2015 MAY 27
   * in lib/latex
     - got rid of mtpro2


2015 MAY 20
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c
     - in update_bdry_wall(), now limit Tv and Te with Tvmin, Tvmax, Temin, Temax
       instead of Twmin and Twmax


2015 MAY 14
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_source.c
     - in find_dSe_dU_transport() added ifdef conditions for lines that are function specO2 and specN2
     - in find_Se() added ifdef conditions for lines that are function specO2 and specN2


2015 MAY 11
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - in function find_Gamma(), made changes to the dtaufact (now function of dtaufaction
       and dtaufactelectron)


2015 MAY 07
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_source.c
     - in function find_Schem(), set EoverN to zero
     - in function find_dSchem_dU(), set EoverN to zero
   * in prim/emfield/_none/emfield.c
     - added function _E_dot_Je() which always returns 0


2015 MAY 06
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - rewrote find_Gamma() and find_Gamma_inverse() functions
       -> now the time step for the ions is the same as for the neutrals
          and the time step for the electrons is a function of alpha 


2015 MAY 05
   * in prim/chem
     - added the chemical solver _AIR_4s_13r
   * in prim/fluid/_Favre-Reynolds_mix_Tv
     - got rid of all the plasma stuff 
   * in prim/fluid/_Favre-Reynolds_mix_Tv2
     - got rid of all the plasma stuff 
       -> CHECK CAREFULLY K matrix and G matrix
   * in prim/emfield/_none/emfield.c
     - added functions find_Vk() and _sigma()
   * in lib/exm/exm.c
     - added function EXM_reinit_matrix()
     - in EXM_inverse_matrix(), now call EXM_reinit_matrix() instead of EXM_init_matrix()
     - in EXM_inverse_matrix_analytical(), now call EXM_reinit_matrix() instead of EXM_init_matrix()
     - in EXM_multiply_matrices(), now call EXM_reinit_matrix() instead of EXM_init_matrix()
   * in prim/fluid/*/fluid_bdry.c
     - in find_chi_inverse(), call EXM_init_matrix() at beginning of function
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_source.c
     - in find_Se(), added some source terms for TE_LOCAL
     - added function find_dSe_dU_local()
     - in find_dSe_dU(), added call for find_dSe_dU_local() 
     - in find_Semf(), took away if condition that prevented the emf sources to be computed on near-bdry nodes 
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - NOTE: find_dtau_fact(), the factor 1e-20 multiplying the electron energy equation affects stability and rate
       of convergence
       -> needs further checking


2015 MAY 01
   * in prim/chem
     - added the chemical solver _AIR_PLASMA_6s_15r
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c
     - in function update_bdry_wall(), found a bug related to Ne at the cathodes
     - in function update_bdry_wall(), got rid of electric field dependence on nearby nodes
       in dimensions other than theta
   * in prim/fluid/_drift-diffusion/fluid.c
     - in function update_bdry_wall(), found a bug related to Ne at the cathodes
     - in function find_dSemf_dUstar(), changed the linearization of the rhoc term so that
       only the negative terms are linearized
     - in function _Nk(), now returns zero if Nk is negative
   * in cycle/_standard/cycle.c
     - in function perform_one_iteration(), now call update_prim_mem at every iteration of the emfield
       -> seems to result in more stable integration when a magnetic field is present
       -> needs more testing


2015 APR 30
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_plasma.c
     - rewrote the functions find_Dstarplus() and find_Dstarminus()
       -> they now collapse to Steger-Warming FVS when only one type of negative species is present
   * in prim/fluid/_drift-diffusion/fluid.c
     - rewrote the functions find_Dstarplus() and find_Dstarminus()
       -> they now collapse to Steger-Warming FVS when only one type of negative species is present
   * in src/test.c
     - added a test of Dstarplus and Dstarminus


2015 APR 29
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - in functions find_Dstarplus() and find_Dstarminus(), altered the way the artificial dissipation
       is added -- now, it the matrices will yield upwinded stencils should they be diagonal along with
       some small extra dissipation specified by zetabar4
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_bdry.c
     - in function update_bdry_wall(), took away the dependence on the nearby boundary nodes in dimensions
       other than theta


2015 APR 28
   * in prim/emfield/*/emfield.c
     - in function write_prim_emfield_template(), took away templates for SetAdditionalVcrossB()
       and SetAdditionalVcrossBdotj()
       -> these only affect the external circuit and are not effective for now
   * in prim/fluid/_drift-diffusion/fluid.c
     - Included magnetic field terms in find_Dstar
     - added functions find_Dstar_plus and find_Dstar_minus
   * in prim/emfield/_Ohm/emfield.c and prim/emfield/_Ohm_generalized/emfield.c 
     - added #error messages should _FLUID_PLASMA not be declared
   * in prim/ebeam/_algebraic/ebeam.c and prim/ebeam/_constant/ebeam.c 
     - added #error messages should _FLUID_PLASMA not be declared
   * in prim/fluid/_Navier-Stokes/ 
     - got rid of fluid_plasma.c and all calls to plasma functions
   * in prim/fluid/_Favre-Reynolds_mix/ 
     - got rid of fluid_plasma.c and all calls to plasma functions
   * in prim/emfield/_Ohm_generalized/emfield.c 
     - in function find_E_Townsend(), fixed a bug related to the initialization of the electric field
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid_post.c
     - added another post processing variable, rhoc


2015 APR 27
   * in prim/chem/*
     - made sure that for each chemical solver, the charged species are defined first,
       followed by the neutral species
   * in prim/chem/*/chem.hh
     - added ncs (the number of charged species)
   * in cycle/share/cycle_share.c
     - in update_prim_mem_emf(), added call to find_prim_mem_emf_2()
   * in cycle/_standard/cycle.c
     - added calls to  find_prim_mem_emf_2() and made sure it's called at the most once
       per cycle
   * in prim/fluid/*/fluid.hh
     - added the type chargedspec_t
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c 
     - in find_prim_mem(), added calls to _Nnmem, _Nmem, _Pkmem, _Nkmem
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c 
     - added functions _Nnmem, _Nmem, _Pkmem, _Nkmem
     - got rid of calls to find_metrics_at_node and replaced with _X() function 
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_bdry.c
     - got rid of calls to find_metrics_at_node and replaced with _X() function 
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - in function add_dUstar_to_dU() added a relaxation factor to the electron energy update
   * in prim/emfield/*
     - moved the function _sigma() here from prim/fluid
   * in prim/emfield/_Ohm_generalized/emfield.c
     - in function find_Ek_muk_mem(), implemented fix for Te using Te_buffer
   * in prim/emfield/*/emfield.c
     - renamed function find_prim_mem_emf_2() to find_prim_mem_emf_3() 
     - added function find_prim_mem_emf_2() where mobilities and conductivities are determined


2015 APR 25
   * in prim/emfield/_Ohm_generalized
     - in find_Ek_muk_mem(), call find_Vk_from_mu() instead of find_Vk() 
     - in find_prim_mem_emf_1() added call to find_Ek_muk_mem() and store mu in memory
     - in _mu(), find the mobilities from memory instead of calculating them everytime
     

2015 APR 24
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te
     - copied some functions from prim/fluid/_Favre-Reynolds_mix_Tv2
     - made several changes related to the charged species 
     - incorporated the flag TE which can be set to TE_LOCAL or TE_CONSTANT or TE_TRANSPORT
   * in prim/fluid/_Favre-Reynolds_mix_Tv_Te/fluid.c
     - fixed bug in the sound speed in function _a()     
   * in prim/emfield/_Ohm_generalized
     - made find_E_Townsend() function of Ee instead of E at the interfaces  
       -> needs more testing
     - added function set_B_to_zero_near_bdry()
     - modified function _E_dot_Je()
       -> needs improvements
      

2015 APR 23
   * in src/common.c
     - moved function _delta() here from prim/fluid/_Favre*/fluid_plasma.c and prim/fluid/_Drift*/fluid.c
   * in prim/emfield/
     - moved _Ohm_generalized to _Ohm_generalized_15apr22
     - created a new module _Ohm_generalized starting from the _Ohm module 
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_plasma.c
     - in function _Emag(), the electric field is now found in the lab frame, not in the
       electrons frame (the latter is not possible to obtain here because it depends on the electron
       pressure gradients which are not known then _Emag is called at one node


2015 APR 22
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_plasma.c
     - in functions find_Dstarplus() and find_Dstarminus(), multiplied the sound speed
       "a" by zetabar4, which is read in the control file
   * in prim/emfield/_Ohm_emfield.c
     - added the function is_node_bdry_dielectric()
   * in  prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_bdry.c
     - in the function update_bdry_wall(), now imposes a cathode type boundary condition
       on all dielectric boundaries irrespective of the direction of the electric field; this is done
       through the use of the function is_node_bdry_dielectric()
     - in the function update_bdry_wall(), also check for electric field on nearby nodes along dimensions other
       than theta --> needs fine tuning
   * in  prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_source.c
     - in function find_Semf(), added contribution of electron pressure gradients to momentum
       and total energy equations


2015 APR 21
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid.c
     - in function find_dtau_fact(), added dependence of the pseudotime step on the user-defined
       dtaufactcharges
     - in functions write_cycle_fluid_template(), read_cycle_fluid_actions(), added parameter 
       dtaufactcharges
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_plasma.c
     - in function find_Dstar(), changed Dstar from vector to matrix
     - added functions find_Dstarplus() and find_Dstarminus()
   * in cycle/ts/share/ts_share.c
     - in add_plasma_jacobian(), made modifications for the new Dstar definition
   * in cycle/res/_generic/res.c
     - in add_plasma_residual(), made modifications for the new Dstar definition


2015 APR 20
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_source.c
     - in find_dSemf_dU(), limited the linearization of the emf source terms for the positive ion equations
       to those being strictly negative, while excluding all the positive source terms
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_plasma.c
     - in find_Dstar(), removed the last line where Dstar was set to zero
   * in prim/emfield/_Ohm_emfield.c
     - in find_E_Townsend(), added a limitation of the electric field function of Jmax
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_bdry.c
     - added function update_bdry_inflow_plasma() where the charged species densities are
       extrapolated at the inflow boundary
     

2015 APR 17
   * in prim/fluid/_drift-diffusion_mass/fluid.c
     - added function _PRIMMEM()
     - added flag TE_FROM_FLUX (when set to FALSE, will find the electron temperature exactly in the same way
       as in modules with no electron temperature flux component)
     - in find_post_variable_value_fluid and find_post_variable_name_fluid, added mass fractions
       to post variables
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid.c
     - in function find_G() found and corrected an implementation error related to the charged species 
     - in function find_dG_dUstar() found and corrected an implementation error related to the charged species 
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_source.c
     - in function find_dSemf_dU(): found a bug related to rhok[spec] not being initialized correctly
       when TEST is not set
   * in prim/fluid/_Favre-Reynolds_mix_Tv2/fluid_plasma.c
     - in function _Nk(), took away a max() call that essentially made the number density
       of any charged species always non-negative
   * in src/common.c
     - renamed function initialize_matrix() to set_matrix_to_zero
     - renamed function initialize_and_set_matrix_to_identity() to set_matrix_to_identity
     - added function set_vector_to_zero()


2015 APR 16
   * in prim/fluid/_drift-diffusion/fluid.c
     - in function _sigma(), changed the way sigma is defined. Now Nk -> max(0.0,Nk)
     - in function find_dQbeam_dU(), fixed a bug
   * in prim/thermo/_NASA_1996/thermo.c
     - added the function _mk()
   * in prim/fluid/
     - added the directory _drift_diffusion_mass
   * in prim/fluid/_Favre-Reynolds_Mix_Tv2/fluid.c
     - fixed a bug in function find_G() related to the charged species
   * in prim/fluid/_Favre-Reynolds_Mix_Tv2/fluid_bdry.c
     - rewrote the function update_bdry_wall() so that the determination of the charged species
       at the wall is a function of Nk and not ck (cleaner)


2015 APR 15
   * in prim/fluid/_drift-diffusion/fluid.c
     - found a bug in function find_Semf() with valgrind: S was not initialized properly
   * in prim/fluid/_drift-diffusion/ (various files)
     - added another clipped variable: Nemin
   * in prim/_generic/prim.c
     - found a bug in function add_to_clipped_variables() with valgrind: forgot to multiply the length of str
       by sizeof(char) when mallocing
   * various files
     - moved some of the user-defined parameters in the control file from prim to cycle
       -> some files in prim/fluid/* and cycle/* and prim/emfield/* still need some modifications 
   * in prim/fluid
     - renamed Favre to FavreReynolds and Navier to Navier-Stokes  


2015 APR 14
   * in prim/fluid/_drift-diffusion/fluid.c 
     - added function _qion
     - in find_Gamma() and find_Gamma_inverse(), made changes to take the ion velocity into consideration
       within the pseudotime step 
       -> only affects the pseudotime step is PRECONDITIONING is set to TRUE within the cycle module
   * in prim/emfield/_Ohm_emfield.c
     - in function write_emfield_template() and read_and_init_emfield_actions() added relaxfactbdryphi 


2015 APR 13
   * in prim/emfield/_Ohm_emfield.c
     - made function find_Vk_from_mu() applicable to curvilinear mesh
     - got rid of update_phi_TDMA after proper checks have been made
     - called _sigma_emf() instead of _sigma() in find_dtau_emf()
   * in cycle/share/cycle_share.c
     - added functions update_prim_mem_emf_2() and update_prim_mem_emf_1()
   * in cycle/_standard/cycle.c
     - in read_and_init_cycle(), call update_prim_mem_emf_1() and update_prim_mem_emf_2()
       instead of update_prim_mem_emf()
     - in write_cycle_template(), added initial values for Lcfact,subiter_emf,relaxfact_emf
   * in prim/fluid/_drift-diffusion/fluid.c
     - in function _Temem(), rewrote the algorithm so that it does not depend on Nn
       on the nearby nodes  
       -> important because Nn on the nearby nodes may not be up to date when _Temem()
          is called
   * in src/common.h
     - in gl_t added relaxfact_emf,subiter_emf,Lcfact
   * in cycle/share/cycle_share.c
     - in function process_code_runtime(), added reads for relaxfact_emf,subiter_emf,Lcfact
   * in src/data.c
     - made modifications to several functions so that Lc is not written to the data files
       anymore unless EMF is defined
   * in prim/fluid/_drift-diffusion/
     - made several changes to incorporate an additional transport equation for the electron temperature
       -> needs more testing
   

2015 APR 10
   * in prim/emfield/_Ohm_emfield.c
     - some cleanup of functions no longer needed
     - better implementation of the dPkdX, dTkdX, etc functions
     - implemented new function _sigma_eff()
     - improved find_prim_mem_emf_1 and find_prim_mem_emf_2
   * in src/common.c
     - added function find_l_of_nearest_inner_node()
   * in prim/fluid/_drift-diffusion/fluid.c
     - in function _dTedX_mass_flux_at_interface(), made Ne and mue the minimum
       of their corresponding values on the nearby nodes (instead of the average)
       --> helps to get a more monotonic solution
   * in cycle/_standard/cycle.c
     - in function perform_one_iteration(), changed the calls to update_U_emf() rather
       than update_phi_TDMA()
   * in cycle/share/cycle_share.c
     - got rid of all XDMA code
     - got rid of diffusion_residual_emf calls (now the diffusion terms are regrouped
       with the convection terms)


2015 APR 09
   * in prim/emfield/_Ohm_emfield.c
     - in function find_dtau_emf(), made time step more general
     - in _Jstar_interface(), fixed a bug in evaluating mue when calculating electron temperature gradients
     - rewrote find_Estar_at_interface()
     - in _Jstar_interface(), rewrote pressure gradients in more general form
     - added function _dTedXj() that includes upwinding of electron temperature for monotonic solutions
   * in prim/fluid/_drift-diffusion/fluid.c
     - rewrote the function _dTedX_mass_flux_at_interface() as function of upwinded _dTedXj()


2015 APR 08
   * in prim/emfield/_Ohm_emfield.c
     - changed the functions find_Jstar_at_interface() and find_Estar_at_interface()  
       by defining Jstar and Estar differently similarly to the contravariant velocity Vstar
     - in function update_phi_TDMA(), added dependence on relaxfactphi
     - added function find_J_at_node_from_Jstar_at_interfaces() 
     - in function _Jstar_int(), changed the pressure gradient terms and made them applicable
       to a non-orthogonal mesh
     - in function _Jstar_int(), split the electron pressure gradient in terms of temperature
       gradient and number density gradient
     - in function _Jstar_int(), rewrote the electron temperature gradient in upwinded form
   * in prim/fluid/_drift-diffusion/fluid.c
     - added function _Temem()
     - changed calls to find_Jstar_at_interface() and find_Estar_at_interface()
     - in find_prim(), added a call to _Temem()
   * in src/common.h
     - in structure gl_t, added Temem when _FLUID_DRIFTDIFFUSION is defined


2015 APR 07
   * in prim/emfield/_Ohm_emfield.c
     - rewrote several functions that were added on april 6th as function of metrics
   * in cycle/_standard/cycle.c
     - in function read_and_init_cycle() added call to update_prim_mem_emf()
     - in function perform_one_iteration() added call to update_prim_mem_emf()
   * in cycle/res/_generic/res.c
     - in function add_plasma_residual(), fixed a bug within Ystar*dHdX derivatives


2015 APR 06
   * in prim/emfield/_Ohm_emfield.c
     - added new function to update phi that were taken directly from 2D3c.c
   * in cycle/_standard/cycle.c
     - added calls to find_residual_phi(), update_phi_TDMA(), and find_ximax_phi()
       at the end of the function perform_one_iteration()

     
2015 APR 03
   * in prim/fluid
     - added the module _drift-diffusion
   * in src/common.c
     - rewrote the function find_numerical_jacobian_2()


2015 APR 02
   * in tools/
     - added tauvt.c from Sathyan P
   * various files
     - checked if some mistake is present


2015 APR 01
   * in prim/emfield/_Ohm_emfield.c
     - created function find_sigma_at_interface_2() used only with _Kstar_interface()
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - moved find_Gamma() and find_Gamma_inverse() from cycle_share.c here
     - created function _flux_norm() used with block implicit AF
   * in cycle/ts/_block_TDMA_AF/ts.c
     - added calls to _flux_norm()
   

2015 MAR 31
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - in function find_dtau_fact(), set fact=1.0
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - rewrite find_Ystar_at_interface(): now takes the minmod of the electric field and current density
       at the nearby interfaces
   * in prim/chem
     - added the chemical solver _AIR_PLASMA_3s_3r
   * in prim/emfield/_Ohm_emfield.c
     - added the function find_Estar_at_interface()
   * in prim/emfield/_Ohm_emfield.c
     - in function find_sigma_at_interface(), sigma is now determined as the geometric average of
       the left and right sigmas
   * in cycle/ts/share/ts_share.c
     - in function add_plasma_jacobian(), took away the jacobians on the left and right nodes -- only
       keep the jacobian on the center node, or this may result in instabilities


2015 MAR 30
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - in function _Temem(), now determine Te as a function of Electric field on all neighboring nodes
     - in function find_dH_dUstar(), took away many linearizations which are different from those in
       previous papers (set them to be active only when TEST flag is set to TRUE)
     - in function _sigma_positive(), removed dependence on gl->prim.fluid.sigmadiv  
     - created new function _sigma_positive2(), with dependence on gl->prim.fluid.sigmadiv
     - in function find_dH_dUstar(), call _sigma_positive2() for negative ions
     - in function find_H(), call _sigma_positive2() for negative ions
   * in prim/fluid/_Favre_mix_Tv2/fluid_bdry.c
     - in function update_bdry_wall(), made Eeta function of electric fields at nearby interfaces only
       (not function of electric field on nearby nodes anymore)
   * in prim/emfield/_Ohm_emfield.c
     - in function find_sigma_at_interface(), sigma is now determined as the arithmetic average
       of the left and right conductivities (instead of the minimum)
   * in cycle/res/_generic/res.c
     - in function add_plasma_residual(), fixed a bug: the discretization of Y*dH/dx had the wrong sign


2015 MAR 27
   * in prim/fluid/_Favre_mix_Tv2/fluid_bdry.c
     - in function update_bdry_wall(), made some adjustements to how the ion and electrons are determined
       at the boundaries
    

2015 MAR 26
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - in function find_prim_mem(), added a line for Temem
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - added function _Temem()
     - changed function _Te() so it would call _Temem when available
   * in prim/emfield/_Ohm_emfield.c
     - in function find_J_at_interface(), modified the discretization of the electron pressure gradients
     - in function find_Fstar_interface_emf(), modified the discretization of the electron pressure gradients
     - added function find_Fstar_interface_emf_total() for testing purposes only
     - in function find_bdry_TDMA_values(), changed the TDMA coefficient values for the insulated boundary
     - in write_emfield_template(), added Ediv (now needed to discretize the electron pressure gradients)
     - in read_and_init_emfield_actions(), added a call to initialize Ediv
   * in cycle/share/cycle_share.c
     - added function add_convection_residual_emf_total() for testing purposes
   * in src/common.h
     - in npwk_t, added variable Temem
     

2015 MAR 25
   * in prim/fluid/_Favre_mix_Tv2/fluid_source.c
     - added function _dTedX_mass_flux_at_interface()
     - in function find_Semf() added contributions from electron temperature gradients to the mass fluxes  
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - moved function _alpha to fluid_source.c and renamed it _OmegaXsquare()
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - added function _alpha(), the ambipolar tensor
     - got rid of the "interface functions" such as Pk_interface, Tk_interface, etc
   * in prim/emfield/_Ohm_emfield.c
     - renamed _Pk_interface_local() to _Pk_interface()
     - in function _Pk_interface(), now we determine the electron temperature from the minimum
       of the electron temperature at the left and right nodes


2015 MAR 24
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - in function find_dtau_fact(), implemented a correction to the local time step
       function of the electric field magnitude
   * in prim/emfield/_Ohm_emfield.c
     - in function _mu_interface(), rewrote Te function of Te_buffer read in control file 
     - in function find_Fstar_interface_emf(), added cross diffusion terms for pressure
       gradients (play a role only if X1, X2, X3 is not aligned with x, y, z)
       --> needs testing
     - in function find_J_at_interface(), modified the flux to include upwinding of the 
       electron pressure gradients, as done in function find_Fstar_interface_emf()
     - in function find_Fstar_interface_emf(), do not set the flux to zero at a dielectric anymore 
       using call to function is_no_flux_through_bdry_emf()
     - in function find_sigma_at_interface(), do not set the conductivity to zero at a dielectric anymore 
       using call to function is_no_flux_through_bdry_emf()
     - in function update_bdry_prim_emf(), changed the update of phi at the dielectric boundary
       such that it results in exactly no current through the boundary
     - in function update_bdry_prim_emf(), implemented a relaxation of the update of phi at the
       boundary --> critical to keep the solution within bounds


2015 MAR 23
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - changed all _nonzero(sigma) by gl->prim.fluid.sigmaprime
     - in function find_Ystar_at_interface(), find Jstar from find_Jstar_at_interface()
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - added sigmadiv in functions write_fluid_template() and read_and_init_fluid_actions()
     - added relaxfactanode in functions write_fluid_template() and read_and_init_fluid_actions()
   * in prim/fluid/_Favre_mix_Tv2/fluid_bdry.c
     - in update_bdry_wall(), underrelaxed the electron mass fraction at the wall boundary 
       --> needs fine tuning
     - only impose cathode/anode boundary when BDRYDIRECFOUND is TRUE
   * in prim/emfield/_Ohm_emfield.c
     - implemented function find_Jstar_at_interface()


2015 MAR 20
   * in prim/emfield/_Ohm_emfield.c
     - in the function update_bdry_prim_emf(), added contribution from pressure gradients
   * in cycle/res/_generic/res.c
     - fixed a bug in the function add_plasma_residual() related to the discretization
       of Ystar*dH/dX
   * in prim/fluid/_Favre_mix_Tv2/fluid_source.c
     - in function find_Schem(), changed how Estar is computed: now, similar to Te, Estar is a function
       of E on all neighboring nodes


2015 MAR 19
   * in prim/emfield/_Ohm_emfield.c
     - in function find_Fstar_interface_emf(), made the electron mobility (part of the pressure
       gradients) the minimum of the electron mobilities on the left and right nodes of the interface
       -> needed for stability and to prevent convergence hang
     - in function _mu(), added a dependence of Te on Te_buffer with the latter being
       necessary to prevent convergence hangs
     - in function write_emfield_template(), added Te_buffer in default template
     - in function read_and_init_emfield_actions(), added a read of Te_buffer
     - in function find_post_variable_value_emf(), added Ve[1..nd] as a post variable
     - in function find_Vk_from_mu(), fixed a bug related to the pressure gradients
   * NOTE: this version works great at solving non-neutral plasma enclosed by dielectrics


2015 MAR 18
   * in cycle/*/cycle.c
     - in read_and_init_cycle(), added gl->cycle.sigmaref=SOAP_var_value(codexcontrol,"sigmaref");
   * in cycle/*/cycle.hh
     - in gl_cycle_t, added variable sigmaref
   * in prim/emfield/_Ohm_emfield.c
     - rewrote the function find_dtau_emf() and made it function of sigmaref 
       as in the "... in Computational Weakly-Ionized Plasmadynamics" papers
     - in function find_sigma_at_interface(), made sigma at the interface the minimum of the left
       and right sigmas --> prevents a even-odd node discoupling in the potential because
       sigma is function of Te which is  function of the electric field which is itself function
       of the potential gradient
   * in cycle/share/cycle_share.c
     - in update_dU_emf_tdma() got rid of dFstardUstar contributions to the tdma
       -> not needed for stability
     - in update_dU_emf(), removed call to update_dU_emf_pdma() and substituted by update_dU_emf_tdma()
   * renamed VNN to Lc everywhere
   * in prim/fluid/_Favre_mix_Tv2/fluid_source.c
     - in function find_Schem(), determined E using find_E_at_node_from_E_at_interfaces() instead of find_Ek()
       -> needed for stability
     - in function find_Schem(), determined Te as a function of all neighbor nodes instead of only center node
       -> needed for stability
   * in prim/emfield/_Ohm_emfield.c
     - in function _mu(), made  Te=max( 200K+Tn,Te)
       -> needed for stability 
       -> makes little difference in converged solution because mue varies negligibly over 200K
       -> needs fine tuning
     - in function _mu_interface(), made Te=max( 200K+Tn,Te)
       -> needed for stability 
       -> makes little difference in converged solution because mue varies negligibly over 200K
       -> needs fine tuning
  

2015 MAR 17
   * in lib/exm/exm.c
     - added the function EXM_solve_PDMA()
   * in tools/test.c
     - added the function test_pdma()
   * in tools/Makefile
     - fixed a bug in LFLAGSLOCAL (-lexm should precede -lm)
   * in cycle/share/cycle_share.c
     - implemented new function update_dU_emf_pdma()


2015 MAR 16
   * in prim/emfield/_Ohm_emfield.c
     - in function find_dFstar_dUstar_interface_emf added the contribution of mue to the jacobian
       of the electron pressure gradient
   * in cycle/share/cycle_share.c
     - in function update_dU_emf(), limited the contribution dFstar_dUstar to the node under
       consideration while not including the contribution from the nearby nodes
     - improves stability but results in somewhat slower convergence
     - needs some more fine tuning 


2015 MAR 13
   * in prim/emfield/_Ohm/emfield.c
     - added function _dTe_dphiR_interface()
     - added function find_dFstar_dUstar_interface_emf2()
     - the latter two functions have been tested and seem to work well when mue is set to a constant
     - need to modify them to make them applicable to a situation with non-constant mue


2015 MAR 12
   * in cycle/share/cycle_share.c
     - in the function update_dU_emf(), added a call to find_dFstar_dUstar_interface_emf()
       and incorporated its derivatives within the TDMA
   * in prim/emfield/_Ohm/emfield.c
     - in function find_dFstar_dUstar_interface_emf(), added a test where the analytical derivatives
       are compared to the numerical derivatives
     - in function find_dFstar_dUstar_interface_emf(), substituted analytical derivatives by numerical derivatives
       o Seems to work quite well
       o The next step is to find the analytical derivatives that match the numerical
         derivatives  


2015 MAR 11
   * in cycle/share/cycle_share.c
     - got rid of function _A_emf_2() and all associated calls
   * in prim/emfield/_Ohm/emfield.c
     - got rid of function find_A_emf()
     - added new function find_dFstar_dUstar_interface_emf() --> needs testing
   * in prim/thermo/_NASA_1996/thermo.c
     - added function find_dTe_dEoverN_from_EoverN()  --> tested
     - moved function find_Te_from_EoverN() from prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - moved function find_Te_from_EoverN() to prim/thermo/_NASA_1996/thermo.c


2015 MAR 10
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - added function _Pk_interface()
     - added function _Tk_interface()
     - added function _Te_interface()
   * in prim/emfield/_Ohm/emfield.c
     - added function _Pk_interface_local()
     - added function _mu_interface()
     - in function find_Fstar_interface_emf(), upwinded the pressure gradient discretization
       (works great!)
     - in function find_Fstar_interface_emf(), determine the mobility at the interface directly
       from the electric field at the interface


2015 MAR 09
   * in src/tauvt.c
     - added the newest tauvt.c code from Sathyan P
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - in function _Te(), the electric field is again determined from the node
       under consideration and not from neighboring nodes 
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - in function _Pk(), added   
       if (spec==speceminus) Tk=4000.0;
     - gets rid of all the even-odd node discoupling which is due
       to the electron temperature function of electric field within the pressure
       gradients within the potential equation
     - need to find a fix for this
     

2015 MAR 06
   * in src/common.c
     - added the function make_matrix_positive()
   * in cycle/ts/share/ts_share.c
     - in function add_diffusion_jacobian(), made the K matrix positive
       by calling make_matrix_positive()
   * in prim/emfield/_Ohm/emfield.c
     - in function find_prim_mem_emf_2(), copied the electric fields and currents
       at the boundary node from the nearby inner node
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - in function _Te(), the electric field is now determined from the neighboring
       nodes rather than the node under consideration --> seems to prevent considerably
       even-odd node discoupling but requires more fine tuning 
   

2015 MAR 05
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - in function find_Dstar(), removed the cancellation of the Dstar terms
   * in prim/fluid/_Favre_mix_Tv2/fluid_post.c
     - added rhoc as a post variable


2015 MAR 04
   * in prim/fluid/_Favre_mix_Tv2/fluid_bdry.c
     - altered the wall boundary condition to include charges effects
   * in prim/fluid/_Favre_mix_Tv2/fluid_plasma.c
     - altered and added several functions to include charges effects
     - in function find_Dstar(), terms are all set to zero
     - needs further checking
   * in prim/fluid/_Favre_mix_Tv2/fluid_source.c
     - modified some functions to include charges effects
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - modified some functions to include charges effects
     - added function find_dtau_fact()
     - needs further checking
   * in prim/fluid/_Favre_mix_Tv2/fluid.hh
     - set _FLUID_CHARGES to TRUE


2015 MAR 03
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - added the function find_dtau_fact()   
     - needs further checking
   * in prim/emfield/_Ohm/emfield.c
     - in the function _mu(), set Emag to zero 
     - needs to be set back as before after further checking is done


2015 MAR 02
   * renamed add_charges_residual() to add_plasma_residual()
   * renamed add_charges_jacobian() to add_plasma_jacobian()
   * in cycle/res/_generic/res.c
     - added the Ystar*dHdX terms to add_charges_residual()
   * in cycle/ts/share/ts_share.c
     - added the Ystar*dHdX terms to add_charges_jacobian()
   * in src/common.c 
     - added the function minmod()
   * in prim/emfield/_Ohm/emfield.c
     - added the function find_E_at_node_from_E_at_interfaces();
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_bdry.c
     - in the function update_bdry_wall(), added implementation
       of anode and cathode boundary condition


2015 FEB 27
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c
     - added the function find_dH_dUstar()
     - added the function find_H()
     - added the function find_Ystar_at_interface()
   * in src/test.c
     - added the function test_dH_dUstar()
   * in src/common.c
     - in find_numerical_jacobian() and find_numerical_jacobian_2()
       made the dUstar function of Uref


2015 FEB 26
   * in prim/fluid/*/fluid.hh
     - added the flag _FLUID_CHARGES
   * in prim/metrics/_generic/metrics.c
     - renamed several functions 
     - got rid of find_metrics_interface_K as it gave the same functionality as
       find_metrics_interface
   * in cycle/res/_generic/res.c
     - added the function add_charges_residual()
   * in cycle/ts/share/ts_share.c
     - added the function add_charges_jacobian()
   * in cycle/ts/*/ts.c
     - added a call to add_charges_jacobian() just below add_diffusion_jacobian()
       wherever it appeared
   * in prim/emfield/_none/emfield.hh
     - defined _EMFIELD_ACTIONNAME


2015 FEB 25
   * in src/common.c
     - in the function find_numerical_jacobian_3(), made the dU step function of gl->cycle.Uref
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - in the function write_Uref_template(), changed the default values for Uref
     - in function find_dG_dUstar(), made modifications to the charged species transport equations
     - in funciton find_G(), made modifications to the charged species transport equations
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c
     - added the function find_Dstar()
   * in prim/_prim.h
     - added the header for the function find_Dstar()
   

2015 FEB 24
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - fixed a bug in find_Kstar()
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - fixed a bug in find_Kstar()
   * renamed Florentz to Femf
   * renamed permittivity to epsilon0
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_source.c
     - in functions find_Semf, added source terms to positively-charged species mass conservation equations
     - added new derivatives in function find_dSemf_dU() 
       o needs further checking 
   * in prim/thermo/_NASA_1996/thermo.c
     - added the function _dmukN_dTk_from_Tk_Ekstar()
  

2015 FEB 23
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - added charged species diffusion terms in find_Kstar
   * renamed nukstar to etakstar and nupsistar to etapsistar
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c
     - fixed a problem with _sigma() possibly resulting in division by zero
       in function find_alpha()


2015 FEB 18
   * in cycle/share/cycle_share.c
     - added the flag EMF_AF
     - affects the function update_U_emf
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - in the function find_Kstar(), renamed alpha to fact1
     - in the function find_Kstar(), renamed beta to fact2
     - moved the function _alpha to fluid_source.c where it is renamed _facteps
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_source.c
     - in function find_Stnorm(), renamed alpha to facteps
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c
     - added functions _betac, _betaplus, etc
     - added function find_alpha
     - added function _delta and _sigma
   

2015 FEB 17
   * in prim/emfield/_Ohm/emfield.c
     - fixed a few bugs
     - seems to be working fine at least with the non-marching cycles


2015 FEB 16
   * in prim/emfield/_Ohm/emfield.c
     - made several changes, needs some checking
   

2015 FEB 13
   * in prim/chem/_AIR_PLASMA_8s_28r_Macheret/chem.c and chem.hh
     - wrote down all references to the species in terms of specO2, specN2, speceminus, etc
     - changed the order of the species to eminus, O2minus, O2plus, N2plus, O2, N2, O, N
   * in prim/emfield/*/emfield.c
     - took away phiref from function write_emfield_template()
     - modified _xi_emf() function so that it is function of gl->cycle.Urefemf[0]
     - added function write_Urefemf_template()
   * in cycle/*/cycle.c
     - added function read_and_init_cycle_actions_emfield()
     - in function read_and_init_cycle_actions(), added a call to the action _EMFIELD_ACTIONNAME
     - in function read_and_init_cycle(), added lines to write Urefemf[] to the control file
   * in src/post.c
     - renamed "mass_flux" to "mass_flow_rate" and "MassFlux" to "MassFlowRate"
   * in prim/emfield
     - renamed the directory _Epotential to _Ohm_generalized
     - created a new directory _Ohm 


2015 FEB 12
   * in src/post.c
     - renamed some functions called in the post module part of the control file
       (imposed similar style of function names for all functions)
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - in function write_Uref_template() changed the way the reference properties are
       assigned in the control file
   * in prim/emfield/_Epotential/emfield.c
     - in function find_Vk_from_mu(), removed a potential division by zero by substituting
       "/Nk" by "/_nonzero(Nk)"
   * in cycle/_marching_window_multizone/cycle.c
     - in function write_cycle_template(), fixed a bug related to writing the IterateEMF()
       action to the control file


2015 FEB 11
   * in prim/fluid/_Favre_mix*/fluid.c
     - in write_fluid_template(), changed the default value for Nkmin to 0e0 and added
       some warning comments about this parameter
   * renamed some modules 
     - affects cycle/ts/*/ts.hh, cycle/ts/conv/*/convts.hh,
     - affects cycle/res/conv/*/convres.hh
 

2015 FEB 10
   * in cycle/ts/_explicit/ts.c and cycle/ts/_explicit_constant_dt/ts.c
     - fixed some bugs related to two functions having the same name update_U()
       (renamed one function update_Util)
   * various directories
     - renamed subdirectories and changed .config appropriately
   * in prim/fluid/*/fluid.c
     - in function write_Uref_template(), renamed omegaref to psiref
   * in prim/ebeam/_fixed/ebeam.c
     - changed the call to functions _Qbeam() and _dQbeam_dN() to include *gl as a parameter


2015 FEB 09
   * in tools/Makefile
     - fixed bug related to the compilation of cathode.c
   * various files:
     - renamed U to Ustar
     - renamed Utilde -> U
     - renamed F to Fstar
     - renamed K to Kstar
   * in prim/emfield/_None/emfield.c
     - added  _E_dot_J() and find_Florentz()
   * in src/post.c
     - in function find_body_forces_properties(), took away calls to find_Sem and find_Sebeam
       and replaced them by calls to _E_dot_J() and find_Florentz()
   * various files
     - changed the call to _Qbeam() and _dQbeam_dN() and removed N from the arguments and replaced
       by *gl
   * in prim/fluid/*/fluid_source.c
     - took away the _Omega() factor from the functions 
       find_Stnorm(), find_Semf(), find_Sebeam(), find_Svib(), find_Se(), find_StMHD(), find_Stcomp(),
       find_Saxi(), find_Squasi1D(), find_Sunsteady(), find_Schem()
     - multiplied the source terms by _Omega() in function find_Sstar()
   * in prim/fluid/_Favre_Mix/fluid_source.c and prim/fluid/_Favre_Mix_Tv/fluid_source.c
     - fixed some calls to _eps() and _psitilde() to include gl in the parameters (part of TEST only) 
     - renamed kdiv and WILCOX to gl->prim.fluid.kdiv and gl->prim.fluid.DILATDISSIP_WILCOX
       (part of TEST only)
   * prim/fluid/_Favre_Mix_Tv*/fluid_source.c
     - in function find_dSvib_dU(), set fact_evzero=1.0; at all times (used to be set to 1.0 
       only when TEST was set to TRUE) -- NEEDS CHECKING 


2015 FEB 06
   * in prim/fluid/*/fluid.c
     - in function write_Utilderef_template(), changed the %ld to %d in the wfprintf() calls
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid.c
     - in function write_Utilderef_template(), changed the default electron density and energy
   * in cycle/*/cycle.c
     - renamed write_data_file to WriteDataFile where it is meant to be read/written
       in the control file
   * in src/post.c
     - renamed _mass_flux_ave_stag_pressure to _MassFluxAveStagPressure where it is meant to be
       read/written in the control file
   * in src/init.c
     - renamed read_data_file to ReadDataFile where it is meant to be
       read/written in the control file


2015 FEB 05
   * in prim/fluid
     - changed the call to _Nn() and _N() to include gl_t *gl in the parameters
     - needed for consistency with prim/fluid/_Navier/.. 
     - various files needed to be modified in prim/fluid/* and in prim/emfield/*
   * renamed many functions and variables 
     - needed to make the titles consistent throughout the code

   
2015 FEB 04
   * renamed many functions in src, prim, and cycle
   * renamed dUe to dUemf, Uetilde to Utildeemf
   * in src/test.c
     - made some small changes (cosmetic mostly) by renaming B to dG/dU, C to dS/dU, etc.


2015 FEB 03
   * in prim/fluid/*/fluid.h
     added #include <prim/fluid/_fluid.h>
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_plasma.c
     - changed calls to _Pk() and _Tk() as function of *np instead of np
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - finished implementation of function Find_dSe_dU()
   * in tools/
     - added searchword.sh and searchstr.sh 
     - fixed all .c files (except rocket_v4) to remove warnings due to -Wmaybe_unitialized
       and -Wunused-but-set-variable flags
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid.c
     - implemented the correct thermal conductivity for the electron energy in _kappae() function
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid.c and prim/fluid/_Favre_Mix_Tv2/fluid.c
     - changed  _kappavstar(): now, it includes the nitrogen mass fraction
     - changed FindK(): took away nitrogen mass fraction multiplying kappavstar
   * renamed a few functions in prim/metrics, prim/emfield, and cycle


2015 FEB 02
   * in cycle/share/cycle_share.c
     - fixed a bug in function EMF_update_dQ(): fluxes should go from 0 to nfe-1
       not from 0 to nf-1
   * in various files
     -got rid of unused variables using the gcc -Wunused-but-set-variable flag
   * in src/common.c
     - in function _subdet(), added the following to avoid compiler warning     
       for (row=0; row<nf; row++){
         for (col=0; col<nf; col++){
           matnew[row][col]=0.0; //needed to avoid compiler warning
         }
       }
   * in tools/tarwarp.sh
     - took away the "s" flag to tar (preserving order of files can not be accomplished
       anymore while building a tarball)


2015 JAN 28
   * renamed most functions in prim/thermo and prim/fluid and prim/emfield
   * in prim/thermo/_NASA1996/thermo.c
     - added function _mueN_from_Te()
   * in prim/fluid/*/fluid_bdry.c
     - deleted FindBdryJacobian()
     - deleted FindDjacobian()
     - deleted FindDwall()
   * in cycle/ts/share/ts_share.c
     - in function FindBdryJac(), took away call to FindBdryJacobian()
   * in cycle/*/cycle.c
     - took away all lines related to IMPLICITBC
   * in cycle/*/cycle.hh
     - took away all lines related to IMPLICITBC
   * in src/post.c
     - in ReadPost_Functions() renamed _rho() to _rho_post()
     - made new function _rho_post()
   * in prim/fluid/*/fluid_post.c
     - got rid of functions POST_c(), POST_rho(), POST_Pstar(), POST_T(), POST_V, POST_H
   * in prim/fluid/*/fluid.h
     - took away calls to _Pstag() and _Tstag()
   * in prim/fluid/*/fluid_conv.c
     - took away the "static" attribute when declaring _htstar()
   * in prim/fluid/_Navier/fluid_post.c
     - added the functions _Pstar() and _htstar()



2015 JAN 27
   * in prim/fluid
     - renamed _E to _etstar
     - renamed dTdrhoE to dTdrhoetstar
     - renamed dPdrhoE to dPdrhoetstar
     - renamed PrhoE to Prhoetstar
     - renamed E to etstar
     - renamed Hbar to htstar
     - renamed _Hbar to _htstar
     - renamed mu to eta
     - renamed dTdQ to dTdUtilde
   * in prim/fluid/_Navier
     - renamed _H to _ht
     - renamed etstar to et
   * renamed FindEfield to FindE
   * renamed FindBfield to FindB
   * renamed _etav_from_Te to _zetav_from_Te
   * renamed _etae_from_Te to _zetae_from_Te
   * in src/post.c
     - got rid of javeragedTe in FindBodyForcesProperties()
     - got rid of javeragedTe in WriteBodyForcesPostFile()
   * renamed _mu to _eta
   * renamed _mustar to _etastar
   * renamed _mut to _etat
   * renamed mumem to etamem
   * renamed mut to etat
   * in prim/thermo/_NASA1996/thermo.c
     - in FindDiffCoeff() renamed mu to eta
     - added function double _dzetaedTe(double Te)
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - added function FindCe(np_t *np, gl_t *gl, long l, sqmat_t Ce)
     - not finished -- still needs work



2015 JAN 26
   * in prim/_prim.h
     - took away the call to _Te()
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - renamed _etavfromTe() to _etav_from_Te()
     - renamed _ElectronEnergyLossFunction to _etae_from_Te()
   * renamed _dvidxj() to _dVidxj()
   * renamed _V to _Vstar
   * renamed _v to _V
   * renamed V to Vstar
   * renamed v to V
   * renamed V1 to V1star
   * renamed v1 to V1
   * in src/main.c renamed -V to -v (wrongfully altered in previous steps when v was renamed to V)
   * renamed VC to VstarC
   * renamed vC to VC
   * renamed VBC VstarBC
   * renamed v_temp to V_temp
   * renamed mag_v to Vmag
   * renamed _vfromUtilde to _VfromUtilde
   * renamed vmem to Vmem
   * renamed dPdrhov to dPdrhoV
   * renamed dTdrhov to dTdrhoV
   * moved _etav_from_Te() and _etae_from_Te() from prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     to prim/thermo/_NASA1996/thermo.c
   * in prim/fluid/*/fluid_source.c
     - deleted the function _etav_from_Te()
   * moved the directory /cycle/res/conv/_FVS_1o to /cycle/res/conv/_FVS_1o+


2015 JAN 23
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - renamed _xi() to _ElectronEnergyLossFunction()
     - Finished implementation of FindSe()  --- Still need to implement FindCe thus
   * in prim/fluid/*/fluid_source.c
     - renamed turbulence production _Pk() to _Qk()
     - renamed Pk to Qk
   * in prim/fluid/*/fluid_plasma.c
     - added functions _Pk() and _Tk() and _Nn() if necessary 
   * in prim/emfield
      - renamed _Pklocal() to _Pk()
   * Moved _Pk() and _Tk() from prim/emfield to prim/fluid
   * in prim/emfield
     - changed the call from _Pk(np_t, gl_t *, long) to _Pk(np_t *, gl_t *, long, long) 
     - changed the call from _Tk(np_t, gl_t *, long) to _Tk(np_t *, gl_t *, long, long) 
     - moved _Epotential_Te to old (also altered Makefile and .config)
   * renamed EMF_Findsigma to Findsigma
   * renamed EMF_Findsigmaeff to Findsigmaeff
   * in src/post.c, in FindBodyForcesProperties(), modified the call to _Te()
  

2015 JAN 22
   * in prim/emfield/_Epotential/emfield.c
     - added the function _EdotJ()
     - added the function _EdotJe()
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - changed the source terms in FindSem()
     - added We*ee to the electron energy transport source terms in FindSchem()
     - added terms related to We*ee in FindCchem()
     - added Estar=Ee/Nn in FindSchem()
     - added electron energy loss function _xi()
     - added function FindSe()   -- Still needs work --
   * in prim/thermo
     - renamed all functions returning a property (either long or double type) to have
       a name that starts with an underscore "_"
   * renamed kboltzmann to kB


2015 JAN 21
   * in prim/emfield/_Epotential/emfield.c
     - added the function _Qjoulek()
     - rewrote the function Findmutilde()
     - moved the function _sk() to prim/thermo/
     - rewrote the function FindVk()
     - added the function FindEkmuk_mem() 
   * in prim/thermo/_NASA1996/thermo.c
     - added the function _sk()
   * Renamed _Charge() to _Ck()
   * Renamed EMF_AddDQtoQetilde() to EMF_AddDUtoUetilde()
   * Renamed Qetilde to Uetilde
   * Renamed EEF to EMF everywhere
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - in function FindSem(), changed the source term to the vib energy
       equation to call _Qjoulek()


2015 JAN 20
   * Renamed Findvk() to FindVk()
   * Renamed Findv() to FindV()
   * in prim/thermo/_perfect/thermo.c 
     - changed function _mobility_in_air()
   * in prim/thermo/_NASA1996/thermo.c 
     - changed function _mobility_in_air()
   * in prim/emfield/_Epotential
     - changed function FindVk()
     - added new function _muk() to find mobility at a node
     - changed all calls to _mobility() to _muk()
   * in prim/fluid/*/fluid_source.c
     - changed all calls to _mobility() to _muk()
   * changed EEF_ to EMF_
   * changed EXTRA_ELLIPTIC_FLUX to EMF

 
2015 JAN 19
   * in prim/fluid/_Favre_Mix_Tv_Te/fluid_source.c
     - changed the function etavFromTe() in polynomial form rather than
       in raw data form
     - in function FindSem(), took away _cN2 from the term multiplying etav 
       in the nitrogen vibration energy transport equation
   * in prim/fluid/_Favre_Mix_Tv2/fluid_source.c
     - in function FindSem(), took away _cN2 from the term multiplying etav 
       in the nitrogen vibration energy transport equation
   * renamed function K_FindMetricsAtInterface to FindMetricsAtInterface_K
   * renamed function FindYMatrix Findmutilde
   * in prim/emfield/_Epotential/emfield.c
     - got rid of function _Te()
     - changed the function call  _T(np_t) to _T(np_t, gl_t)
   * in src/data.c
     - in function ReadDataFile(), changed #ifdef UNSTEADY to
       #if defined(UNSTEADY) || defined(EXTRA_ELLIPTIC_FLUX)

    

2015 JAN 16
   * Changed Q to U in all .c .h .hh files
   * Changed Rinv to L in all .c .h .hh files
   * Changed R to Linv in all .c .h .hh files
   * Changed Roe to FDS within directory names in cycle/res/conv and 
     in cycle/ts/conv
   * Changed Steger-Warming to FVS within directory names in cycle/res/conv and
     in cycle/ts/conv
   

2015 JAN 05
   * in tools/tauvt.c
     - improved the code so that a range of Pressures or temperatures can be plotted in
       one call


2014 DEC 30
   * in tools/
     - added tauvt.c from Sathyan P.
     - fixed a bug in Makefile related to one of the object files having a .0 suffix
       instead of .o
     - fixed a compiler warning error in ringleb.c (needed to add return(EXIT_SUCCESS) at 
       end of main function)


2014 DEC 02
   * in prim/fluid/_Favre*/fluid_bdry.c
     - Got rid of function FindH() -- was only used for testing purposes and is not
       needed anymore


2014 NOV 28
   * in prim/fluid/_Favre*/fluid_source.c
     - Changed calls to FindW() and FinddWdx() and added Estar as a parameter
     - Estar is currently set to zero : need to change this in the future
   * in prim/chem/*/chem.c
     - Changed calls to FindW() and FinddWdx() and added Estar as a parameter
   * in src/test.c
     - added the function Cchem_test()
   * in prim/chem/*/chem.c
     - renamed the function testderivative() to TestdWdx()
     - Made small changes to all TestdWdx() functions
   * in prim/fluid/*/fluid_source.c
     - added function TestCchem()
   * in prim/_prim.h
     - added call to function TestCchem() 
   * in prim/chem/_AIR_PLASMA_7s_28r_Macheret/chem.c
     - in function FinddWdx() fixed a linearization mistake in reactions 7a and 7b 
     - only affects the convergence history when Qbeam is not zero


2014 NOV 27
   * in prim/chem/
     - copied the directory _AIR_PLASMA_7s_28r_Macheret to _AIR_PLASMA_8s_28r_Macheret
   * in prim/chem/_AIR_PLASMA_8s_28r_Macheret
     - added the electron species
     - made modifications to make it applicable to non-neutral plasma
     - changed the Townsend ionization reaction rates to those found in
       "Electron and ion transport equations in computational weakly-ionized plasmadynamics"
     - Added Estar to the parameters passed to FindW() and FinddWdx()
     - needs testing


2014 NOV 25
   * in prim/fluid/_Favre_mix_Tv/fluid.c
     - in WriteFluidTemplate(), changed N2VIB=TRUE to N2VIB=MACHERET
     - in ReadAndInitFluid_Actions(), made changes to incorporate MACHERET or MILLIKAN
       as possible N2VIB options
   * in prim/fluid/_Favre_mix_Tv/fluid.h
     - added N2VIB_MACHERET and N2VIB_MILLIKAN
   * in prim/fluid/_Favre_mix_Tv/fluid_source.c
     - in functions FindCvib() and _tauvt(), added N2VIB_MACHERET and N2VIB_MILLIKAN flags 


2014 NOV 24
   * in prim/thermo/_NASA1996/thermo.c in FindDiffCoeff():
     - took away Te from the parameters passed to the function FindDiffCoeff();
     - Took away the contribution to the diffusion coefficients from the ions
     - took away the ambipolar diffusion contribution to the positively charged
       species

   * in prim/fluid/_Favre_mix/fluid.c, fluid_post.c, fluid_init.c 
     - Changed calls to FindDiffCoeff() by excluding Te from parameters
   * in prim/fluid/_Favre_mix/fluid.c
     - In function _nustar(), took away special contributions to diffusion for eminus species
   * in prim/fluid/_Favre_mix/fluid_post.c
     - In function FLUID_FindPostProcVarValue() and FLUID_FindPostProcVarName()
       took away 6 post-processing variables (vion and velectron)
   * in prim/fluid/_Favre_mix/_fluid.hh
     - reduced by 6 the constant numpostvarfluid 
   * in prim/fluid/_Favre_mix/fluid_source.c
     - In function FindSchem(), fixed Te to T when calling FindW
    
   * in prim/fluid/_Favre_mix_Tv/fluid.c, fluid_post.c, fluid_init.c 
     - Changed calls to FindDiffCoeff() by excluding Te from parameters
   * in prim/fluid/_Favre_mix_Tv/fluid.c
     - In function _nustar(), took away special contributions to diffusion for eminus species
   * in prim/fluid/_Favre_mix_Tv/fluid_post.c
     - In function FLUID_FindPostProcVarValue() and FLUID_FindPostProcVarName()
       took away 6 post-processing variables (vion and velectron)
   * in prim/fluid/_Favre_mix_Tv/_fluid.hh
     - reduced by 6 the constant numpostvarfluid 
   * in prim/fluid/_Favre_mix_Tv/fluid_source.c
     - In function FindSchem(), changed the calls to function Te 

   * in prim/fluid/_Favre_mix_Tv2/fluid.c, fluid_post.c, fluid_init.c 
     - Changed calls to FindDiffCoeff() by excluding Te from parameters
   * in prim/fluid/_Favre_mix_Tv2/fluid.c
     - In function _nustar(), took away special contributions to diffusion for eminus species
   * in prim/fluid/_Favre_mix_Tv2/fluid_post.c
     - In function FLUID_FindPostProcVarValue() and FLUID_FindPostProcVarName()
       took away 6 post-processing variables (vion and velectron)
   * in prim/fluid/_Favre_mix_Tv2/_fluid.hh
     - reduced by 6 the constant numpostvarfluid 
   * in prim/fluid/_Favre_mix_Tv2/fluid_source.c
     - In function FindSchem(), changed the calls to function Te 

   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c, fluid_post.c, fluid_init.c 
     - Changed calls to FindDiffCoeff() by excluding Te from parameters
   * in prim/fluid/_Favre_mix_Tv_Te/fluid.c
     - In function _nustar(), took away special contributions to diffusion for eminus species
   * in prim/fluid/_Favre_mix_Tv_Te/fluid_plasma.c
     - Removed function FinddTedQtilde() -- already coded in fluid.c

 

2014 NOV 05
   * in src/common.c 
     - changed the step to find numerical Jacobians
       from dQ[flux]=Q[flux]/1000000.0e0+1.0e-10;
       to dQ[flux]=Q[flux]/1000000.0e0+1.0e-13;
     - affects functions FindNumJac(), FindNumJac2(), and FindNumJac3()
   * in prim/fluid/_Favre_Mix_Tv_Te/
     - continued the modification of the files to incorporate the electron energy
       equation
     - The implementation of the convection terms is complete
     - Need to test the initial conditions, boundary conditions
     - Need to implement the diffusion terms and source terms for the charged species
       and electron energy transport equations


2014 NOV 04
   * in prim/fluid/_Favre_Mix_Tv2/fluid_conv.c
     - fixed bug in function FindJacVarsFromMusclVars() related to new formulation
       of the nitrogen vibrational energy flux
   * in prim/fluid/_Favre_Mix_Tv_Te/
     - continued the modification of the files to incorporate the electron energy
       equation


2014 NOV 03
   * in prim/fluid/_Favre_Mix_Tv2/fluid_conv.c
     - fixed bug related to new formulation of N2 vib energy equation
       in function FindJacVarsAtInterface_RoeAverage() 
   * in prim/fluid/_Favre_Mix_Tv_Te/
     - continued the modification of the files to incorporate the electron energy
       equation


2014 OCT 31
   * in prim/fluid/_Favre_Mix_Tv_Te/
     - continued the modification of the files to incorporate the electron energy
       equation


2014 OCT 30
   * in prim/fluid
     - changed the name of _Favre_Mix_Vib to _Favre_Mix_Tv
     - changed the name of _Favre_Mix_Vib2 to _Favre_Mix_Tv2
     - changed the name of _Favre_Mix_Vib_Elec to _Favre_Mix_Tv_Te
   * in prim/thermo/_NASA1996/thermo.c
     - added functions Te_from_ee(), ee_from_Te(), deedTe(), he_from_Te()
   * in prim/fluid/_Favre_Mix_Tv_Te/
     - continued the modification of the files to incorporate the electron energy
       equation


2014 OCT 29
   * renamed "speciescharge" to "speciestype" variable in all .c .h and .hh files
   * in prim/fluid/*/fluid.c
     - fixed a bug in ReformatTv() function
     - Tvmin was Tmin and Tvmax was Tmax
   * in prim/fluid/_Favre_Mix_Vib_Elec/fluid.c
     - continued making changes to incorporate the electron energy equation 


2014 OCT 28
   * in prim/fluid/_Favre_Mix_Vib2/fluid.c
     - in function FinddPdx(), fixed a bug related to the new N2 vib formulation
     - in function FinddTdx(), fixed a bug related to the new N2 vib formulation
     - in function _T(), fixed a bug related to the new N2 vib formulation
   * in prim/fluid/_Favre_Mix_Vib_Elec/fluid.c
     - continued changing the file to include the electron energy equation
   * in prim/fluid/*/fluid.hh
     - added #define _FLUID_EENERGY FALSE (or TRUE for _Favre_Mix_Vib_Elec)
   * in prim/chem
     - added the directory _AIR_TEST_3s_0r
     - Includes the electron and the nitrogen and the oxygen species
     - Good to test the newly created _Favre_Mix_Vib_Elec fluid module
   * in prim/thermo/_NASA1996/thermo.c
     - made many changes to several functions to take away the electron internal energy 1.5*R*T
       and enthalpy 2.5*R*T from the mixture enthalpies and energies
     - now only the electron heat of formation is kept within h_mix and e_mix


2014 OCT 27
   * added the directory prim/fluid/_Favre_Mix_Vib_Elec


2014 OCT 24
   * in prim/fluid/_Favre_Mix_Vib2
     - modified several files again and fixed a few bugs
       related to the linearization of the fluxes
     - added the term W_N2*ev to the nitrogen vibrational energy
       equation (necessary for a N2 vib equation dependent on rho_N2 rather than rho)


2014 OCT 23
   * in prim/fluid/_Favre_Mix_Vib2
     - modified several files, and fixed the eigenvectors 
   * in src/test.c
     - added the function Ajacvars_test()
  

2014 OCT 22
   * removed prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar
     - this will part of a future paper 
     - chunks of it will be included possibly later on in prim/fluid/_Favre_Mix_Vib_Elec/doc
   * added the directory prim/fluid/_Favre_Mix_Vib2
   * changed the N2 vib flux from rho*ev to rho*cN2*ev
     - modified prim/fluid/_Favre_Mix_Vib/fluid.c
     - modified prim/fluid/_Favre_Mix_Vib/fluid_conv.c

      
2014 OCT 16
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added more text


2014 OCT 15
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added more text


2014 OCT 14
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added more text


2014 OCT 13
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added things
  

2014 OCT 08
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - fixed things


2014 OCT 07
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added section on neutrals energy transport


2014 OCT 06
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations/goveqs.tex
     - got rid of new Nitrogen Vibrational energy section
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations_laminar/goveqs.tex
     - added new sections 


2014 OCT 03
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations/goveqs.tex
     - added more documentation in Nitrogen Vibrational energy section


2014 OCT 02
   * in prim/fluid/_Favre_Mix_Vib/doc/Governing_Equations/goveqs.tex
     - added more documentation (a new section on Nitrogen Vibrational energy)


2014 SEP 27
   * in prim/fluid/*/fluid.conv.c
     - added some documentation on where the metrics should be rearrange (left
       and right eigenvectors) and where they should not be (eigenvalues)


2014 SEP 26
   * in prim/fluid/_Favre_Mix/fluid_conv.c
     - adjusted the function RearrangeMetricsEigenset2() 
     - tol is not set to 0.05 rather than 0.01
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - adjusted the function RearrangeMetricsEigenset2() 
     - tol is not set to 0.05 rather than 0.01
   * in prim/fluid/_Navier/fluid_conv.c
     - added the function RearrangeMetricsEigenset3()
     - called function RearrangeMetricsEigenset3() from functions FindRfromJacVars(), 
       FindRinvQfromJacVars(), and FindRinvfromJacVars()


2014 SEP 25
   * in prim/fluid/_Favre_Mix/fluid_conv.c 
     - rewrote the function RearrangeMetricsEigenset2() 
     - needs some more testing
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - rewrote the function RearrangeMetricsEigenset2() 
     - needs some more testing


2014 SEP 23
   * in prim/fluid/_Favre_Mix/fluid_conv.c
     - added the new eigenvector set in FindRfromJacVars()
       and FindRinvfromJacVars()


2014 SEP 19
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - finished adding the new eigenvector set in FindRfromJacVars()
       and FindRinvfromJacVars()
     - added the function RearrangeMetricsEigenset2() to alter slightly the metrics X1,X2,X3
       when X1+X2+X3 tends towards zero (a singularity point with the new eigenvector set)
       --> needs testing
   * in src/test.c  
     - added the function alpha_test() in src/test.c to test the characteristic
       variables


2014 SEP 18
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - continued adding the new eigenvector set in FindRfromJacVars()
       and FindRinvfromJacVars()


2014 SEP 17
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - started adding the new eigenvector set in FindRfromJacVars()


2014 JUL 24
   * in prim/fluid/_Favre_Mix_Vib/fluid_source.c
     - on line 894, the call _evzero(np[l]) was wrong and changed to _evzero(np[l],gl)


2014 APR 21
   * in cycle/res/conv/_Roe_1o_Multi_HuangLerat/convres.c
     - added cntbdrymax capability
     - in FindLambdaphi(), fixed a small bug related to the eigenvalues
       (commented out the line "for (flux=0; flux<nf; flux++) lambdaphi[flux][flux]=1.0;")


2014 JAN 21
   * in tools/ringleb.c
     - some small enhancements including the mirror capability


2014 JAN 20
   * added tools/ringleb.c (ringleb exact solution for the perfect gas Euler
     equations in 2D)


2014 JAN 10
   * in cycle/res/conv/_Roe_1o_Multi_HuangLerat/convres.c
     - fixed some bugs -> seems to work fine at least in 2D


2014 JAN 09
   * in cycle/res/conv
     - added the directory _Roe_1o_Multi_HuangLerat


2014 JAN 07
   * in cycle/res/conv/.config
     - moved cycle/res/conv/_Roe_2o_MUSCL_Multi to experimental


2014 JAN 06
   * in cycle/res/conv/_Roe_2o_MUSCL_Multi/convres.c
     - added a second strategy to the multidimensional terms, where the A matrices
       are substituted by some lambda matrices
       (a bit dissipative, but seems to be monotonic at least)


2014 JAN 03
   * in cycle/res/conv/_Roe_2o_MUSCL_Multi/convres.c
     - added MUSCL limiters in 2D -> works relatively good, but a bit too compressive, needs to be attenuated


2014 JAN 02
   * in cycle/res/conv
     - added the directory _Roe_2o_MUSCL_Multi


2013 DEC 31
   * in cycle/ts/conv/_Roe_1o/convts.c
     - in function AddConvJac1(), changed the call to FindJacVarsAtInterface_RoeAverage()
   * in prim/fluid/_Favre_Mix/fluid_conv.c, prim/fluid/_Favre/fluid_conv.c, prim/fluid/_Navier/fluid_conv.c
     - renamed FindJacVarsAtInterface_RoeAverage() to FindJacVarsAtInterface_RoeAverage_old()
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in prim/fluid/_Navier/fluid_conv.c
     - renamed FindJacVarsAtInterface_ArithAverage() to FindJacVarsAtInterface_ArithAverage_old()
     - renamed FindJacVarsAtInterface_PosAverage() to FindJacVarsAtInterface_PosAverage_old()
     - changed the call to FindJacVarsAtInterface_ArithAverage()
     - changed the call to FindJacVarsAtInterface_PosAverage()
   * in src/test.c 
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/_Roe_1o/convres.c
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/_Roe_1o_Pos/convres.c
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/_Roe_2o_TVD/convres.c
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/_Roe_2o_TVD_Pos/convres.c
     - changed the call to FindJacVarsAtInterface_RoeAverage()
   * in cycle/res/conv/
     - renamed _Steger-Warming_2o_TVD_POSFLCW to _Steger-Warming_2o_TVD_Pos
     - made necessary modifications to .config and Makefiles
   * in cycle/res/conv/_Roe_2o_TVD_MUSCL/convres.c
     - fixed a bug in Fint: the artificial dissipation term had to be divided by 2


2013 DEC 30
   * in cycle/res/conv/
     - added the directory _Roe_2o_TVD_MUSCL
   * in prim/fluid/_Navier/fluid_conv.c
     - added the function FindMusclVarsAtInterface_ArithAverage()


2013 NOV 05
   * in tools/prandtlmeyer.c
     - inputted an expression for y_ramp=.. as a function of x_ramp, x_lip, y_lip
       (y_ramp and x_ramp can not be specified independently: when x_ramp is user-defined,
        y_ramp must be found theoretically)


2013 OCT 03
   * in prim/fluid/_Favre_mix
     - fixed a couple of bugs, seems to run smoothly now


2013 OCT 01
   * in prim/fluid/
     - added the directory _Favre_mix
   * in prim/fluid/_Favre_mix
     - copied files from prim/fluid_Favre_mix_vib and edited to take away nitrogen vib. energy flux
 

2013 AUG 05
   * in cycle/res/conv/.config
     - moved _Roe_2o_TVD_Multi to experimental


2013 AUG 02
   * in cycle/res/conv/_Roe_2o_TVD_Multi/convres.c
     - made modifications so that the flux at the interface corresponds to the sum of the dimensionally-split
       Yee-Roe scheme with the cross terms derived from the Lax-Wendroff technique (from _Roe_1o_Multi)


2013 AUG 01
   * in config/config.c
     - added the function GetOneLetter() which is used as a replacement to GetOneNumber()
       within the function handle_choices()
     - this fix was necessary because there are now more than 9 choices when selecting
       a discretization scheme for the convection terms  
   * added the directory cycle/res/conv/_Roe_2o_TVD_Multi/



2013 APR 13
   * in src/post.c
     - modified the functions WritePostFile(): added the flag RESUMENODES which is
       set to FALSE when the domain corresponds to a x-cut
     - in functions WritePostFile_VTK(), WritePostFile_Tecplot(), WritePostFile_NodPlot(),
       only call the function ResumeNodesOnlyInZone if the flag RESUMENODES is TRUE
     - this fixes  small bug at the boundary nodes because some boundary nodes can not
       be resumed properly when the domain is one node long
       

2013 APR 05
   * in tools
     - removed sheath.*
     - added cathode.c (cathode sheath 1D theoretical solution)


2012 OCT 07
   * in cycle/ts/_Explicit_Constantdt/ts.c in function UpdateBdryConditions_Nohcase()
     - added the 2D version of the Noh case boundary conditions
     - added the references where the exact solution can be found


2012 OCT 06
   * in cycle/share/cycle_share.c, function ProcessCodeRuntime(), added gl->time
     as the variable "time" to be used within the Runtime() module -- this only takes
     effect when using the time stepping method _TS_EXPLICIT_CONSTANTDT
   * in cycle/ts/_Explicit_Constantdt/ts.c added UpdateBdryConditions_Nohcase()
     - for now, the call to this function can not be triggered from the control file 


2012 OCT 03
   * in cycle/ts/_Explicit_Constantdt/ts.c added gl->time+=gl->dt; to UpdateQtilde() and FinddQ()
   * in src/common.h, added the variable "time" to gl_t when _EXPLICIT_CONSTANTDT is declared
   * in cycle/_Standard/cycle.c, added gl->time=0.0 at the start of the cycle when 
     _EXPLICIT_CONSTANTDT is declared


2012 OCT 02
   * Got rid of the TVD limiters within the time derivative, and made the time
     derivative a conservative first-order backward stencil
     - in prim/fluid/_Navier/fluid_source.c, took away TVDlimiter2() and TVDlimiter3()
       and altered the function FindSunsteady()
     - in prim/fluid/_Favre_Mix_Vib/fluid_source.c, took away TVDlimiter2() and TVDlimiter3()
       and altered the function FindSunsteady()
     - in src/common.h, took away Qtildem2 and Qtildem3 from npbs_t
     - in src/data.c, took away Qtildem2 and Qtildem3 from ReadDataFile_ascii(),
       ReadDataFile_binary(), and ReadDataFile()
     - in src/main.c, in main(), took away -im2 and -im3 flags
     - in src/data.h, took away M2 and M3 boolean variables and name_m2 and name_m3 from input_t
     - in src/test.c, in main(), took away -im2 and -im3 flags


2012 SEP 29
   * in cycle/ts, added _Explicit_Constantdt directory
     - marches in time giving the same time step to all nodes
   * in src/common.h, added the variable dt in the structure gl_t
     to be used with the Explicit_Constantdt strategy


2012 SEP 6
   * in lib/gridg/doc/contruct.tex
     - fixed a mistake related to the 2D example of the ReverseIndex() command


2012 AUG 19
   * in cycle/share/cycle_share.c:
     - reduced maxloopthread and maxzonethread from 16384 to 256
     - setting it to 16384 creates too many processes that linux can not (yet?) handle
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - added the function FindFint_new() that tests (in 2D) some alternate formulations
       of the multidimensional additions to the Roe flux (so far, none of the alternate
       formulations proved to be as good as the original FindFint()


2012 AUG 13
   * added how to send a USR1 signal in USAGE


2012 AUG 12
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - Further modified the function FindFint() so that the multidimensional contribution
       is not added at the boundary (this is necessary when computing 3D flows for some reason)
     - Modified the function FindAabsfromJacVars(): the eigenvalues are now determined
       by calling the function FindLambdapfromJacVars2() instead of FindLambdapfromJacVars();
       This affects only the eigenvalues on the denominator of the multidimensional terms through zetabar3; 
   * in prim/fluid/_Navier/fluid.c and in prim/fluid/_Favre_Mix_Vib/fluid.c
     - in function WriteFluidTemplate() added zetabar3 to the list of user-defined parameters
       Setting zetabar3=0.1 while keeping zetabar1=0.0 results in much improved stability and does not 
       sacrifice on the resolution within viscous layers  
     - in function ReadAndInitFluid_Actions(), added zetabar3 to the variables read from the control file  
   * in prim/fluid/_Navier/fluid.hh and in prim/fluid/_Favre_Mix_Vib/fluid.hh
     - added zetabar3 to jacvars_t and to gl_fluid_t   
   * in prim/fluid/_Navier/fluid_conv.c 
     - added the function FindLambdapfromJacVars2() -- it's the same as FindLambdapfromJacVars() except
       that all the eigenvalues are modified using the parameter zetabar3 
     - Modified the functions FindJacVarsAtInterface_RoeAverage() FindJacVarsAtInterface_PosAverage(),   
       FindJacVarsAtInterface_ArithAverage(), FindJacVars(), FindJacVarsFromMusclVars(): added an 
       initialization of zetabar3 right after the initialization of zetabar1 and zetabar2
   * in prim/fluid/_Favre_Mix_Vib/fluid_conv.c
     - added the function FindLambdapfromJacVars2() -- it's the same as FindLambdapfromJacVars() except
       that all the eigenvalues are modified using the parameter zetabar3 
     - Modified the functions FindJacVarsAtInterface_RoeAverage(), FindJacVars(), FindJacVarsFromMusclVars(): 
       added an initialization of zetabar3 right after the initialization of zetabar1 and zetabar2
        


2012 AUG 11
   * in cycle/share/cycle_share.c
     - changed maxloopthread from 256 to 16384
     - changed maxzonethread from 16 to 16384
   * in prim/fluid/
     - changed the name of _Favre_Multi_Vib to _Favre_Mix_Vib
   * in prim/fluid/_Favre_Mix_Vib/fluid.c
     - in the function _ktilde(), changed:
          tmp=max(min(gl->prim.fluid.kdiv,_psi(np)*_mu(np,gl)/_rho(np)), ...
       by:
          tmp=max(min(gl->prim.fluid.kdiv,_psitilde(np,gl)*_mu(np,gl)/_rho(np)), ...
     - this makes the integration more robust in regions where psi is close to zero
       or becomes negative
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - Modified the function FindFint() so that the multidimensional contribution
       is not added at the boundary (this is necessary when computing 3D flows for some reason
       -- need to check into this further)


2012 AUG 10
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - copied convres.c to convres.old2
     - cleaned up convres.c (got rid of the unused functions and variables)
   * in cycle/_Standard/cycle.c, cycle/_Multizone/cycle.c, cycle/_Marching_Window/cycle.c
     and cycle/_Marching_Window_Multizone/cycle.c:
     - in the function WriteCycleTemplate(), took away the (unnecessary) declaration
       of the variable flux
   * in prim/fluid
     - changed the name of _Favre_Multispecies_N2vib to _Favre_Multi_Vib


2012 AUG 09
   * in prim/fluid/_Navier/fluid_bdry.c
     - deleted the InflowOutflow subsonic boundary condition
     - changed the SubsonicOutflow subsonic boundary condition so that the static pressure
       is fixed (rather than the stagnation temperature)
   * in cycle/share/cycle_share.c
     - in the function update_Qtilde_from_dQ(), found a bug: when SMALLTHREADS is set to TRUE,
       it is necessary to do a mutex lock when updating gl->effiter_Q when using zone threads
   * in cycle/ts/_Implicit_AF/ts.c, cycle/ts/_Explicit/ts.c, cycle/ts/_Implicit_MAF-DDADI
     - in the function update_dQ(), found a bug: it is necessary to do a mutex lock when updating gl->effiter_Q


2012 AUG 07
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - fixed a bug in the function FindFint()
       (the 2D code used both fluxadd1 and fluxadd2 despite only one of them having been computed)
       (only affects 2D results when using gcc compiler)
   * in prim/fluid/_Navier/fluid_bdry.c
     - fixed a bug in the function UpdateBdry_SubsonicOutflow()
       (the flow speed at the boundary is fixed to zero if the flow flows away from the boundary
        instead of the opposite as it used to be)


2012 AUG 06
   * in prim/fluid/_Navier/fluid_bdry.c
     - added the function UpdateBdry_SubsonicOutflow()
       (not tested yet)


2012 AUG 02
   * in prim/fluid/_Navier/fluid_bdry.c
     - added the function UpdateBdry_InflowOutflow()
     - added the function UpdateBdry_SubsonicInflow()


2012 AUG 01
   * in cycle/share/cycle_share.c
     - Added the function NodeOffsetFromCnt()
     - Made a modification to the function UpdateBdryNode()
       * when updating the corner boundary nodes, the offset is first set to 0, then to +1, then to -1.
         (previously, the offset was first set to -1, 0, then +1)
       * this fixes a bug in 3D with the boundary nodes located in the corner (the bug was
         that the boundary node properties were not necessarily set to those of the nearest
         inner node, but sometimes set to those of the next-nearest boundary node)
   * changed the way Qtilderef is read in the cycle module:
     - in prim/fluid/_Navier/fluid.c, added the function WriteQtilderefTemplate();
     - in prim/fluid/_Favre_Multispecies_N2vib/fluid.c, added the function WriteQtilderefTemplate();
     - in cycle/_Marching_Window_Multizone/cycle.c, 
        cycle/_Marching_Window/cycle.c
        cycle/_Multizone/cycle.c
        cycle/_Standard/cycle.c
       o modified ReadAndInitCycle_Actions();
       o modified WriteCycleTemplate();


2012 JUL 31
   * in cycle/res/conv/_Roe_1o_Multi/convres.c
     - added a 3D version of the multidimensional FDS method 
       (seems to work fine, but needs more testing)
 

2012 JUL 24
   * in config/config.c
     - added "-e" flag to the "#!/bin/sh" command in the function output_makefileheader()
     - added "-Wfatal-errors" flag to the flags passed to the ICC and GCC compilers in function
       output_makefileheader()


2012 JUL 23
   * added yet another flux approach (#6) in cycle/res/conv/_Roe_1o_Multi/convres.c
     - works even better than previous approach #5 (very high resolution for expansion fans)
     - has higher resolution than a *second*-order yee-roe scheme for all cases considered
 

2012 JUL 21
   * added yet another 2 new flux approaches (#4 and #5) in cycle/res/conv/_Roe_1o_Multi/convres.c
     - the latest one (#5) works superbly well


2012 JUL 20
   * added 2 new flux approaches in cycle/res/conv/_Roe_1o_Multi/convres.c
   * added the contravariant velocity function _V() in prim/_prim.h 
     - used only by cycle/res/conv/_Roe_1o_Multi/convres.c


2012 JUL 19
   * fixed some issues regarding the metrics Jinv/Omega (it used to be that the code
     would check with asserts if Jinv/Omega was positive -- this is not necessary, as
     Jinv/Omega can be negative and be physically meaningful) 
     - in prim/fluid/_Navier/fluid.c, in function AddDQtoQtilde(), removed an assert 
       checking for Omega>0.0  
     - in prim/fluid/_Navier/fluid.c, in function FindQ(), 
       removed an assert checking for Omega>0.0  
     - in prim/fluid/_Favre_Multispecies_N2vib/fluid.c, in function AddDQtoQtilde(), 
       removed an assert checking for Omega>0.0  
     - in prim/fluid/_Favre_Multispecies_N2vib/fluid.c, in function FindQ(), 
       removed an assert checking for Omega>0.0  
     - in prim/metrics/_generic/metrics.c, in function FindMetricsNode(), removed an
       assert checking for Jinv>0.0
     - in prim/metrics/_generic/metrics.c, in function FindMetricsInterface(), removed two
       asserts checking for Jinv>0.0
     - in cycle/share/cycle_share.c, in function _xi(), removed an assert checking for 
       Omega>0.0
     - in cycle/share/cycle_share.c, in function _xi(), changed the way xi is computed 
       (used to be proportional to fabs(Res)/Omega/Qtilderef, now is proportional 
       to  fabs(Res/Omega/Qtilderef)
   * in prim/fluid/_Navier/fluid_conv.c, in function FindMetricsInterface2();  
     changed assert(sum>0.0e0); for assert(sum>=0.0e0);
   * in prim/metrics/_generic/metrics.c in function FindMetricsInterface(), everytime
     there was a division by *Jinv, changed to a division by _nonzero(*Jinv)
   * in prim/metrics/_generic/metrics.c, added the function FindMetricsInterface3(np_t *np, 
     gl_t *gl, long lL, long lR, long theta, long theta2, metrics_t *metrics)
     - this is used by the Roe_Multi scheme (necessary because the metrics.X[dim] at the interface
       is not necessarily X[dim][theta] but is allowed to be X[dim][theta2])
     - also modified prim/_prim.h and prim/metrics/_metrics.h


2012 JUL 18
   * in .makefile-header, changed /bin/sh to /bin/sh -e
     - this will force the shell to exit upon encountering an error
   * there is a bug in cycle/res/conv/_Roe_1o_Multi/convres.c
     - the lambda matrices are not obtained from the right metrics
     - will fix this tomorrow
 

2012 JUL 17
   * Further modified cycle/res/conv/_Roe_1o_Multi/convres.c
     - the scheme remains high-resolution and with very few oscillations


2012 JUL 16
   * Modified cycle/res/conv/_Roe_1o_Multi/convres.c
     - the scheme is now veyr high-resolution but a bit oscillatory  


2012 JUL 14
   * Added Roe_1o_Multi in cycle/res/conv/
     

2012 MAR 03
   * in prim/_prim.h
     - added the function FindJacVarsAtInterface_ArithAverage();
   * in prim/fluid/_Navier/fluid_conv.c
     - added the function FindJacVarsAtInterface_ArithAverage();
   * in cycle/res/conv/_Roe_1o_Pos/convres.c
     - added the option for arithmetic average at the interfaces
     - rewrote the function FindLambdaMinusPlus_RoePos() in terms of the matrices Y and Z instead of B and C
       ( the algorithm is the same thus)
   * in cycle/res/conv/_Roe_2o_TVD_Pos/convres.c
     - added the option for arithmetic average at the interfaces
     - rewrote the function FindLambdaMinusPlus_RoePos() in terms of the matrices Y and Z instead of B and C
       ( the algorithm is the same thus)


2012 FEB 29
   * in cycle/_Positive/cycle.c
     - found a bug
     - the loop went through only the first dimension
     - now, made the loop go from 1 to nd


2012 FEB 26
   * found a bug in cycle/ts/_Explicit/ts.c
     - The pseudotime step used to be calculated just prior to the update of the node properties within the same loop
     - this worked fine for all schemes except for the Roe_1o_Pos and Roe_2o_Pos schemes which have
       a pseudotime step function of the nearby nodes
     - now, the pseudotime step is found for all nodes prior to any update of the properties
 


2012 FEB 20
   * in cycle/res/conv/_Roe_1o/convres.c and in cycle/res/conv/_Roe_2o/convres.c
     - in function AddConvRes(), made changes to calculate the flux the interface only once
       (used to calculate the fluxes Fm1h and Fp1h at each node; now Fm1h is set to the
        previous Fp1h)
     - in function FindFint(), made all terms function of the metrics at the interface
       (used to calculate F using the metrics at the corresponding node)
   * in cycle/res/conv/_Roe_1o_Pos/convres.c and in cycle/res/conv/_Roe_2o_Pos/convres.c
     - in function AddConvRes(), made changes to calculate the flux the interface only once
       (used to calculate the fluxes Fm1h and Fp1h at each node; now Fm1h is set to the
        previous Fp1h)
     - added the capability to use roe averaged properties at the interfaces through the flag ROEAVERAGE
       (additionally to "pos averaged" ones which are used by default)
     - added the capability to use roe eigenvalues (through the flag ROEEIGENVALUES)
       (additionally to the "positive" eigenvalues which are used by default) 


2012 FEB 18
   * in cycle/res/conv/_Roe_1o_Pos/convres.c
     - modified the functions FindLambdaMinus and FindLambdaPlus
       (now the metrics are determined at the interface rather than at the node)
   * in cycle/res/conv/_Roe_2o_TVD_Pos/convres.c
     - modified the functions FindLambdaMinus and FindLambdaPlus
       (now the metrics are determined at the interface rather than at the node)
   * in cycle/res/conv/_Roe_2o_TVD_Pos/convres.c, subroutine FindFint
     - found a bug: FindMetricsInterface was called after FindJacvars which itself
       depends on FindMetricsInterface


2012 FEB 17
   * further improved _Roe_2o_TVD_Pos/convres.c in cycle/res/conv
   * in prim/fluid/_Navier/fluid_conv.c, removed the function FindMetricsInterface2()
   * in prim/fluid/_Favre_Multispecies_N2vib/fluid_conv.c, removed the function FindMetricsInterface2()
   * in prim/fluid/_Navier/fluid.c, removed the functions Finddtau(), FindGamma(), and FindGammaInv()
   * in prim/fluid/_Favre_Multispecies_N2vib/fluid.c, removed the functions Finddtau(), FindGamma(), and FindGammaInv()
   * in cycle/share/cycle_share.c:
     - added the function Finddtau()
     - added the function FindGamma()
     - added the function FindGammaInv()
     - modified the dunction Finddtau following the non-linear stability condition based on the rule of the
       positive coefficient; i.e., dtau<1.0/(lambdaplus-lambdaminus)
   * in prim/metrics/_generic/metrics.c:
     - added the function FindMetricsInterface2()
     - added the function FindMetricsNode2()
   * in cycle/res/conv/*/convres.c
     - added the functions FindLambdaMinus() and FindLambdaPlus()
   * in prim/fluid/_Navier/fluid.hh
     - got rid of the variable delta part of jacvars_t
     - delta was a variable used to test the Pos Average, and was always set to zero 

   
2012 FEB 16
   * Improved _Roe_2o_TVD_Pos/convres.c in cycle/res/conv

 

2012 FEB 15
   * Deleted _Roe_1o_Pos in cycle/res/conv
   * Renamed _Roe_1o_Pos_iter to _Roe_1o_Pos cycle/res/conv
     - _Roe_1o_Pos can be obtained from _Roe_1o_Pos_iter by setting numiter=0
   * Added _Roe_2o_TVD_Pos in cycle/res/conv
     - started the implementation of the Gminus and Gplus matrices 
   
   

2012 JAN 30
   * Renamed _Roe_1o_POS2 to _Roe_1o_Pos in cycle/res/conv
   * Renamed _Roe_1o_POS6 to _Roe_1o_Pos_iter in cycle/res/conv
   * Deleted _Roe_1o_POS* in cycle/res/conv
   * Added a CONVERGENCE flag to _Roe_1o_Pos_iter 
     - doesn't work so well
     - by default, this is turned off
 

2012 JAN 27
   * Added the directory cycle/res/conv/_Roe_1o_POS7
     - not as good as _Roe_1o_POS6


2012 JAN 26
   * some small changes to cycle/res/conv/_Roe_1o_POS6


2012 JAN 25
   * Added the directory cycle/res/conv/_Roe_1o_POS6
     - is more accurate than Roe_1o_POS5
     - suffers from less convergence hangs than Roe_1o_POS5


2012 JAN 24
   * Added the directory cycle/res/conv/_Roe_1o_POS5
     - is more accurate than Roe_1o_POS2 
     - suffers from more convergence hangs than Roe_1o_POS2


2012 JAN 19
   * Added the directory cycle/res/conv/_Roe_1o_POS3
     - doesn't work as well as Roe_1o_POS2


2012 JAN 16
   * in the file cycle/res/conv/_Roe_1o_POS2/convres.c
     - improved the Roe pos model 
     - works a bit better than JAN 13 version


2012 JAN 13
   * Added the directory cycle/res/conv/_Roe_1o_POS2
     - this consists of a positivity-preserving Roe scheme that introduces little dissipation in
       laminar boundary layers
     - works reasonably well at least for a Mach 2 laminar boundary layer


2012 JAN 03
   * in prim/fluid/fluid_conv.c
     Updated the FindJacVarsAtInterface_PosAverage() function 
     Updated the FindLambdapfromJacVars() function


2011 DEC 30
   * Updated the FindJacVarsAtInterface_PosAverage() function in the file
     prim/fluid/fluid_conv.c 
     - helps at hypersonic speeds but not much at low supersonic speeds


2011 DEC 28
   * in prim/fluid/_Navier/fluid_conv.c
     - added the subroutine FindJacVarsAtInterface_PosAverage()
       o for now, is used within the Roe_1o_POS method)
       o corresponds to arithmetic averaging
   * modified cycle/res/conv/_Roe_1o_POS/convres.c
     - now uses FindJacVarsAtInterface_PosAverage() instead of FindJacVarsAtInterface_RoeAverage()


2011 DEC 26
   * Added the diffusion to prim/fluid/_Navier
     - Renamed the directory prim/fluid/_Euler to prim/fluid/_Navier
     - In prim/fluid/_Navier/fluid.c, put relevant terms within the functions FindK(),
       FindBJacobian(), FinddTdx(), and FindG()
     - in fluid_bdry.c, added the wall boundary conditions
   * Renamed the subroutine BdryFluidZeroSpeed() to SetBdryInterfaceFluxtoBdryNodeFlux() in all files
   * In prim/fluid/_Favre_Multispecies_N2vib/fluid_bdry.c, in subroutine
     SetBdryInterfaceFluxtoBdryNodeFlux(), set the return value to FALSE for all boundaries (used to
     be set to TRUE for the wall boundary conditions)
   * In prim/fluid, deleted the directory _Favre_Multispecies
   


2011 DEC 25
   * fixed the Roe_1o_POS method: now works 


2011 DEC 24
   * in cycle/res/conv/, added the method _Roe_1o_POS
     (needs more work: as it is written, the method collapses to a 1st order SW scheme)
  

2011 NOV 04
   * in prim/fluid/_Favre_Multispecies_N2vib/fluid.c
     In the subroutine _mut() and FindPrimMem(, fixed a bug found by Kim Minha: there was a 0.5 factor
     missing within the sqrt here:
     np[l].wk->mut=rho*max(k,0.0e0)/max(psitilde,35.0/12.0*sqrt(0.5*sum)); 
   * in prim/fluid/_Favre_Multispecies_N2vib/doc/Governing_Equations/report.tex
     added the missing \frac{1}{2} within the \sqrt of Eq. (27)



2011 OCT 20
   * in lib/latex/warpdoc.cls, added the option [mtpro]
     - To date, mtpro was specified by default, and this made it impossible to compile the latex 
       documents on machines on which the mtpro2 fonts were not present 


2011 AUG 31
   * Fixed a bug in config/config.c
     - did not accept the choice 'none' when selecting the type of threading
   * in config/config.c, added the choice for icc compiler
   * in cycle/share/cycle_share.c, uncommented #define SMALLTHREADS and #define VERYSMALLTHREADS
     - boosts the performance by 15% or more 
   * in lib/soap/soap.c, subroutine SOAP_fatalerror(), forgot to initialize retval=0
     - this omission used to generate a compiler warning with icc
     - this did not create problems with the code because the code would always exit(EXIT_FAILURE)
       prior to returning retval


2011 AUG 11
   * Fixed a bug in cycle/share/cycle_share.c
     - in subroutine SolveMultizone, after "Find dQ for inner nodes", took away
        "if (cnt>0) JoinAllThreadsZone(cntthread, pthread, FALSE);"
       and replaced with
        "if (cntthread>0) JoinAllThreadsZone(cntthread, pthread, FALSE);"
   * Added OPENMP threading support
     - added the choice to openmp when doing make config (altered the file config/config.c)
     - added the library -lgomp to the linker options (altered the file src/Makefile)
     - NOTE: so far, no subroutine has been altered for openmp (still working on this)


2011 MAY 25
   * in the file prim/fluid/_Favre_Multispecies_N2vib/fluid_conv.c
     - in the function FindJacVarsAtInterface_RoeAverage(), fixed a "bug": 
       took away the lines "kL=1.0; kR=0.0;"
     - took away all calls to zetap variable in jacvars structure
   * in the file prim/fluid/_Favre_Multispecies_N2vib/fluid.hh
     - took away variable zetap in jacvars structure
   * in prim/fluid/_Favre_Multispecies_N2vib/fluid_bdry.c
     - took away function FluidBdryInterfaceCondition(long nodetype)
     - added function BdryFluidZeroSpeed(long nodetype)
   * in cycle/res/conv/_Steger-Warming_2o_TVD_MUSCL/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD_POSFL/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW/convres.c
     in cycle/res/conv/_Steger-Warming_1o/convres.c
     in cycle/res/conv/_Roe_1o/convres.c
     in cycle/res/conv/_Roe_2o_TVD/convres.c
     - modified the boundary conditions so that:
       o the Roe schemes use a flux at all boundaries dependent on the inner and boundary node
       o the Steger-Warming schemes use a flux at the zerospeed boundaries dependent on the boundary node only
       o the Steger-Warming schemes use a flux at all non-zerospeed boundaries dependent on 
         both the inner node and boundary node


2011 MAY 24
   * Renamed the function AddConvRes1() to AddConvRes()
   * in Favre_Multispecies_N2vib/fluid_conv.c, spotted a bug in FindJacVarsAtInterface_RoeAverage(). 
     - tmpR=_Omega(npR,gl); used to be tmpR=-_Omega(npR,gl);
   * added the directory prim/metrics/_generic_old (old way of determining the metrics)


2011 MAY 20
   * in prim/fluid/_Favre_Multispecies_N2vib/fluid_bdry.c
     - in all instances where PRESERVE_MOMENTUM is in effect, took away the addition
       of the momentum to the pressure at the boundary nodes if BDRYDIRECFOUND is FALSE
     - added the function FluidBdryInterfaceCondition(long nodetype)
   * in prim/fluid/_Euler/fluid_bdry.c
     - in all instances where PRESERVE_MOMENTUM is in effect, took away the addition
       of the momentum to the pressure at the boundary nodes if BDRYDIRECFOUND is FALSE
     - added the function FluidBdryInterfaceCondition(long nodetype)
   * in prim/_prim.h
     - added the constants FLUIDBDRYINTERFACE_IN, FLUIDBDRYINTERFACE_OUT, FLUIDBDRYINTERFACE_IN_OUT
   * in cycle/res/conv/_Steger-Warming_2o_TVD_MUSCL/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD_POSFL/convres.c
     in cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW/convres.c
     in cycle/res/conv/_Steger-Warming_1o/convres.c
     in cycle/res/conv/_Roe_1o/convres.c
     in cycle/res/conv/_Roe_2o_TVD/convres.c
     - modified the boundary conditions so that the wall BC follows the pre-march-2011 approach
       and the other BCs follow the post-march-2011 approach


2011 MAY 19
   * in cycle/res/conv/_Steger-Warming_2o_TVD_MUSCL/convres.c, modified the 
     function AddConvRes1();
     - added the pre-march-2011 of specifying the flux at the boundary 
     - the pre-march-2011 can be selected by setting BCAPPROACH=1
     - the post-march-2011 approach can be selected by setting BCAPPROACH=2
     

2011 MAY 13
   * renamed the directory prim/fluid/_Favre to prim/fluid/_Favre_Multispecies_N2vib
   * fixed a mistake in the document prim/fluid/_Favre_Multispecies_N2vib/doc/Governing_Equations/
     - in Eq. (37) for chi_w, the sign between the first two terms in the last bracket was wrong
       (in Wilcox's paper, it is "+", but it was written "-" in report.tex)
   * fixed a mistake in the file prim/fluid/_Favre_Multispecies_N2vib/fluid_source.c
     - in the function _chiw(), changed 
       "_dvidxj(np,l,gl,k,i)-_dvidxj(np,l,gl,i,k)-sum2"
       to
       "_dvidxj(np,l,gl,k,i)+_dvidxj(np,l,gl,i,k)-sum2"


2011 MAY 09
   * in prim/fluid/_Favre/fluid_conv.c
     - added function void FindRinvQfromJacVars()
     - added function void FindQfromJacVars() needed by FindRinvQfromJacVars()


2011 APR 23
   * fixed a bug in cycle/res/conv/_Roe_2o_TVD/convres.c in function AddConvRes1()
     - FindJacVarsAtInterface_RoeAverage() sometimes used the properties of a node outside of the
       domain
     - this should not affect the solution thus, because the jacvars found from the non-existing
       node were not used afterwards
   * added a check for xi being NAN in the function _xi() part of cycle/share/cycle_share.c
 

2011 APR 20
   * improved the eigenvector sets in prim/fluid/_Euler/fluid_conv.c
   * got rid of some unused variables in cycle/res/conv/_Steger-Warming-2o_TVD_POSFLCW/convres.c


2011 APR 19
   * updated the call to FindQFromMusclVars() in cycle/res/conv/_Steger-Warming-2o_TVD_MUSCL/convres.c
     - now includes variable *gl as a parameter
   * improved the function FindRinvQfromJacVars() in the file prim/fluid/_Euler/fluid_conv.c
     - now, it performs the matrix multiplication Rinv*Q only if the vector RinvQ is not
       specified explicitly
     - results in less computing work 


2011 APR 18
   * Implemented a new set of eigenvectors in prim/fluid/_Euler/fluid_conv.c (eigenset#6)
     - this set is positivity preserving for xi=1.8 and yields characteristics variables that
       are all non-zero
   * Fixed a bug in cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW
     - Did not compute Rinv in FindFplusFminus()
     - This bug was present since incorportating the call to FindRinvQfromJacVars() a couple of
       days ago
   

2011 APR 17
   * made a small change to cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW
     - added a condition  (which is set to TRUE by default) to compute the positivity preserving
       limiter or not


2011 APR 16
   * added a second and third set of eigenvectors to prim/fluid/_Euler/fluid_conv.c
     - Notes:
       eigenset=1 yields the eigenvectors recommended by mathematica (not positivity-preserving)   
       eigenset=2 yields the same eigenvalues and eigenvectors as those specified in "The Use of
                  Domain Decomposition in Accelerating the Convergence of Quasi-Hyperbolic 
                  Systems, by Parent and Sislian, JCP, 2002 (Positivity-Preserving)
       eigenset=3 is a mix of the eigenvectors of eigenset#1 and eigenset#2
                  (only coded in 2D, and not positivity-preserving)
   * added the following lines in cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW:
       for (flux=0; flux<nf; flux++) Gplus[flux]=sign(Gplus[flux])*max(fabs(Gplus[flux]),1e-30);
       for (flux=0; flux<nf; flux++) Gminus[flux]=sign(Gminus[flux])*max(fabs(Gminus[flux]),1e-30);
     - the latter are needed to ensure that Gplus or Gimus are never zero 
       (part of the assumptions in deriving the positivity-preserving method). 
   * added an assertion for Jinv>0.0 in prim/metrics/_generic/metrics.c
     (only turned on if runtime debugging enabled)


2011 APR 15
   * fixed a bug in prim/fluid/_Euler/prim_conv.c
     - the eigenvalues in FindLambdapfromJacVars() used to be defined as V,V,V+a,V-a
       instead of V,V,V-a,V+a
     - affects the subroutine FindLambdapfromJacVars() only
   * changed the name of the module WIFANS_kpsi to Favre
     - changed prim/fluid/_Favre/fluid.hh
     - changed src/common.h
   * Added in prim/fluid/_Euler/fluid.hh
     #define _FLUID_N2VIB FALSE 
   * fixed some bugs in prim/fluid/_Euler/fluid_conv.c
     - affects 3D algorithms only
     - bug was due to the function _nonzero not always used when determining Rinv in 3D
   * fixed another bug in prim/fluid/_Euler/fluid_conv.c:
     in FindFfromJacVars(), (jacvars.a2/(jacvars.gamma=1.0) is changed to (jacvars.a2/(jacvars.gamma-1.0)
   * In function FindXimax(), added a condition to verify if xi is nan or negative
     - when so, output error message and stop the computing process
   * in file prim/metrics/_generic/metrics.c, added some assertions to check whether
     Jinv is positive or not
 

2011 APR 14
   * fixed a potential bug in prim/fluid/_WIFANS_kpsi/fluid_conv.c
     - affects the function void UpdateBdryPrim()
     - added the line npC=np[l_C]; after  FindPrim(np,l_C,gl);
     - necessary eventhough npC was previously set to np[l_C] because 
       the metrics on node l_C were updated since then
   * in src/test.c, in function Roeaverage_test(), added a screen output
     "init. cond. must be discontinuous between (ie-is)/2+is-1 and (ie-is)/2+is"
   * in prim/fluid/_WIFANS_kpsi
     - added the variable *gl to the call parameters of several functions (_P, _T, _Hbar,
       etc) that were redefined recently
     - renamed the function POST_Pstar() to POST_P()
   * further improved subroutines in prim/fluid/_Euler/


2011 APR 13
   * Further improved the Euler fluid module in prim/fluid/_Euler
   * made changes to src/post.c (because gl is now part of the arguments 
     of the functions POST_P, POST_rho, etc)
   * made changes to src/post.c: now, the computing of the plasma
     global properties (lorentz force, heat, work done, etc) is only
     done if _FLUID_PLASMA is defined in fluid.hh
   * fixed as bug in src/control.c: when _FLUID_MULTISPECIES was not defined
     in fluid.hh, the first comment was not closed correctly when writing the
     "dummy" control file
   * in src/test.c, took away the calls to FindH() and FindDjacobian()
     - these functions were only used for testing purposes in fluid/_WIFANS_kpsi
     - because they were taken away from test.c, these functions are not used anywhere 
       anymore
 

2011 APR 12
   * Further improved the Euler fluid module in prim/fluid/_Euler


2011 APR 11
   * Further improved the Euler fluid module in prim/fluid/_Euler


2011 APR 08
   * Improved further the Euler fluid module in prim/fluid/_Euler


2011 APR 07
   * Improved Euler fluid module in prim/fluid/_Euler/
   * added Euler module variables in npwk_t structure in src/common.h


2011 APR 06
   * Started working on the Euler fluid module
     -> created directory prim/fluid/_Euler
     -> edited file prim/fluid/_Euler/fluid.c
     

2011 APR 02
   * changed the way the entropy correction is applied to the eigenvalues. Now, the entropy
     follows the one outlined in the paper "Positivity-Preserving Flux-Limited Method for Compressible
     Fluid Flow", B. Parent, CAF, 2011
     -> affects file prim/fluid/_WIFANS_kpsi/fluid_conv.c


2011 MAR 12
   * in cycle/res/conv/_Steger-Warming_MUSCL/convres.c, added the superbee and the van-leer limiters
   * in prim/fluid/_WIFANS_kpsi/fluid_bdry.c, changed the boundary conditions for the symmetry
     and the wall boundary nodes
     -> now, the algorithm is such that the wall pressure is never less than 1/10 of the pressure
        at the near wall node


2011 MAR 11
   * in prim/thermo/_NASA1996/thermo.c and prim/thermo/_perfect/thermo.c, modified
     the functions dskdT_from_T(), sk_from_T(), Tv_from_ev(), ev_from_T(), Tv_from_ev()
     -> implemented a different ev vs Tv function, so that ev is linear with Tv for Tv<Tvlim
        with Tvlim=200K or so. 
     -> gets rid of Tvmin clipping problem when it is less than 30K 
   * in cycle/res/conv/*/convres.c, changed the way the flux is determined at the interface
     between the near boundary node and the boundary node. 
     -> flux used to be fixed to the flux at the boundary node
     -> flux is now determined using a first-order 3-point-stencil method (S-W or Roe scheme)
     -> this ensures that positivity is preserved at the near boundary node at least for the
        S-W methods
   * in prim/fluids/_WIFANS_kpsi/fluid_bdry.c, added rhov^2/2 to the pressure at the wall and
     at the symmetry planes
     -> This ensures that no flux goes through the wall/symmetry boundaries while being
        positivity-preserving
   * in cycle/ts/conv/_Roe_1o/convts.c, changed the linearization coefficients of the near
     boundary nodes to make them compatible with the new flux discretization approach 
   * in prim/fluid/_WIFANS_kpsi/fluid_source.c, made modifications to the functions _tauvt()
     and FindSvib()
     -> now, when setting N2VIB=NO in the control file, the nitrogen energy source terms
        are set to zero
     -> previously, when setting N2VIB=NO, the nitrogen energy source terms were such that
        the vib. temperature equalled the bulk gas temperature
  

2011 MAR 10
   * in file prim/thermo/_NASA1996/thermo.c, added the variable Tvibmin=30.0. Tvib needs to be 
     limited in some functions to prevent NaN
     - modified function ev_from_T(double T)
     - modified function devdT(double T)
     - modified function sk_from_T()
     - modified function dskdT_from_T()
   * added perfect gas thermodynamics module in prim/thermo/_perfect
     - only three species have been included: electrons, O2 and N2 
   * took away unused subroutines in cycle/res/conv/_Steger-Warming_1o/convres.c
   * in cycle/res/_generic/res.c, added function FindResidualperDimension()
   * took away subroutine FindA2jacobian from ./prim/fluid/_WIFANS_kpsi/fluid_conv.c
   * took away subroutine AddConvRes1 from cycle/res/_generic/res.c
   * in cycle/ added the "positive" cycle


2011 MAR 09
   * added the POSFLCW scheme to cycle/res/conv/_Steger-Warming_2o_TVD_POSFLCW
   

2010 OCT 28
   * Decreased the order of accuracy of the Steger-Warming MUSCL scheme
     (instead of using a limiter that is as close to second-order accuracy as possible, 
      switched back to a minmod limiter)
     - modified cycle/res/conv/_Steger-Warming_2o_TVD_MUSCL/convres.c
   * Decreased the order of accuracy of the Steger-Warming Flux-limited TVD scheme
     (instead of using a limiter that is as close to second-order accuracy as possible, 
      switched back to a minmod limiter)
     - modified cycle/res/conv/_Steger-Warming_2o_TVD/convres.c
   * Decreased the order of accuracy of the Steger-Warming Flux-limited POSFL TVD scheme
     (instead of using a limiter that is as close to second-order accuracy as possible, 
      switched back to a minmod limiter)
     - modified cycle/res/conv/_Steger-Warming_2o_TVD_POSFL/convres.c
   * Modified the POSFL scheme: now further limits the limiter for positivity-preservation
     by taking into consideration only the density and energy fluxes (used to be that 
     all fluxes would be taken into consideration, but this results in too much dissipation)


2010 OCT 27
   * Increased the order of accuracy of the Steger-Warming MUSCL scheme
     (instead of using a minmod limiter, now uses a limiter that is
     as close to second-order accuracy as possible, while resulting in a flux
     at the interface located in-between the left and right fluxes)
     - modified cycle/res/conv/_Steger-Warming_2o_TVD_MUSCL/convres.c
   * Increased the order of accuracy of the Steger-Warming Flux-limited TVD scheme
     (instead of using a minmod limiter, now uses a limiter that is
     as close to second-order accuracy as possible, while resulting in a flux
     at the interface located in-between the left and right fluxes)
     - modified cycle/res/conv/_Steger-Warming_2o_TVD/convres.c
   * Added a new flux discretization schme called Steger-Warming-TVD-POSFL
     in cycle/res/conv/
   * in prim/fluid/_WIFANS_kpsi/fluid.c, deleted _xi() function
   * in prim/fluid/_WIFANS_kpsi/fluid.c, in the function ReadAndInitFluid_Actions(),
     took away all reads to reference constants used to determine xi
   * in prim/fluid/_WIFANS_kpsi/fluid.c, in the function  WriteFluidTemplate(),
     erased all reference constants used to determine xi
   * in cycle/share/cycle_share.c, added function _xi()
   * in cycle/_Multizone/cycle.c, 
        cycle/_Marching_Window_Multizone/cycle.c,
        cycle/_Standard/cycle.c
        cycle/_Marching_Window/cycle.c
     in function ReadAndInitCycle(),
     read Qtilderef[] constants from Cycle module  
   * in cycle/_Multizone/cycle.c, 
        cycle/_Marching_Window_Multizone/cycle.c,
        cycle/_Standard/cycle.c
        cycle/_Marching_Window/cycle.c
     in function WriteCycleTemplate(),
     added the Qtilderef[] default constants to Cycle module
   * in cycle/_Multizone/cycle.hh, 
        cycle/_Marching_Window_Multizone/cycle.hh,
        cycle/_Standard/cycle.hh
        cycle/_Marching_Window/cycle.hh
     added Qtilderef[] to gl_cycle_t


2010 SEP 25
   * Made a small modification to the document 
     prim/emfield/_Epotential/doc/Non_Neutral_Plasma/goveqs.tex


2010 AUG 03
   * The following bug fixes only make a difference when calling the functions
     GRIDG_ReadGrid1DFromFile(), GRIDG_ReadGrid2DFromFile() and GRIDG_ReadGrid3DFromFile(). 
     Those functions are not called within warp, but are only called within 
     lib/gridg/eg/tecgrid2D.c and lib/gridg/eg/tecgrid3D.c
     - in file lib/gridg/1Dbase.c
       added line "codex2.filename=codex->filename;" in function RXGrid1D();
     - in file lib/gridg/2Dbase.c
       added line "codex2.filename=codex->filename;" in function RXGrid2D();
     - in file lib/gridg/share.c
       added line "codex2.filename=codex->filename;" in function RXaction2();
     - in file lib/gridg/3Dbase.c
       added line "codex2.filename=codex->filename;" in function RXGrid3D();


2010 JUL 31
   * in directory prim/chem
     - renamed _AIR_7s_... to _AIR_PLASMA_7s..
     - took way warnings about some variables not being used 
     - no "bugs" were found
     - the code output should not be affected
     

2010 JUL 30b
   * in prim/fluid/_WIFANS_kpsi/fluid_conv.c
     - took away artificial wind and steger warming specific functions
   * made small changes to numerous files in src, prim, cycle, and lib 
     - took away all the warnings about not checking the return value of fscanf
     - took way warnings about some variables perhaps not having been initialized properly
     - no "bugs" were found
     - the code output should not be affected


2010 JUL 30
   * in prim/fluid/_WIFANS_kpsi
     - added Twmin, and Twmax in control file (min and max wall temperature)
       -> Twmin is needed when using the 2008 wilcox k-omega model and adiabatic wall condition
     - added evref and Eref in control file (to determine xi)
   * in prim/fluid/_WIFANS_kpsi/fluid.c
     - added the function ReformatTv() 
       -> to clip the vibrational temperature properly
     - everywhere ReformatT() is called, ReformatTv() is also called
   * In prim/fluid/_WIFANS_kpsi/fluid.c, function FindPrim()
     - uncommented ReformatT()
   * in prim/fluid/_WIFANS_kpsi/fluid_bdry.c, function UpdateBdryWall()
     - fixed Tvwall to Twall in case of N2VIB=NO in control file
     - added a clip to Twall and Tvwall so that they remain within the bounds
       specified in the control file through Twmin and Twmax
   * in prim/fluid/_WIFANS_kpsi/fluid_source.c, function _tauvt:
     - changed tauvt=tauvt/10000.0e0; to tauvt=tauvt/1000000000.0e0; when N2VIB=NO in control file
   * in prim/fluid/_WIFANS_kpsi/fluid_source.c, function FindCtnorm:
     - changed the linearization of the psi flux (added dependence on chiw)
       -> only affects the convergence behavior of the 2008 wilcox k-omega
   * in prim/chem
     - added the directory _H2_AIR_3s_0r


2010 JUL 22
   * Fixed a bug in src/bdry.c, subroutine AdjustNodeType()
     - set to UNUSED all bdry nodes that have no inner node as a neighbor prior to setting
       to outflow the bdry nodes that have only one inner node as a neighbor


2010 JUL 02
   * in src/post.c, improved the subroutine WritePostFile_VTK() 
     - now, the vector variables (i.e. v, E, B) are grouped together
   * in src/main.c, added the option vtk to -pt flag
   * in src/bdry.c, in the function WriteBdryTemplate();, commented out
     the Cut() and the Region() commands
     - makes it more intuitive when editing the control file for the first time
   * in prim/emfield/_Epotential/emfield.c, renamed the post variables j_x, j_y, E_x, etc
     to j[0], j[1], E[0], etc 
     - now, the j,B, and E vectors are properly recognized as vectors by the WritePostFile_VTK()
       function part of src/post.c
   * in prim/emfield/_Epotential/emfield.c, fixed a bug in the function WriteEmfieldTemplate()
     - Only affects 3D solutions
     - Template used not to output js and je in 3D
   * in prim/ebeam/_Fixed_Beam_Energy/ebeam.c, fixed a bug in the function WriteEbeamTemplate()
     - Only affects 3D solutions
     - Template used not to output js and je in 3D
   * in the file src/bdry.c, subroutine AdjustNodeType(), changed the boundary nodes located in 3D
     corners from "unused" to "outflow"
     - such a definition is more convenient for the post-processing subroutine WritePostFile_VTK()  
     - WARNING: NEEDS FURTHER CHECKING
   * in the file cycle/share/cycle_share.c, updated the function *UpdateBdryNode()
     - put a fatalerror() if the boundary node cannot be updated
     - WARNING: NEEDS FURTHER CHECKING

2010 JUL 01
   * in file src/post.c implemented the subroutine to create a postfile in VTK format
     (compatible with the paraview and mayavi2 viewers)
  

2010 APR 22
   * in file prim/fluid/_WIFANS_kpsi/doc/Favre_averaging/report.tex,
     - improved the section concerning the assumption of negligible ion inertia change
       compared to the ion pressure gradient 
     - improved the section concerning the assumption of negligible ion inertia change
       compared to the electric field force


2010 APR 21
   * in file prim/fluid/_WIFANS_kpsi/doc/Favre_averaging/report.tex,
     - Took away the package amssymb 
     - conflict with the new warpdoc class file (i.e. \pmb{} command was not working properly)


2010 APR 17
   * improved the document prim/emfield/_Epotential/doc/Non_Neutral_Plasma
     - changed goveqs.tex: replaced "<<" by "\ll" 


2010 APR 16
   * improved the document prim/emfield/_Epotential/doc/Non_Neutral_Plasma
     - added some estimates of the limitations of the assumption of negligible
       electron and ion inertia compared to the pressure gradients


2010 APR 13
   * fixed the latex document (just reformatting fixes) in prim/fluid/_WIFANS_kpsi/doc/Favre_Averaging


2010 MAR 28
   * In file prim/fluid/_WIFANS_kpsi/fluid_source.c, changed the formulation of the electron heat
     addition to the total energy equation and the vibrational energy equation: now, 
     the functions _ElectronHeat and _kei (part of emfield.c) are not used anymore. Rather, the
     electron heat is computed from the electric field in the electron frame of reference
     directly in fluid_source.c
   * In the file prim/emfield/_emfield.h, took away the function calls _kei and _ElectronHeat
     which are not used anymore elsewhere within the prim/ directory 
   * In file prim/fluid/_WIFANS_kpsi/fluid.c, in function _nustar, changed code so that
     nustar for the electrons is calculated only if speceminus >= 0
   * Set relaxfact_phi directly in cycle module (instead of within the EmfieldEpotential() module)
     - in file prim/emfield/_Epotential/emfield.c: 
       * took away the relaxation from the function EEF_AddDQtoQetilde() 
       * and took away the relaxfact_phi from the control file module in the function WriteEmfieldTemplate();
     - in file src/common.h, added relaxfact to gl
     - in file prim/emfield/_Epotential/emfield.hh, took away relaxfact_phi from gl->emfield
     - in file cycle/share/cycle_share.c: 
       * added the relaxation to function EEF_update_dQ();
       * initialized the relaxfact in function Runtime_Actions()
       * added the function WriteCycleEmfieldTemplate();
     - in files cycle/_Multizone/cycle.c, cycle/_MarchingWindow_Multizone/cycle.c and cycle/Standard/cycle.c
       * added a call to WriteCycleEmfieldTemplate(); within WriteCycleTemplate();  
   * In file prim/emfield/.config, moved _Epotential_Te to experimental 


2010 MAR 27
   * In the directory prim/emfield, create the subdirectory _Epotential based on
     _Epotential_Te
   * Modified files within prim/emfield/_Epotential and took away everything related
     to the electron energy transport equation
   * Modified src/common.h and added some np.bs variables for the _Epotential emfield solver
 

2010 MAR 26
   * Fixed bug in prim/fluid/_WIFANS_kpsi/fluid.c in function _a();
     - Findc had to be called prior to using c
   * Fixed bug in prim/fluid/_WIFANS_kpsi/fluid_conv.c in function FindJacVarsAtInterface_RoeAverage();
     - v[] was used instead of jacvars->v
   * Took away some variable declarations within prim/fluid/_WIFANS_kpsi
     (variables that are not used anymore and that created a warning at compile time)
   * In the directory prim/emfield, moved all the epot methods that are deprecated
     to the old subdirectory (they used a simplified two-species model of the plasma to
     calculate the tensor conductivity) 


2010 FEB 02
   * Added the species Helium (He) in prim/thermo/_NASA1996/thermo.c
     and in prim/thermo/_NASA1996/thermo.hh
   * Added the Helium-Air Species Composition in 
     prim/chem/_He_AIR_3s_0r/


2010 FEB 01
   * Added the function EXM_InvMat in the library lib/exm/exm.c


2010 JAN 26 
   * Changed the file lib/latex/warpdoc.cls
     - modified the top margin so that the class file can be used equally
       well for a4paper and letterpaper


2010 JAN 22
   * Changed the order of the linked libraries in src/Makefile
     so that gcc can now compile with the -static flag correctly
     - the -lm flag had to be put after the -pthread flag
   * added units to Reynolds number, x, and y/yplus in file tools/bdry.c


2010 JAN 18
   * Fixed a typo in the document prim/fluid/_WIFANS_kpsi/Favre_Averaging


2010 JAN 17
   * Modified again slightly the warpdoc.cls class file part of the directory
     lib/latex/


2010 JAN 16
   * improved the latex class file lib/latex/warpdoc.cls
     - changed margins so that the generated documents look good for letterpaper 
       size and A4paper size
   * Modified all report.tex that called warpdoc
     - deleted the calls to \DeclareMathSizes (now part of warpdoc.cls)
     - deleted the options [10pt,letterpaper,oneside] (now defaults to 
       A4paper,10pt,oneside within warpdoc.cls)
   * In the function ReadControl() part of the file src/control.c, fixed 2 BUGS
     which gave many warnings when checking the memory allocation with valgrind:
     - added gl->nn=99999999999: we need to set gl->nn to a value prior to 
       ProcessCode or gl->effiter_R will not 
       be updated correctly in the function  update_Res() part of the file res.c 
       when called by the cycle module PRIOR to the first iteration
     - moved   pthread_mutex_init(&(gl->lock), NULL); prior to the call to
       SOAP_ProcessCode(): this is necessary since some threading may occur PRIOR
       to the first iteration when the Cycle action is read from the control file
   * In the directory prim/ebeam, created a subdirectory _None and created
     the files /prim/ebeam/_None/ebeam.c and /prim/ebeam/_None/ebeam.hh
   * In the directory prim/ebeam, renamed _fixedQbeam to _Fixed_Beam_Energy

 
2010 JAN 15
   * changed all latex documents to use the warpdoc class
   * changed all report.tex files to be compatible with the mtpro2 fonts
   * put the mtpro2 package in lib/latex 


2010 JAN 14
   * Changed the name of WARP to "Weakly-ionized Airflow Resolver and 
     Post-processor" in the file README and in the logo 
     lib/latex/warplogo.eps
   * Improved the documents in prim/fluid/_WIFANS_kpsi/doc
   * Improved the documents in prim/metrics/doc
   * Improved the documents in prim/emfield/_Epot/doc
   * in the file prim/fluid/_WIFANS_kpsi/fluid_source.c, modified the function
     FindStComp():
     - changed St[ns+nd+2]=Omega*xi_star*rho*k*sqr(psi)*fMt to
       St[ns+nd+2]=psi/ktilde*Omega*xi_star*rho*k*eps*fMt
       for OMEGA1988 and OMEGA2008 models (not a bug, just a small change to keep
       the C file in sync with the latex document in doc/Governing_Equations
     - changed St[ns+nd+2]=-Omega*rho*psi*sum; to St[ns+nd+2]+=-Omega*rho*psi*sum;
       for the rapid compression model by Coakley (BUG! in the past, by selecting
       the rapid compression turbulence correction, the dilatational dissipation
       contribution turbulence correction to the omega transport equation was 
       cancelled)
   * in the files prim/emfield/_Epot/emfield.c and prim/emfield/_none/emfield.c, and
     prim/emfield/_emfield.h, added the function EEF_FindSigma() yielding the
     sum of the ion and electron conductivities
   * in the file prim/fluid/_WIFANS_kpsi/fluid_source.c, in the function
     FindStMHD(), uncommented out the relevant code and also changed
     the terms so they are in sync with those outlined in the document 
     prim/fluid/_WIFANS_kpsi/doc/Governing_Equations (i.e., the Kenjeres and Hanjalic
     correction is now valid for both the 1988 and the 2008 k-omega models)
   * in the file prim/emfield/_none/emfield.c, added the functions
     FindEfield() and FindBField() which both return zero values for the electric
     and magnetic fields
   * in the directory prim/emfield/_none, took away the subdirectories doc and doc2
     (not needed since they are the same documents as found in prim/emfield/_Epot)
   * added the axisymmetric theory document by Jason Etele from warp-nomhd to
     the directory prim/fluid/_WIFANS_kpsi/doc


2010 JAN 13
   * in the file cycle/res/conv/_Roe_1o/convres.c, in the function FindFint()
     changed the call to FindF rather than FindF2. FindF2 was
     used temporarily only on 2010 JAN 12 and is now deprecated
   * fixes to many latex documents 
     - they now almost all use the warpdoc.cls as opposed to the previous
       (ugly) ProReport.cls 


2010 JAN 12
   * in the file cycle/ts/conv/_Steger-Warming_1o/convts.c
     - commented out the exact linearization at the near boundary nodes
     - the exact linearization is not recommended in this case since not all 
       the discretization coefficients are positive
     - commenting out the exact linearization at the near boundary nodes
       results in a more stable scheme at higher CFL
   * in the file prim/fluid/_WIFANS_kpsi/fluid.c, changed the fluid variables 
     control file template defaults 
     - altered function WriteFluidTemplate();
   * in the file src/post.c, function WritePostTemplate(), took away
     the file WriteInitTypes();
     - only necessary to know the init types if using the extranode functions
     - Now unnecessary due to the extranode functionality having been taken away


2010 JAN 11
   * in the file prim/fluid/_WIFANS_kpsi/fluid.c, changed the call from _mut(np,l,gl)
     to np[l]->bs.mut in the functions _nustar, _mustar, _kappastar, _kappaevstar,
     when using the primmem variables
     - decreases the CPU time a little
   * in the file prim/fluid/_WIFANS_kpsi/fluid_bdry.c, changed the wall and electrode
     boundary conditions for the OMEGA2008 model: they are now fixed to those 
     outlined in the original paper by Wilcox (AIAA J. 1988). 
     - results in much more accurate turbulent boundary layer profiles for a coarse mesh
   * included the modification to the OMEGA2008 model in the tex file
     prim/fluid/_WIFANS_kpsi/doc/Goveqs/report.tex 
   * in the function WriteFluidTemplate part of file prim/fluid/_WIFANS_kpsi/fluid.c,
     changed some default values for cmin, Pmin, kdiv, etc..
   * in the file prim/fluid/_WIFANS_kpsi/fluid_init.c, in the function
     WriteInitTypes(), added the suggested value of omega in the freestream 
     for the 2008 k-omega model (psi=omega=110)
   * in the files cycle.c part of the standard, multizone and marchingwindow-multizone
     methods, changed the default values as follows:
     - sigma=0.0
     - IMPLICITBC=FALSE;
     - CFL=min(CFL*1.1,1.0);
   * in the files part of the directory prim/fluid/_WIFANS_kpsi/, renamed
     ROE_zetabar1 to zetabar1 and ROE_zetabar2 to zetabar2
   * in the file prim/fluid/_WIFANS_kpsi/fluid.c, changed function _dvidxj():
     - made modifications so that at the boundary nodes, only the derivatives of the
       velocity not perpendicular to the boundary plane are considered


2010 JAN 10
   * almost finished the implementation of the Wilcox 2008 k-omega model
     - lots of changes to the files in the directory prim/fluid/_WIFANS_kpsi/
   * FindPrimMem is now called with *np and l instead of np in order to 
     be able to compute the 2008 wilcox k-omega version of mut as a mem variable
     - this required the change of many files in src/, cycle/ and prim/
   * in the file src/post.c, got rid of the extranode function part of the post module
     (it was necessary to get rid of this functionality due to mut now depending
     on the properties of the neighboring nodes in FindPrimMem)
   * added the flag variable PRIMMEM in np_t, in src/common.h
     - np.PRIMMEM is set to TRUE after the FindPrimMem has been called
     - np.PRIMMEM is now the flag used instead of the function _NodeResumed to
       determine whether to use the primitive variables stored in memory or not
   * in the file prim/fluid/_WIFANS_kpsi/fluid_conv.c, in the function
     FindJacVarsAtInterface_RoeAverage()
     - used to determine jacvars->dPdx by creating a node, calling the function
       FinddPdX on the created node, and then disposing the node
     - now, no new node is created/disposed. Rather, jacvars->dPdx is found directly
       from the primitive variables 

2010 JAN 08
   * in the latex file prim/fluid/_WIFANS_kpsi/doc/Goveqs/report.tex, added
     the 2008 Wilcox k-omega model


2010 JAN 06
   * now computes metrics->X2 in function FindMetricsInterface2 part of file
     prim/fluid/_WIFANS_kpsi/prim_conv.c
   * in file prim/fluid/_WIFANS_kpsi/prim_conv.c added the functions
     - FindMusclVars()
     - FindQFromMusclVars()
     - FindJacVarsFromMusclVars()
   * in the directory cycle/res/conv/, added a MUSCL-like TVD Steger-Warming scheme
     called _Steger-Warming_2o_TVD_MUSCL (the limiter is applied to the
     primitive variables and the fluxes are reconstructed on the left and right sides
     of the interface)
   * fixed a bug in file cycle/res/conv/_Steger-Warming_2o_TVD/convres.c
     - function _nonzero() is added and used to prevent a division by zero
       within the flux limiter


2010 JAN 05
   * Took away the function FindLambdaFromJacVars in file
     prim/fluid/_WIFANS_kpsi/fluid_conv.c since the same function existed
     under a different name (i.e. FindLambdafromJacVars)
   * Renamed FindLambdaFromJacVars to FindLambdafromJacVars in all files
   * in the directory cycle/ts/conv: 
     - renamed _Roe to _Roe_1o
     - added convection implicit time stepping terms for Steger-Warming
       scheme in sub directory _Steger-Warming_1o
   * in the directory cycle/ts:
     - renamed _AF to _implicit_AF
     - renamed _MAF-DDADI to _implicit_MAF-DDADI
     - renamed _MAFk to _implicit_MAFk
     - fixed a few compile-time bugs in files _MAF-DDADI/convts.c and _MAFk/convts.c 
       related to obsolete function calls 
     - moved _implicit_MAFk to experimental within the .config file
   * in the directory cycle/res/conv:
     - added a 2nd order accurate flux-limited TVD Steger-Warming scheme
       (named _Steger-Warming_2o_TVD)


2010 JAN 04
   * Made some changes to file cycle/ts/_explicit/ts.c 
     - changed the call to function FindGammaInv
     - changed the call to function Finddtau
     (the functions ask for *np, gl, and l instead of the previous np[l] and gl)
   * in the files prim/fluid/_WIFANS_kpsi/prim_conv.c, prim/_prim.h and several files
     in the cycle/ directory
     - renamed functions ROE_??? to ???fromJacVars
     - renamed the variables roe?? to jacvars??
   * in the directory cycle/res/conv:
     - renamed _Roe to _Roe_1o
     - renamed _YeeRoe to _Roe_2o_TVD
   * Added the first-order accurate Steger-Warming FVS method in directory 
     cycle/res/conv/Steger-Warming_1o
   * Renamed NEUTRON to NEUTRAL in all files
   * Renamed neutron to neutral in all files


2010 JAN 03
   * added kundu models for propane and kerosene from warp-nomhd in prim/chem
   * added yungster model for methane from warp-nomhd in prim/chem
   * removed H2-air Jachimowsky model from prim/chem
   * added H2-air Jachimowsky model from warp-nomhd in prim/chem
   * added species CH, NH, C2H2, C3H8, C12H23 in prim/thermo/_NASA1996/thermo.c
     and prim/thermo/_NASA1996/thermo.hh
   * added the constant THERMO_P_REF in prim/thermo/_NASA1996/thermo.hh
     and prim/thermo/_NASA1971/thermo.hh


2010 JAN 02
   * in prim/chem/_air2s0r/chem.hh, added CHEM_NEUTRAL, spec_eminus, spec_O2, spec_N2
   * in prim/chem/_air7sneutral/chem.c, fixed a bug (increased the memory size of 
     several arrays so that no bad memory reading/writing occurs)
   * in prim/fluid/_WIFANS_kpsi/fluid.hh, took away NEUTRAL from gl_fluid_t
   * in prim/fluid/_WIFANS_kpsi/fluid.c, took away the line starting with
     gl->prim.fluid.NEUTRAL=..
   * in prim/fluid/_WIFANS_kpsi/fluid.c, took away the NEUTRAL option within
     the wifanskpsi control file module
   * in the directory prim/thermo, moved _mcbride1996 to _NASA1971 and moved
     _mcbride2002 to _NASA1996
   * in the file prim/thermo/.config, moved _NASA1971 and _perfect to experimental


2009 DEC 23
   * changed "declare -x" to "export" within all Makefiles.
     (necessary when running dash as the default shell rather than bash)
   * changed prim/chem/Makefile and fixed within the cleanall module
     the line involving _hydrogen... and replaced with the line
     involving _jachimowski...

2007 FEB 17
   * changed double _Te() to include T as an input parameter in 
     prim/emfield/_emfield.h and prim/emfield/_Epot/emfield.c
     - necessary when initializing the primitive variables at
       the beginning of the cycle


2007 JAN 19
   * added new integration variable in "bodyforces" part of src/post.c
     - sigmaeff, averaged with the current magnitude and area
     - modified src/post.c, prim/emfield/_Epot, prim/fluid/_WIFANS_KPSI


2006 OCT 25
   * modified the FindDiffCoeff in prim/thermo/_mcbride1993/thermo.c
     to include ambipolar diffusion
   * added the constant ck in prim/thermo/_mcbride1993/thermo.c
   * added the subroutine _ChargeNumber() in prim/thermo/_mcbride1993/thermo.c
   * added the subroutine _Charge() in prim/thermo/_mcbride1993/thermo.c
   * added the subroutine _mobility_eminus_air() in prim/thermo/_mcbride1993/thermo.c
   * added the subroutine _mobility_in_air() in prim/thermo/_mcbride1993/thermo.c
   * modified chem.c in prim/chem/_hydrogen9s21r to make the
     subroutine declarations consistant with prim/chem/_chem.h
   * modified chem.hh in prim/chem/_hydrogen9s21r specO2,
     speceminus, CHEM_NEUTRAL and speciescharge
     

2006 JUL 27
   * removed XDMAthreads subroutines in lib/exm/exm.c
   

2006 JUN 24
   * changed the boundary condition for Tv in prim/_WIFANS_kpsi/fluid_bdry.c
     to make it adiabatic even when the temperature at the wall is fixed
   * changed ambipolar diffusion in prim/thermo/_mcbride2002/thermo.c so
     that the the factor (1+Te/T) is applied only to the positive ions 
   * changed lib/exm/exm.c and removed the fprintf(stderr,"E"); and 
     fprintf(stderr,"S"); prior and after solving the XDMA
            

2006 APR 30 
   * changed src/post.c so that the electromagnetic efficiency gets
     written to the file EMefficiency.txt
   * changed the way the calc.c in lib/soap/eg program works - should the 
     flag -nocr be used, then no carriage return is inputted at the end 
     of the output
          

2006 MAR 18
   * added sinh, cosh, tanh, asinh, acosh, atanh in the file
     lib/soap/soap.c
   * fixed a few bugs in the files lib/soap/eg/*.c
   

2006 MAR 17
   * modified the file prim/emfield/_Epot/emfield.c so that 
     _ElectronHeat() returns the equilibrium value of the Joule heating
     when TELOCAL is set to TRUE. Note: this only makes a significant
     difference when the electron temperature is equal to the gas temperature
     or when the electron temperature is at its minimum value.
     

2006 MAR 16
   * modified the Psig data in the prim/thermo/_mcbride2002/thermo.c file so that
     the diffusion coefficient of O2+, N2+ and O2- matches the one
     obtained from the mobility at 300K
      

2006 FEB 27
   * modified the subroutine FindSem in prim/fluid/_WIFANS_KPSI/fluid_source.c
     - turn off the electromagnetic source terms when the inner node
       touches a boundary node
     - necessary as the solution might grow unstable near
       a boundary node
     

2006 FEB 25
   * modified the subroutine prim/emfield/_Epot/emfield.c
     so that the constants relaxfact_Telocal and relaxfact_phi
     are user-specified in the control file
     

2006 JAN 20
   * modified the subroutine EEF_UpdateQtilde in
     cycle/share/cycle_share.c so that the time marching
     procedure is performed only for the extra elliptic
     fluxes that are needed to be solved.
     - this required also some fixes in prim/emfield/_Epot/emfield.c
       through the addition of the subroutine 
       EEF_TimeMarchingMethod(long fluxe, gl_t *gl);

     
2005 NOV 15
   * Added the option of one input parameter in the WriteDataFile
     routine part of the Runtime module in cycle/share/cycle_share.c
     

2005 NOV 14
   * a few changes to cycle/share/cycle_share.c and src/main.c 
     - when the solution is converged, the number of iterations
       is set to 1
     - ximax can be varied in the runtime module
     

2005 OCT 23
   * made changes to src/post.c so that the nodplot postfile in 2D
     only includes one k-plane instead of two
     

2005 OCT 13
   * Lots of changes in the last month since coming to Japan
     - fixed several issues in prim/emfield/_Epot/emfield.c
       to tackle domains in which some nodes are not fluid
        

2005 AUG 25
   * a few changes 
     - added oxygen and nitrogen dissociation to the chemical solver
       prim/chem/_air7sneutral
     - added effect of electron/ion pressure gradient to prim/emfield/_Epot
       + note: the generalized ohm's law is correct, but some changes
         to the ion/electron heating in the electron energy transport
	 and the vibration and total energy transport equations are still
	 necessary
     - in the file prim/emfield/_Epot/emfield.c, subroutine EEF_FindS,
       probes the electron number density as the minimum of the nearby
       nodes in order to determine the source term to the electron
       energy transport equation
       (to prevent some unstability from developping)
     - in the file prim/fluid/_WIFANS_kpsi/fluid_source.c, subroutine
       FindSchem, probes the electron temperature as the minimum
       of the nearby nodes to determine the chemical source terms
       (to prevent some unstability from developping)
   * code seems to work very well for a neutral plasma

   
2005 AUG 07
   * added ambipolar diffusion to charged species in prim/thermo as 
     specified in section 2.6 of Gas Discharge Physics by Raizer
   * improved electron energy transport equation in prim/emfield/_Epot
     so that delta is a function of the temperature
   * changed the chemical reaction rates in prim/chem/_air7sneutral
     so that the townsend ionization is a function of the electron temperature,
     and not the reduced electric field
   * in prim/chem/_air7sneutral, changed the derivative of the townsend  
     ionization source terms so that they don't include the positive source
     terms related to the electron species
   * in prim/fluid/_WIFANS_kpsi/fluid_source.c, fixed the derivative dTedQ
     to zero
     - note: this needs to be fixed instead in prim/emfield
     

2005 AUG 01
   * lots of changes again
     - added a new chemical solver _air7sneutral which does not
       include the electron species
     - the latter required changes in the files prim/fluid/_WIFANS_kpsi/
     - implemented additional chemical reactions in _air7sneutral
       to take into account O2 and N2 dissociation when the gas
       temperature is in excess of ~2400K and ~3300K respectively
       

2005 JUL 20
   * lots lots of changes which I haven't documented in the last 6 weeks
   * of greater importance:
     - in cycle/share/cycle_share.c, a new discretization algorithm for
       the cross diffusion terms of the extra elliptic equations is
       implemented (based on some upwinding strategy)
     - in prim/fluid/_WIFANS_kpsi, changed a few files to make sure
       that the electron continuity equation is not solved: rather, a
       source term is implemented to make sure the gas is neutral
     - in prim/emfield/_Epot/emfield.c, implemented a second flux
       solving for the electron energy    


2005 JUN 04
   * modified lots of things in the last month..
     - changed completely the method in prim/emfield/_Epot
       * fully generalized Ohm's law for any type of weakly-ionized
         plasma (neutral and non-neutral, x number of species..)
       * wrote a new document for the Ohm's law in directory doc2
       * stores the current vector and electric field vector in memory
     - modified several files in prim/fluid/_WIFANS_kpsi
       * added some accurate derivatives for the case of determining
         the electric field in the electron frame of reference at a constant
	 current
     - added a 3-species low-T air chemical solver in which there's
       townsend ionization and some sort of dissociative recombination
       * much faster than other low-temperature air chemical solvers
       * for testing purposes only..
       

2005 APR 24
   * modified the boundary condition at the cathode for the ion continuity
     equations in the subroutine FindA2Jacobian in the file
     prim/fluid/_WIFANS_kpsi/fluid_conv.c
      

2005 APR 23
   * a few bug fixes
     - in cycle/res/ and cycle/conv, the subroutines solving for A2jacobian
       had a bug in them and did not revert to 1st order backward correctly
     - in prim/fluid/_WIFANS_kpsi/fluid_source.c, in the Celectron subroutine
       the faction was not used (as it should be) to multiply the 
       ion source term jacobian
     - in prim/emfield/_Epot/emfield.c, in the subroutine FindK, sigma was not
       properly determined
   * in file prim/fluid/_WIFANS_kpsi/fluid_conv.c, made a modification to
     the FindA2Jacobian subroutine for the ions: A at the anode is set to
     zero 
   * in the file prim/fluid/_WIFANS_kpsi/fluid.c, subroutine dtau, changed
     the way the electron time step is determined (made it smaller than for
     the ions and neutrons)
   * in file prim/chem/_air8s13r/chem.c, added townsend ionization for higher
     reduced electric field: upto 250E-20 V m^2
   * in file prim/fluid/_WIFANS_kpsi/fluid_source.c and file 
     prim/fluid/_WIFANS_kpsi/fluid_conv.c, made the ion continuity equations
     in the standard way, without a modification to maintain div(E)=rhoe/epsilon
     which is guaranteed by the modified electron continuity
   * the solver seems to work great now, maintaining the divergence of the
     electric field equal to the net charge density precisely at all nodes
           

2005 APR 20
   * alright! the plasma sheath solver seems to work now: 
     - it solves for the townsend ionization, coupled with mass diffusion
       and the solution of the modified electron and ion continuity
       equations to ensure that div(E)=rhoe
     - also, muen, Te, and muin have been put as a function of the
       electric field once more
     - the current continuity equation (aka generalized ohm's law) is
       modified to take into account electron and ion diffusion
   * Notes:
     - need to add townsend ionization chemical reactions for higher
       electric field
     - need to add electron energy transport equation   

       
2005 APR 19
   * added diffusion coefficients for electrons and ions in 
     prim/fluid/_WIFANS_kpsi/fluid.c
     - plasma sheath seems to work but some discretization
       issues when the mesh is clustered as well as at the boundary
       nodes 
     - note: is diffusion necessary to make the sheath exist?
     - at this stage, only the electron continuity equation is modified
       to ensure the divergence of the electric field corresponds to
       the net charge density, while the ion continuity is solved
       normally
       

2005 APR 17
   * added a fix in prim/fluid/_WIFANS_kpsi/fluid_plasma.c in determining
     the electric field needed by the chemical solver: it is now determined
     as a function of the current, which is fixed until the next
     emfield iteration
     

2005 APR 14
   * improved the document in prim/emfield/_Epot/doc
     - included a proof that the ion inertia can be neglected when the
       electron number density is less than 10^(-6), at least
       when the pressure is greater than 0.1 atm
   * small changes in prim/fluid/_WIFANS_kpsi to the file
     fluid_conv.c: now, only the electron continuity is modified
     to ensure that div(E)=rhoe/epsilon
     

2005 APR 13
   * made a modification to cycle/share/cycle_share.c:
     - in the subroutine EEF_UpdatePrimMem(), does not use
       SweepWith1Dsegments anymore
       

2005 APR 12
   * the plasma sheath solver seems to be working
     - now, the electric field potential equation is solved (doesn't
       take more computing than fixing the current, anyway)
     - the electron continuity is solved exactly
     - the ion continuity is modified to ensure that the div(E)
       is equal to the net charge density over the permittivity
     - still struggling with the boundary condition at the cathode
       though
     

2005 APR 11
   * the plasma sheath solver is almost, almost working
     - we dropped the technique converting the electron continuity
       continuity equation into an equation for divE=rhoe/epsilon
     - rather, the electron continuity is solved as before, but by
       modifying the additional convection term and making it only
       a function a derivative of muen*ne instead of E*muen*ne
     - seems to work pretty good, except that it is not exact from
       the point of view of the discretized equations. We'll do this
       tonight. Time to commute through the D&R canal.
       
     
2005 APR 10
   * a few bug fixes
     - in prim/fluid/_WIFANS_kpsi/fluid_bdry.c -> the boundary condition
       for the electrodes is fixed to a slip wall for the time being
     - in prim/fluid/_WIFANS_kpsi/fluid.c -> xi for the ions was not
       properly determines
       

2005 APR 09
   * a few changes which I think will yield a more robust solver
     at the cathode boundary
     - now, the source term which is responsible for ensuring that
       div(E)=rhoe/epsilon is put in the electron continuity equation
     - the boundary condition for the cathode is such that only
       a fraction of the ion flux goes through with the other ions
       accumulating at the wall
   * the next step is to find a proper time step (tau) for the electron
     continuity equation such that the electron number density does not
     become negative in the iterative process
     

2005 APR 07
   * a few changes in prim/fluid/_WIFANS_kpsi and prim/emfield/_Epot
     and the code is very robust now to solve non-neutral plasmas
     with a fixed current:
     - put muin and muen as a function of the electric field again
     - implementation of electrode (cathode & anode) boundary conditions
     - new boundary conditions for the ions and electrons at the
       cathode and anode 
       + at the cathode, the electron number density
         is fixed 
       + at the anode, the ions number densities are fixed 
       + all other number densities are extrapolated so that their normal
         derivative to the wall is zero
       + the anode and cathode boundary conditions are treated implicitly
     - the current is fixed for the time being (ohm's law is not solved)
     - the continuity equations for all charged species are determined
       correctly, EXCEPT for the N2+ species, where two additional source
       terms are present: div(E) and -echarge*(Nplus-Nminus)/permittivity
       + the latter source terms are multiplied by Omega*muinrhoion
       + muinrhoin is fixed to 1.0e-4
   * some changes to cycle/res/_generic/res.c and cycle/ts/share/ts_share.c
     - the A2jacobian terms are multiplied by a spatial variation of Omega
       to ensure that the discretization scheme does not introduce some
       errors on highly stretched meshes
       + now, it seems to behave "like a control volume scheme" for the electron
         and ion continuity equations even on highly stretched meshes
   * notes: 
     - need to implement physically "more correct" cathode and anode boundary
       conditions 
       + it seems that the derivative of the electric field perpendicular to the
         anode/cathode should be set to zero
     - need to solve for the generalized ohm's law and store the current until
       the next EEF_iteration
     - need to change the generalized Ohm's law so that it is valid in the non-neutral
       region in the presence of a magnetic field as explained in the document
       prim/emfield/_Epot/doc
     - need to make a fix to the Epot solver so that the current is fixed through
       one electrode pair, as opposed to the potential difference
       + should result in much faster convergence of the fluid flow properties 
         through the plasma sheath
       
	 
2005 APR 03
   * in prim/fluid/_WIFANS_kpsi/fluid_plasma.c, the electric field
     is now found with a fixed current through ohms law
     - converges great!
   * WARNING: in prim/fluid/_WIFANS_kpsi/fluid_plasma.c , muin
     is not a function of the electric field anymore: caused some
     convergence problems
   * WARNING: in prim/chem/_air8s15r/chem.c, the reaction rates
     creating O2- are turned off   
     - NEED TO CHANGE IT BACK EVENTUALLY
   


2005 APR 02
   * the electron and ion continuity equations have been
     modified to incorporate a source term related to divE as
     outlined in prim/emfield/plasmasheath/doc
   * the boundary conditions for the ions and electrons 
     have been modified accordingly in prim/fluid/_WIFANS_kpsi/fluid_bdry.c,
     BUT in a non-general way 
   * in short: new changes  
     - seem to work great
     - can obtain a plasma sheath in a robust way even
       at high electron number densities
     - next, try fixing the current rather than the electric field
     

2005 MAR 30
   * modified the plasmasheath doc part of prim/emfield
     - obtained some electron and ion continuity equations
       that seem promising
       

2005 MAR 29
   * some playing around in prim/fluid/_WIFANS_kpsi and
     prim/emfield/_Epot to determine a good solution for a plasma
     sheath by solving div(E)=rhoe/epsilon correctly
   

2005 MAR 28
   * made the electron diffusion term a function of the current in 
     _nuk subroutine part of prim/fluid/_WIFANS_kpsi/fluid.c
     - seems to give reasonably good results so far for the plasma
       sheath, but still more work needs to be done at the cathode
       and anode boundaries for velectron and vion.
     - more work needs to be done to find the current as it is now
       user-specified  
       

2005 MAR 24
   * further improvements to the file prim/emfield/_Epot/doc
     - things seem to be looking good for the electron continuity
       - a diffusion term is added
       - a boundary condition is suggested for the electron number
         density
       

2005 MAR 23 
   * some changes in prim/emfield/_Epot/doc for the electron and ion
     continuity equations
   * other small changes elsewhere to the electron and ion convection
     and source terms and to emfield.c in prim/emfield/_Epot
   

2005 MAR 21
   * made a change in prim/fluid/_WIFANS_kpsi/fluid_plasma.c
     -> added the subroutine _Eeffbulk() which is used only
        to determine the electric field needed by the chemical
	solver
     -> WARNING: in _Eeffbulk(), set magEeff=1.0e-40; so
        that the chemical source terms don't depend on the electric
	field: otherwise, these seems to be a stability problem
	somewhere: needs to be checked
   * added information about which variable is clipped in prim/_generic
     - neatly done this time
     	

2005 MAR 20
   * some changes to prim/emfield/_Epot/ to take into account
     the non-neutral  electric field potential equation. 
     

2005 MAR 19
   * lots of changes once again in prim/fluid/_WIFANS_kpsi
     - fixed _muen and _muin subroutine
     - added velocity correction terms for the electron and ions
       in fluid_conv.c
   * added second convection residual and ts in cycle/res  and
     cycle/ts
     

2005 MAR 18
   * lots of changes in prim/fluid/_WIFANS_kpsi to implement the new
     lorentz force and joule heating function of the electric field only
     - starting to look real pretty, finally!
   * changes in prim/emfield/_Epot/doc to incorporate the ion mobility
     as a function of temperature and electric field
     - need to ask sergey a question about whether this is valid or not
   * changes as well in prim/emfield/_Epot/emfield.c to use mui and mue
     instead of ken and kin (much cleaner)
     

2005 MAR 15
   * got rid of the definitions _CHEM_SPECO, and _CHEM_SPECEMINUS in prim/
     - now, it only checks whether specO and speceminus are defined: cleaner
     

2005 MAR 12
   * document in prim/emfield/_Epot/doc is almost finished for a weakly
     ionized gas
     - still need to write the electric field potential equation section
     

2005 MAR 11
   * fixed the zeta_13 equation in prim/emfield/_Epot/doc
     - ion and electron joule heating are always positive
     - consistent formulation
   * however, still an issue with the vionweak equation
     - would this still hold near an insulator where the ion velocity
       is zero?
   * fixed a bug in the exact form of equation zeta_15 in
     prim/emfield/_Epot/doc
            

2005 MAR 10
   * much more progress on the electric field potential equation document
     in prim/emfield/_Epot/doc
     - problem was with zeta_13 equation


2005 MAR 06
   * created a new directory prim/emfield/_Epotneutral
   * improved the document in prim/emfield/_Epot/doc
   * improved the document in prim/emfield/_Epotneutral/doc
   * made a warp logo in lib/latex 

   
2005 MAR 02
   * improved the document in prim/emfield/_Epot/doc

   
2005 MAR 01
   * improved the document in prim/emfield/_Epot/doc
   * I think I figured out the stability problem with the em source
     terms: 
     - must fix to a constant Qbeam/N instead of Qbeam
     - also look into linearing the jcrossB terms
     

2005 FEB 28
   * modified the document in prim/emfield/_Epot/doc
   

2005 FEB 27
   * renamed the module prim/chem/_air8s13r to _air8s15r since
     two new reations were added related to the ebeam
   * fixed all jacobian derivatives in prim/chem/_air8s15r
   * fixed the module prim/chem_kerosene19s24r to take into
     account the new format of the chem.c modules
   * added a source jacobian in prim/fluid/_WIFANS_kpsi/fluid_source.c
     for FindSem
     - does not make a big difference, unfortunately
   * got rid of the function _ElectronMobility and replaced it
     by _ken
     
     
2005 FEB 26
   * fixed remaining bugs in the jacobian-needed derivatives in 
     prim/fluid/_WIFANS_kpsi
   * some changes to prim/chem/_air8s13r
     - added reactions 7a and 7b to take into account Qbeam
     - wrote down the reactions explicitly one by one
     - updated the doc for reactions 7a and 7b
     
     
2005 FEB 25
   * restructured the prim/fluid/_WIFANS_kpsi directory and added
     a file fluid_plasma.c 
     - added several derivatives in fluid_plasma.c to compute the
       chemical jacobian

       
2005 FEB 23
   * made some changes to prim/chem and prim/fluid/_WIFANS_kpsi/prim_source.c
     to tackle the new analytical derivatives of the chemical
     source terms

     
2005 FEB 20
   * lots of modifications to src/init.c and src/bdry.c
     so that the fluid action is read in the control file
   * fixed a bug in cycle/share/cycle_share.c concerning
     the VNN number which was not read before the EEF was
     computed in the runtime module
     

2005 FEB 18
   * huge changes to prim directory with new subdir fluid
   * fixed prim/chem/_hydrogen9s21r 

   
2005 FEB 17
   * added some docs to prim/chem/_air8s13r and _air15s76r
   * added some doc to prim/ebeam/_algebraic
   * upgraded the doc in prim/emfield/_Efieldpot/doc
   * moved prim/chem/_lutz and _singh to prim/chem/old
   * renamed prim/chem/_jachimowski to prim/chem_hydrogen9s21r
   * changed the call of the functions to prim/chem/_chem.h:
     - now  only has FindW as a function of (T, Tv, Te, rhok) 
     - and FinddWdx which returns dWdT, dWdTv, dWdTe, dWdrhok
     - much, much cleaner
     - WARNING: still need to upgrade prim/chem/_hydrogen9s21r
       and prim/chem/_kerosene/19s24r
   * fixed bugs in cycle/_marchingwindow_multizone/cycle.c
     - the residual is now updated in the entire window
       after the extra elliptic flux is computed
     - the extra elliptic flux is now not computed
       prior to the first iteration
   * made a change to cycle/_multizone/cycle.c
     - the extra elliptic flux is not computed prior to the first 
       iteration
   * reorganized the directory prim/ebeam so that the module
     ebeam.c does not return a source flux, but just the Qbeam
       
       
2005 FEB 16
   * took away all the coding related to qbeam in the prim/chem/* files
     - put it in one place in prim/_WIFANS_kpsi/prim_source.c
   * changed name of _Efieldpot directory part of prim/emfield to
     _Epot. 
   * added the mcbride nasa paper to prim/thermo/_mcbride2002/doc
   * added a clip for Efieldstar in prim/emfield/_Epot/emfield.c   
     - can be set in the control file, with the name Efieldstarmax 
   * modified substantially the file prim/_WIFANS_kpsi/prim.c, so that
     should the node not be resumed, no working variables are used when
     the functions _T(), _mut(), _P(), etc, are called.
     - NOTE: need to do the same to prim/_FANS_kpsi/prim.c
   * added a new directory in prim called ebeam
     - with subdirectory _algebraic
   * fixed a bug in prim/_WIFANS_kpsi/prim.c, as well as in the c files in
     prim/ebeam and prim/emfield concerning the soap codex variable whose
     action pointer needed to be set back to its original pointer
   * took away kv from the electron impact reactions in 
     prim/chem/_air8s13r/chem.c
   * put the directories prim/chem/_air10s19r and prim/chem_air4s0r in prim/chem/old
     - took away the calls to these directories in prim/chem/.config
       and prim/chem/Makefile
           
   
2005 FEB 15
   * changed the Cvib subroutine in prim/_WIFANS_kpsi/prim_source.c
     - does not include the linearization of the terms which include evzero
     - WARNING: perhaps this is good for the stability/robustness of the
       method, but will result in slower convergence (NEED SOME TESTING)
   * in the module prim/_WIFANS_kpsi, included Tvmax a clip for vibration energy
   * in the module prim/_WIFANS_kpsi, fixed a bug related to how ev was clipped
     by Tvmin
   * in cycle/share/cycle_share.c, took away the call for EEF_UpdatePrimMem()
     from EEF_UpdateQtilde(). Rather EEF_UpdatePrimMem() should be determined
     after the Boundary conditions are applied, part of the subroutine
     RuntimeActions when executing the action IterateEEF
     - this fixes a bug which used to occur when reading in a datafile,
       and obtaining the wrong flow residual near the boundary nodes
   * added some warnings/reminders in prim/thermo/_mcbride2002/thermo.c everywhere
     that the data for the species was guessed
   * Find a typo in the FindK subroutine part of prim/_WIFANS_kpsi/prim.c concerning
     one diffusion coefficient term associated with the nitrogen vibrational energy:
     - used to read K[ns+nd][specN2]+=_nustar(np,gl,spec)*_ev(np)*alpha;         
     - is now: K[ns+nd][specN2]+=_nustar(np,gl,specN2)*_ev(np)*alpha;      
   * Implemented a new air chemical solver named "air8s13r" in prim/chem
   * In the subroutine Findj part of prim/emfield/_Efieldpot/emfield.c, added
     a clip on the current, as defined by jmax in the control file
   * made the call to EEF_K how it used to be prior to feb 08.
             
     
2005 FEB 14
   * huge changes in the prim directory:
     - took away all the subroutines related to the electric field potential
       from prim/_WIFANS_kpsi
     - created a new subdirectory in prim called emfield (electromagnetic field)
       which takes care of determining the electromagnetic properties which
       can be used by the prim module
     - rearranged the PrimWIFANSKPSI() control file module: emfield is now
       an action being read an executed as part of the Prim.... module
     - also made changed to the files in prim/FANS_kpsi  
   * REMINDER: 
     - how about getting rid of ReadInitThermo in prim -> useless
     - how about getting rid of ReadInitChemActions in prim??
   * changed substantially the way that the emfield module works
     - now, after updating the electric field potential, it finds the
       electric field vector and stores it at every node.
     - from the stored electric field and magnetic field and the conductivity
       determined from the fluid properties, a current is found.
     - note that this does not affect the way the electric field potential
       is determined, but affects the value of the current when found from
       the Findj subroutine
     - should it be needed in the future, the previous Findj subroutine was renamed as
       Findj_from_interfaces
   * the modules src/init.c and src/bdry.c were modified considerably so that
     the initialization of the extra elliptic fluxes in the control file is done
     totally independently of the initalization of the fluid flow fluxes
     - neat looking! 	


2005 FEB 13
   * updated the manuscript in prim/_WIFANS_kpsi/doc/OhmsLawNeutral
	

2005 FEB 11
   * fixed all (I hope) latex files so that
     - hangcaption.sty is not called
     - psfig.sty is not called
     - the figures using {SCfigure} are now using simply {figure}
     - NOTE: this is necessary since the LaTeX included with Debian does
       not recognize hangcaption.sty or psfig.sty
   * in prim/_WIFANS_kpsi/prim_eef.c, changed the way betae, betai and 
     sigma are evaluated at the boundary nodes on TYPELEVEL_BASE (i.e., 
     on the boundary nodes adjacent to the flow inner nodes, betae, betai, 
     and sigma are set to the value found on the inner nodes)
     

2005 FEB 10
   * in files part of prim/_WIFANS_kpsi/, made the following changes:
     - in the control file, betaesolid and betaisolid are now used.
       instead of betaeprimesolid and betaiprimesolid
     - in the control file, now we use Jouleheatmax to limit the amount of
       joule heating, instead of limiting the current as was previously done
     - in the control file, added the constant rhoeminusref, which is used
       in determining _xi(): this helps ensure that the electron mass fraction
       continuity equation is solved with enough precision
     - in the subroutine _Te, _T() is not called directly anymore, since this
       subroutine is used by the elliptic field potential equation which
       can be applied even when the node is not resumed (the node needs to be
       resumed in order to apply _T)
     - took away betaiprime from the post variables
     - replaced betaeprime by  betae in the post variables


2005 FEB 09
   * added the variables sigmasolid, betaisolid, and betaesolid as part of
     the contorl file module primWIFANS_kpsi
     - those are assigned to all non-flow nodes (including all boundary nodes)
   * fixed a bug in prim/thermo/_mcbride2002/thermo.c: nuk for the species with
     0 atoms had undefined value. Now, it is set to zero.
   * added the files prim_eef.c and prim_eef.h and put into them all subroutines
     relevant to the elliptic field potential
     - now, after computing a new electric field potential, all terms affecting
       the fluid flow equations (joule heating, lorentz force, electron temperature)
       are stored in memory, and not altered until the next update of the
       electric field potential.
   

2005 FEB 08
   * implemented electron mobility coefficient subroutine as a function
     of the reduced electric field in prim/_WIFANS_kpsi/prim.c
   * implemented _betaeprime(), _betaiprime(), and _sigma() functions
     in prim/_WIFANS_kpsi/prim.c s a function of the reduced effective
     electric field
   * got rid of the initialization of sigma, betaeprime, and betaiprime
     in the subroutine WritePrimTemplate(FILE **controlfile), and
     also took away the variables betaeprime, betaiprime, and sigma
     in src/common.h
   * changed the call to EEF_K in prim/_prim.h, which required
     changing all c files in prim/_WIFANS_kpsi as well as
     cycle/share/cycle_share.c
     - WARNING: THIS WAS NOT NECESSARY
   * changed the function _etav() in prim/_WIFANS_kpsi/prim.c to be
     dependent on the reduced effective electric field
   * changed the Makefile in prim/chem/_kerosene19s24r/Makefile
     so that cleanall would not look into the doc directory
   * moved old unnecessary documents in prim/_WIFANS_kpsi/doc
     to old directory 
   * added subroutine void EEF_UpdatePrimMem(np_t *np, gl_t *gl, zone_t zone);
     in cycle/share/cycle_share.c
     - it calls at every node EEF_FindPrimMem(np_t *np, gl_t *gl, long l);
   * src/init.c was modified to call EEF_UpdatePrimMem at the end of the init module 
     in the control file
     - WARNING: DOES THIS WORK FOR BOUNDARY NODES AS WELL?? IS IT NEEDED?    
   * cycle/share/cycle_share.c was modified so that EEF_UpdateQtilde  calls
     EEF_UpdatePrimMem 
   * added the electron temperature to the post variables in
     prim/_WIFANS_kpsi/prim_post.c  
   * modified the files chem.c so that they call _Te() for the electron temperature


2005 FEB 07
   * implemented the electron temperature _Te subroutine in 
     prim/_WIFANS_KPSI/prim.c
   * changed the name of the function SpeciesMolWeight
     to _MolecularWeight
     

2005 FEB 06
   * renamed the module prim/chem/_airlowtemp to airlowtemp2
   * added airlowtemp1 which is the first chemical solver of
     low temperature air implemented with 10 species and 17 reactions
   * added a qbeam term to the energy source term in airlowtemp1
     and airlowtemp2
     

2005 FEB 05
   * added 5 species to module prim/thermo/_mcbride2002
   * changed the chemical model to 65 reactions in /prim/chem/_airlowtemp
   * added some documentation to prim/chem/_kerosene19s24r from Jason 
     Etele's thesis
   
   
2005 FEB 03
   * Implemented 17 reactions in the module prim/chem/_airlowtemp


2005 FEB 02
   * renamed the _hightemp thermo module as _mcbride1993
   * created the Mcbride2002 module in prim/thermo/_mcbride2002
   * added 10 species to the mcbride2002 module
   
   
2005 JAN 24
   * finished altering the document in prim/_WIFANS_KPSI/doc/Efieldpot:
     - culd be further generalized for a non-neutral gas though
     

2005 JAN 22
   * altered the document in prim/_WIFANS_KPSI/doc/Efieldpot:
     - made the derivation cleaner and more general
     - still needs some work though
      

2005 JAN 07
   * in cycle.c files part of multizone, marchingwindow_multizone, standard,
     and marchingwindow cycles, added the line "IterateEEF();\n" in the 
     WriteCycleTemplate() subroutine 
   * in cycle/_marchingwindow/cycle.c, modified subroutine PerformOneIteration()
     and made it similar to what is now done in cycle/_marchingwindowmultizone/cycle.c
     -> only significantly affects the gl->CONVERGED flag
     -> NOTE: not sure this is alright or not
     -> NEEDS TESTING
   * in cycle/_standard/cycle.c, modified the subroutine PerformOneIteration()
     -> took away the distributed memory algorithms related to the EEF
     -> won't work well with distributed mpi if using EEF, NEEDS FURTHER MODIFICATIONS
   * in cycle.c part of multizone and standard cycles, added EEF first iteration
     part of the ReadAndInitCycle() subroutines
     

2005 JAN 05
   * in src/main.c, added code to take care of the new option -cr (CheckResidual)
   * in cycle/share/cycle_share.c, added the subroutine CheckResidual() to verify
     the maximum ximax of the extra-elliptic-equation as well as the fluid flow
     equations


2005 JAN 04
   * in the file prim/_WIFANS_KPSI/prim_source.c, altered the subroutine EEF_FindS
     and set the S term to zero as it used to be prior to WARP 2004 NOV 08 
   * took away sidecap.sty from lib/latex
   * in   prim/_WIFANS_KPSI/doc/Efieldpot/report.tex
     and  prim/_WIFANS_KPSI/doc/Favre-Averaging/report.tex, 
     and  prim/_WIFANS_KPSI/doc/MHD/report.tex
     took away \include{hangcaption} and \include{psfig}   
   * in  prim/_FANS_KPSI/doc/Favre-Averaging/report.tex, 
     and prim/_FANS_KPSI/doc/Handbook/report.tex,
     and prim/_FANS_KPSI/doc/Performance/report.tex,  
     took away \include{hangcaption} and \include{psfig}   
   * in cycle/doc/report.tex took away \include{hangcaption} and \include{psfig}   
   * in prim/thermo/_hightemp/doc/report.tex took away \include{hangcaption} and \include{psfig}   
   * in prim/thermo/_perfect/doc/report.tex took away \include{hangcaption} and \include{psfig}   
          

2004 DEC 28
   * changed cycle/share/cycle_share.c and cycle/_marchingwindow_multizone/cycle.c
     cycle/_multizone/cycle.c so that the update of the extra elliptic flux can 
     be done in the control file as the user desires


2004 NOV 15
   * Changed the license due to departure from SNU
   * modified the file cycle/_standard/cycle.c to include the constant
     phi1 (the Extra elliptic equation is computed every phi1 iterations)
   * modified the file cycle/_multizone/cycle.c 
     - included the computing of the extra elliptic equation
     - added the constant phi2  
      

2004 NOV 10
   * added the directory prim/chem/_airlowtemp which for now has no
     chemical source terms
   * added the constants specN2 and specO to each chemical solver part
     of prim/chem


2004 NOV 08
   * fixed a bug in prim/_WIFANS_KPSI/prim_source.c concerning jmag and Bmag
     having the potential to be equal to zero in the subroutine
     FindSmhd()
     - added 1.0e-30 to both to prevent a division by zero later on
   * in file prim/_WIFANS_KPSI/prim_source.c, took away the subroutines
     EEF_xibardiff and EEF_UpdateSourceLinkAtNode
   * in cycle/share/cycle_share.c took away the subroutines EEF_FindMinis() and 
     EEF_UpdateSourceLink()
   * in file prim/_WIFANS_KPSI/prim_source.c, remade the subroutine EEF_FindS
     as it used to be (uncommenting the important lines)


2004 OCT 06
   * some changes to src/common.c and src/bdry.c to ensure that the
     module _FANS_kpsi still works after the modifications done
     adding the extra elliptic flux


2004 SEP 26
   * still further modifications to the subroutines related to the
     left/right eigenvectors and eigenvalues as well as the flux
     jacobian matrix in prim/_WIFANS_kpsi/prim_conv.c
     - necessary due to the addition of the nitrogen vibration energy flux
     - the eigenvalues, eigenvectors, flux Jacobian matrix have been
       verified to be correct 


2004 SEP 23
   * lots of changes to files in prim/_WIFANS_KPSI/ in order to
     accomodate the nitrogen vibrational energy flux
   * changes also in prim/thermo/_hightemp/thermo.c to take away the
     equilibrium nitrogen vibration energy
     

2004 JUL 23
   * added a jmax clip in prim/_WIFANS_KPSI/prim.c


2004 JUL 22
   * changed the definition of betaiprime in prim/_WIFANS_KPSI/prim.c


2004 JUN 21
   * changed cycle/_sweepingcycle_multizone/cycle.c to get one sweep
     for one exact iteration of the EEF
   * fixed a bug in cycle/share/cycle_share.c concerning the work
     allocated to the different zones for the fluid flow equations
     being dependent on the EEF ximax
     

2004 JUN 18
   * changed cycle/_standard/cycle.c back to how it was before june 15
     - now solves the fluid flow at all iterations
   * modified cycle/_marchingwindow_multizone/cycle.c
     - got rid of the existing method of coupling the EEF with the fluid
       flow equations
     - simplified greatly the approach taking advantage of the exact
       inversion of the EEF
       

2004 JUN 16
   * finished implementation of xdma in cycle/share/cycle_share.c
   * changed the boundary condition for insulated extra-elliptic nodes from
     second-order to first-order accurate in prim/_WIFANS_kpsi/prim_bdry.c


2004 JUN 15
   * in cycle/_standard/cycle.c, changed the subroutine performoneiteration
     so only the extra elliptic flux is solved
   * started the implementation of a direct inversion solver with xdma for the
     extra elliptic flux in cycle/share/cycle_share.c


2004 JUN 14
   * fixed some bugs in insulated boundary conditions: the terms of the
     electric field potential equation depending on findsigmatilde are
     rewritten as a function of findsigmatildeinterface, which is set to zero
     at the interface to an insulated BC
     - affects only files in prim/_WIFANS_kpsi/ directory


2004 JUN 11
   * modified the pseudo-time stepping linearization for the extra elliptic
     flux in cycle/share/cycle_share.c, subroutine EEF_update_dQtil()
   * modified the pseudo-time step for the extra elliptic equation from
     the max to the min VNN condition in cycle/share/cycle_share.c, subroutine
     EEF_Finddtau()


2004 APR 01
   * changed cycle/_marchingwindow_multizone/cycle.c, to update the fluid flow
     properties everywhere in the domain prior to the first iteration
     - not done when not using the extra elliptic equations
     - necessary to compute the current correctly when solving the electric
       field potential at the boundaries where the velocity is extrapolated
       or fixed to zero after the initial conditions are applied
   * in the definition of EEF_xi part of prim/_WIFANS_kpsi/prim.c, changed
     it back to its original form, i.e., without normalizing by the conductivity


2004 MAR 31
   * in cycle/share/cycle_share.c, modified the subroutine EEF_Finddtau()
     - fixed a bug concerning how the time step was calculated from the min VNN condition
     - changed the definition of the time step from the min VNN condition to
       the maximum VNN condition
   * modified the subroutine Findj_cartesian in prim/_WIFANS_kpsi/prim.c
   * added four new post variables in prim/_WIFANS_kpsi/prim_post.c (i.e. the current at
     each interface)
     - WARNING: this is temporary! needs to be taken away when code is ready to go
             

2004 MAR 30
   * in prim/_WIFANS_kpsi/prim_bdry.c modified the subroutine EEF_UpdateBdryPrim()
     - changed the insulated boundary condition for the electric field potential
       to a second-order accurate extrapolation from the inner nodes
   * in prim/_WIFANS_kpsi/prim_conv.c, added the subroutine EEF_FindFinterface()
     which computes the term proportional to v_cross_b at the interface
   * in prim/_WIFANS_kpsi/prim_source.c, changed the subroutine EEF_FindS()
     and set the source term to zero
   * in prim/_WIFANS_kpsi/prim_bdry.c, added the subroutine EEF_NoFluxThroughBdry()
   * in cycle/share/cycle_share.c, modified the subroutine EEF_update_Res()
     by adding EEF_AddConvRes()
   * in cycle/share/cycle_share.c, added the subroutine EEF_AddConvRes()
   * in cycle/share/cycle_share.c, blanked out the subroutine EEF_ReupdateNearbyBdryNodes()



2004 MAR 29
   * In calculating the residual for the electric field potential (EEF_..),
     now updates the boundary nodes surrounding the inner node everytime
     the residual is computed. Slower, but works well -> this is necessary
     since corner boundary nodes can have two values, depending on the
     direction of the extrapolation
     - modified the subroutine EEF_update_Res in cycle/share/cycle_share.c
     - modified also the subroutine Findj in prim/_WIFANS_kpsi/prim.c
       to update the surrounding boundary nodes when finding the current
     - added the subroutine EEF_ReupdateNearbyBdryNodes(np_t *np, gl_t *gl, long l);
       in cycle/share/cycle_share.c


2004 MAR 25
   * fixed a bug in prim/_WIFANS_kpsi/prim.c in the Findj_interface
     subroutine
   * added the additional vcrossB function part of the control file,
     in prim/_WIFANS_kpsi/prim.c
   * in prim/_WIFANS_kpsi/prim.c, added an initialization procedure of the
     terms sigma, betae, betai
   * NOTE: check these bugs:
     - the new findj subroutine doesn't capture perfectly well the current
       when the metrics change a bit -> needs testing
     - reading and writing to the outfile, and reading again causes a change
       in the fluid flow residual
     - having problems converging to machine zero a system in which all boundaries
       for the electric field potential are insulated


2004 MAR 24
   * still modified Findj() subroutine in prim/_WIFANS_kpsi/prim.c..
     - it's getting better, but some flaw where the current is parallel and
       near the wall where there's high change in metrics
       

2004 MAR 23
   * modified prim/_WIFANS_KPSI/prim.c and prim/_WIFANS_KPSI/prim_source.c
     for new calculation of the psi source term related to v_cross_B
     - NOTE: still some problems though in prim/_WIFANS_KPSI/prim.c concerning
     the calculation of the current in Findj
     

2004 MAR 22
   * implemented variable conductivity-betae-betai
   * added sigma, betae, betai as post processing output
   * NOTE: there seems to be a bug related to reading and writing datafiles:
           the convergence history changes. Need to check this out.
     NOTE: be careful when assessing the conductivity, betae, betai in between
           nodes: need to clean the code on this point.

2004 MAR 19
   * Continued the modifications to several files to remove some bugs
     related to what has been added on 2004 MAR 18
     

2004 MAR 18
   * made some modifications to src/common.h, src/common.c, and src/bdry.c
     concerning a new NODETYPE, NODETYPE_EEF needed to distinguish between the
     boundary conditions of the extra elliptic equations and the fluid flow
     equations


2004 MAR 03
   * changed the vec_t to EXM_vec_t everywhere
     - got rid of the definition of vec_t in src/common.h
     

2004 FEB 28
   * added the parameter betai to the control file in prim/_WIFANS_kpsi/
     - altered prim/_WIFANS_kpsi/prim.c
     - altered prim/_WIFANS_kpsi/prim.hh
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     FindSmhd() to add the ion slip joule heating
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     EEF_UpdateSourceLinkAtNode to add the ion slip joule heating
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     EEF_xibardiff to add the ion slip joule heating


2004 FEB 27
   * added the function EXM_CrossProduct() in lib/exm/exm.c


2004 FEB 17
   * added the possible action AddMagnetDipoleRow()
     in prim/_WIFANS_kpsi/prim.c and the necessary changes
     in prim/_WIFANS_kpsi/prim.h


2004 FEB 16
   * added the function EXM_NumIntegVector() in lib/exm/exm.c
     and lib/exm/exm.h


2004 FEB 05
   * added the functions POST_H and POST_momentum in the file
     prim/_WIFANS_kpsi/prim_post.c
   * added the functions POST_H and POST_momentum in the file
     prim/_FANS_kpsi/prim_post.c
   * took away POST_momentum everywhere from src/post.c
   * took away the header for Post_momentum from prim/_prim.h
   * took away POST_momentum subroutine from prim/_FANS_kpsi/prim_post.c
   * took away POST_momentum subroutine from prim/_WIFANS_kpsi/prim_post.c
   * added the function _Fx() in src/post.c which returns the force exerted
     on the fluid in the x direction divided by the mass flow rate.


2004 FEB 03
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutines
     FindSmhd(), EEF_UpdateSourceLinkAtNode(), and EEF_xibardiff()
     in which there was a bug: instead of using the electrical conductivity
     gl->prim.sigma, the CFL-related number gl->sigma was used
   * in file prim/_WIFANS_kpsi/prim.c, reinstated the subroutine FindElectricField
     but with a call not including the metrics which are found by the
     subroutine itself
   * in file prim/_WIFANS_kpsi/prim.c, got rid of all the Findj subroutines
     that are not used, except for the original Findj subroutine that gave
     erroneous answers in high aspect ratio cells
   * added POST_momentum and POST_H in the subroutine ReadPost_Functions()
     part of the file src/post.c
   * in the file src/post.c and subroutine WritePostTemplate(), added
     _MassFluxAveMomentum() and _MassFluxAveTotalEnthalpy()
   * in the file prim/_prim.h, added the definitions of POST_momentum()
     and POST_H()
   * in the file prim/_WIFANS_kpsi/prim_post.c, added the subroutines POST_momentum()
     and POST_H()


2004 FEB 02
   * in file prim/_WIFANS_kpsi/prim.c, updated the subroutine Findj()
   * in file prim/_WIFANS_kpsi/prim_source.c, updated the way the velocity
     vector was found in the subroutines  EEF_UpdateSourceLinkAtNode()
     and EEF_xibardiff()


2004 JAN 31
   * in file prim/_WIFANS_kpsi/prim.h and prim.c: changed the call to Findj
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     FindSmhd() so that the source term to the energy equation corresponds exactly
     to the sum of the work and the joule heating at the discrete level, rather
     than to E dot j
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     EEF_UpdateSourceLinkAtNode so that the source term to the energy equation corresponds
     exactly to the sum of the work and the joule heating at the discrete level, rather
     than to E dot j
   * in file prim/_WIFANS_kpsi/prim_source.c, modified the subroutine
     EEF_xibardiff so that the source term to the energy equation corresponds
     exactly to the sum of the work and the joule heating at the discrete level, rather
     than to E dot j
   * in file prim/_WIFANS_kpsi/prim.c, updated the subroutine Findj()


2004 JAN 08
   * fixed a bug in prim/_WIFANS_kpsi/prim.c concerning 1D metrics

2004 JAN 07 
   * cleaned up warp/bin/

2003 DEC 11
   * included the function _x() in lib/gridg/1Dbase.c
   * added the function _R() in prim/_FANS_kpsi/prim.c
     and added a post variable in prim/_FANS_kpsi/prim_post.c
     

2003 DEC 09
   * fixed a bug in cycle/ts/_explicit/ts.c -> used to refer to gl->effiter,
     but is now gl->effiter_Q


2003 JUL 28
   * fixed a bug in src/data.c concerning reading in ascii and binary data files
     when no extra elliptic flux is present (basically, when choosing primFANSkpsi)


2003 JUN 25
   * took away the change in cycle/_marchingwindow_multizone/cycle.c so that the EEF
     flux is not solved in multizone mode anymore
     

2003 JUN 18
   * the EEF flux is now solved in multizone mode in cycle/_marchingwindow_multizone/cycle.c


2003 APR 14
   * removed the modification made on March 31st.


2003 MAR 31
   * in cycle/_marchingwindow_multizone/cycle.c, made a modification to line
     272 to prevent the global iteration on the extra elliptic variable to be
     performed at every iteration in a zone where there's some streamwise ellipticity
     caused by the magnetic field interacting on the flow
     NOTE: NEEDS TO BE CHANGED IN THE FUTURE!!!!
     

2003 FEB 06
   * moved prim/_WIFANS_kpsi_coupled to experimental (choiceX)


2003 FEB 05
   * there was a bug in prim/_WIFANS_kpsi/prim_conv.c which prevented the entropy
     correction from being activated if either zetabar1 or zetabar2 were 0
   * in prim/chem/_jachimowsky/chem.c changed the reference to _ResumedNode()
     to NodeResumed() which was part of an assert() command
   * found a bug in prim/_WIFANS_kpsi/prim_conv.c in the subroutine ROE_FindRoeAtInterface_RoeAverage()
     concerning the calls to the functions _V and _X on the node np for which
     the metrics were not known and initialized.
     - NOTE: need to check/change(?) the file prim/_FANS_kpsi/prim_conv.c about this


2003 FEB 02
   * Changed the names ONE_SWEEP and DIM_SWEEP to I_SWEEP and IJK_SWEEP
     everywhere in warp
     - makes much more sense
   * added the possibility to have a line-tdma sweep in cycle/share/cycle_share.c
     - this was done since had some issues with AF for a case in which the grid was
       all screwed up. had nothing to do with AF itself..
     - not sure the line-tdma  sweep really works though.. not too important
     

2003 FEB 01
   * added function EEF_AddDQtoQetilde() in prim/_WIFANS_KPSI/prim.c to
     put a possible clipping routine in the future: this is called from
     cycle/share/cycle_share.c


2003 JAN 25
   * added a condition in cycle/_marchingwindow_multizone/cycle.c so that
     the extra elliptic equation is always updated when EEF_varphi>EEF_varphiverge
     in the marching window: speeds things up when a zone of streamwise ellipticity
     is encountered due to the EEF


2003 JAN 24
   * took away the multizone solver for the extra elliptic equation in
     cycle/_marchingwindow_multizone/cycle.c


2003 JAN 23
   * added a multizone solver for the extra elliptic equation


2003 JAN 22
   * NOTE!!: in src/data.c, need several changes in ReadAscii and WriteAscii
     to include EEF_effiter_R and EEF_effiter_Q
   * changed the purpose of the user-defined constant phi4 in
     cycle/_marchingwindow_multizone/cycle.c
     - now, it controls how many fluid flow iterations are to be performed
       for each global iteration performed on the extra elliptic equations
   * altered src/data.c, src/common.h, src/control.c and cycle/share/cycle_share.c
     to include EEF_effiter_R


2003 JAN 21
   * changed the condition for the upstream boundary of the marching window
     when EEF is in effect to the minimum between Minis (as determined in
     the cycle_share.c module) and the i-station determined as without EEF
   * changed the copyright to include the new year (2003)
   * caught yet another bug in cycle/_marchingwindow_multizone/cycle.c
     where the boundary nodes of the eef in the window were not updated
     prior to calculating the residual
     - important to do since the eef boundary nodes depend on the fluid flow
       properties at an insulated surface


2003 JAN 20
   * modified cycle/_standard/cycle.c so that the pseudotime update of Q or efp
     is not performed when the convergence criterion is met
   * fixed a bug in cycle/share/cycle_share.c where the zones of the multizone
     algorithm were computed when xi>xiverge instead of xibar+xibardiff>xiverge
   * fixed a bug in cycle/_marchingwindow_multizone/cycle.c where the UpdateSourceLink
     subroutine was part of an if statement while it should not have been


2003 JAN 18
   * many changes to finalize the implementation of the EEF modifications to
     the marching window cycle, just as is indicated in the JCP paper
     - cycle/_marchingwindow_multizone/cycle.c and cycle/_standard/cycle.c are done
     - NOTE 1: need to alter the other cycles
     - NOTE 2: need the bar variables (Slink, xidiffbar and xibar) to the data file)


2003 JAN 17
   * several changes in cycle/_marchingwindow_multizone/cycle.c and
     cycle/share/cycle_share.c
     - now, the residual of the EEF equations is updated after the fluid flow fluxes
       are updated in the marching window
     - should the maximum residual of the EEF equations be less than EEF_xiverge,
       then don't iterate needlessly
     - should speed up the marching window especially for large meshes


2003 JAN 14
   * changed the way the entropy correction term is added to the Roe scheme:
     - it is now added to the eigenvalues "u-a" separately to the eigenvalues "u"
     - does not introduce excessive artificial dissipation in shear layers
       and boundary layers if entropy correction is applied only to "u-a" eigenvalues


2003 JAN 11
   * added a new boundary condition to the prim/_WIFANS_kpsi module: adiatic wall
     with specified phi
   * fixed a bug in prim/_WIFANS_kpsi/prim_bdry.c where the symmetrical boundary
     conditions for phi were badly posed


2003 JAN 10
   * fixed a bug in cycle/share/cycle_share.c related to the determination of the
     metrics at the boundary node to compute EEF_G


2003 JAN 09
   * fixed a bug in prim/_WIFANS_kpsi/prim_bdry.c


2003 JAN 07
   * added two new boundary conditions in prim/_WIFANS_kpsi/


2003 JAN 04
   * fixed a bug in cycle/share/cycle_share.c where TYPELEVEL_WORK was
     specified when updating the boundary nodes of the extra elliptic flux
     - changed to TYPELEVEL_BASE (of course!)


2003 JAN 03
   * updated the control file output in prim/_WIFANS_kpsi/prim_init.c, so
     that it's clear that the last value to be added in the init module
     lines is the electric field potential
   * in the file prim/_WIFANS_kpsi/prim.c, changed the name of the module
     from FANSkpsi to WIFANSkpsi (!)


2002 DEC 30
   * a bug fix in cycle/_marchingwindow_multizone/cycle.c where the
     updatesourcelink is now performed on window+bb+br instead of
     window+bb only
   * another bug fix in cycle/_marchingwindow_multizone/cycle.c where
     the boundary nodes were updated uselessly prior to calculating the
     residual when the marching window expands to the left by more than
     bb+br nodes: the boundary nodes are already updated when being resumed


2002 DEC 28
   * a bug fix in cycle/_marchingwindow_multizone/cycle.c where the
     residual had to be updated when the window was expanded


2002 DEC 27
   * made several modifications to add the VNN in the cycle module:
     - works in the same way as the CFL number, but affects only the extra
       elliptic fluxes for the moment
     - modified cycle/*/cycle.c !!SOME_STILL_TO_BE_DONE!!
     - modified src/control.c src/common.h and src/data.c
     - modified cycle/share/cycle_share.c
   * modified quite a bit cycle/share/cycle_share.c so that the scalar
     AF algorithm corresponds exactly to the one outlined in the new
     JCP paper (for the electric field potential equation), with the
     same definition of the pseudo-time step as well


2002 DEC 25
   * modified the definition of _xi() in prim/_WIFANS_KPSI/prim.c to take
     into account all fluid flow fluxes: finally!!


2002 DEC 23
   * changed the definition for _chi() in prim/_WIFANS_kpsi/prim.c
     and the corresponding document in prim/_WIFANS_kpsi/doc/MHD/report.tex
     - tested to be identical to previous warp version


2002 DEC 16
   * added a streamwise ellipticity sensor for the EEF equation
     - doesn't seem to help at all: even detrimental!


2002 DEC 14
   * changed the order of the Bdry() and Prim() modules in the control file
     this is necessary if a property across all nodes is to be written to
     the data structure in the prim module (the data structure is initialized
     in the Bdry module)
     - much prettier ;-)
   * cleaned up several function calls in cycle/share/cycle_share.c
   * modified cycle/_marchingwindow/cycle.c to take into account EEF
   * modified cycle/_multizone/cycle.c to take into account EEF
   * modified cycle/_standard/cycle.c to take into account EEF
   * modified cycle/_sweepingwindow/cycle.c to take into account EEF
   * modified cycle/_sweepingwindow_multizone/cycle.c to take into account EEF


2002 DEC 13
   * A lot of bug fixes all around to make the extra elliptic flux to work
     combined with the marching window. Seems to work now, strangely ;-)
   * included the storage of the magnetic field in every valid node
     in the src/bdry.c module
     - not sure this is elegant!! how about changing the order of things
       in the control file, and putting the Bdry() module before the
       Prim() module? this would permit the magnetic field to be determined
       as part of the prim module, which is more elegant
     - needs to be changed, but tomorrow: need to go home now..


2002 DEC 12
   * so many changes it's not worth noting. Many strange coincidences in my personal
     life happened today: code improvements were minor.. personal life
     improvements? most probably for the best.. life is hard and strange
     sometimes..


2002 DEC 11
   * fixed several bugs in cycle/cycle_share.c and prim/_WIFANS_KPSI related
     to solving the TDMA of the extra elliptic fluxes
   * started the implementation of the "sourcelink" technique, which will
     detect streamwise ellipticity due to the coupling to the electric field
     potential equation


2002 DEC 10
   * implemented many changes to cycle/share/cycle_share.c to take into account
     extra elliptic flux equation


2002 DEC 09
   * renamed the directory prim/_WIFANS_kpsi to prim/_WIFANS_kpsi_coupled
   * created a new directory named prim/_WIFANS_kpsi where the maxwell-related
     equation is uncoupled from the navier-stokes equations
     - this is to permit the application of the marching-window to the WIFANS equations
   * fixed some typos in prim/_FANS_kpsi/prim_bdry.c related to the
     reservoir2 boundary condition by jason etele (grrr)
   * replaced all occurences of variables named xtra and xflux in the directory
     prim/_FANS_kpsi by k and psi
   * copied prim/_FANS_kpsi to prim/_WIFANS_kpsi
   * added all the necessary subroutines to tackle an extra elliptic flux (phi)
     in prim/_WIFANS_kpsi
   * modified src/data.c and src/common.h to take into account a possible extra
     elliptic flux through the EXTRA_ELLIPTIC_FLUX flag


2002 DEC 06
   * improved the algorithm in cycle/ts/_scalarAF to take into account
     implicit boundary conditions
     - works great, especially with a varying time step!!
     - added a subroutine to find the TDMA coefficient at the boundaries
       in prim/_WIFANS_kpsi/prim_bdry.c


2002 DEC 05
   * modified the LICENSE file
   * added a new directory in cycle/ts/_scalarAF


2002 DEC 04
   * fixed a bug in prim/_WIFANS_kpsi/prim_bdry.c concerning the extrapolation
     of phi on a fixed-phi boundary when using the marching window
   * added the Kenjeres and Hanjalic MHD turbulence correction to
     prim/_WIFANS_kpsi/prim_source.c
     - also upgraded prim/_WIFANS_kpsi/doc/MHD
   * modified the insulated boundary condition for phi in prim/_WIFANS_kpsi/prim_bdry.c
     so that the nearby boundary nodes are not used


2002 DEC 03
   * fixed bug in subroutine FindB(); part of prim/_WIFANS_kpsi/prim.c
     when theta=0.0
   * fixed two bugs in prim/_WIFANS_kpsi/prim.c that were caught by
     valgrind
   * upgraded the prim/_FANS_kpsi/ directory to take into account the new
     approach at determining the metrics in the K matrix


2002 DEC 02
   * Implemented the proper FindB() subroutine in prim/_WIFANS_kpsi/prim.c,
     - includes a sum of the dipoles
     - still a bug to be fixed when theta==0.0
     - included the derivation in prim/_WIFANS_kpsi/doc/MHD/report.tex


2002 NOV 29
   * added a new doc in prim/_WIFANS_kpsi/doc called MHD
   * took away the previous doc subdirectories in prim/_WIFANS_kpsi/doc


2002 NOV 28
   * changed the definition of _chi in prim/_WIFANS_kpsi/prim.c
     - this was due to a mistake in the derivation of chi part
       of the document covering the WIFANS governing equations
   * fixed a bug in the Findj() subroutine part of prim/_WIFANS_kpsi
     - summation was from 1 to nd instead of 1 to 3


2002 NOV 27
   * changed the call to the FindK() subroutine, so that it uses
     the metrics determined at an interface when computing K at a node:
     - necessary to conserve the current on a skewed mesh
   * changed the definition of chi from sigma(n,m) to sigma(m,n): seems
     to work, but doesn't respect the usual rule
     - check this!!!! _checked_
     - there was a mistake in the governing equations in the
       document: corrected now


2002 NOV 26
   * made some modifications to the way phi is extrapolated at the boundary:
     - ensures that the normal component of the current to the wall vanishes
       at a discrete level
     - but! uses nearby boundary nodes: bad bad bad. Needs changes
       but for now, seems to work (NOTE: THIS NEEDS TO BE CHANGED IN THE
       FUTURE  _DONE_)


2002 NOV 23
   * upgraded most boundary conditions to take into account an insulated
     phi at the boundary in prim/_WIFANS_kpsi/prim_bdry.c
     - needs some testing, but tomorrow: let's go home now..


2002 NOV 22
   * changed the call of _dtau to Finddtau where an array is returned
     with nf values for dtau.
     - modified all files in cycle/ts accordingly
   * fixed a few bugs in prim/_WIFANS_kpsi
     - the testing continues


2002 NOV 21
   * continued implementation of the Weakly Ionized FANS equations
     in the directory prim/_WIFANS_kpsi
     

2002 NOV 20
   * renamed prim/_FANS_kpsi_MHD to prim/_WIFANS_kpsi
   * several changes to the files in prim/_WIFANS_kpsi to include an extra
     flux for the electric potential


2002 NOV 13
   * added the function krodelta in lib/soap/soap.c
     - also added it to the doc in lib/soap/doc


2002 NOV 02
   * fixed a bug in src/post.c concerning the area_yz function not functioning
     for 1D flows.
     - added a function _Acs() in prim/metrics/_generic/metric.s
     - added the function call _Acs() in prim/_prim.h


2002 NOV 01
   * fixed a bug in prim/_FANS_kpsi/prim_conv.c concerning calls to the
     function _Omega() in 1D mode
   * added a new prim directory prim/_FANS_kpsi_MHD where some modifications
     are performed to the source terms to account for MHD effects in Smhd


2002 SEP 08
   * added the subdirectory cycle/ts/conv/_AW
   * modified the Roe time stepping scheme in cycle/ts/conv/_Roe
   * put the scheme cycle/res/conv/_YeeRoe_old as experimental (doesn't
     compile)
   * for all subdirectories of cycle/, changed default value for
     IMPLICITBC from FALSE to TRUE


2002 AUG 04
   * fixed a bug concerning the update of the effective iterations
     in cycle/ts/_explicit/ts.c
   * in cycle/res/_generic/res.c, improved the subroutine AddDiffRes()
     by storing in memory K and G
   * in cycle/res/conv/_AW/convres.c, improved the subroutine AddConvRes()
     by computing the interface flux 2 times less
     

2002 AUG 01
   * got rid of _generic module in cycle/res/conv
   * got rid of FindFinterface() subroutines in prim/_FANSkpsi/prim_conv.c
   * modified the Roe subroutines to use the new metrics at the interface
     - modified cycle/res/conv/_Roe/convres.c
     - modifed prim/_FANS_kpsi/prim_conv.c
     - modified cycle/ts/conv/_Roe/convts.c
     - modified src/test.c
     - modified cycle/res/conv/YeeRoe/convres.c
   * got rid the the new metrics module in prim/metrics/_2ndOrder
     - made the old metrics module the default, renamed "_generic"


2002 JUL 31
   * added the AW method in cycle/conv/res
   * added a new FindMetricsInterface() subroutine in prim/metrics/
     - makes the scheme perfectly control volume in 2D at least
       * updated AW, need to update Roe and YeeRoe


2002 JUL 08
   * fixed a bug in lib/soap/soap.c, in the subroutine SOAP_CopyCodex()
     where not all the codex variables were being copied
     - this affects the error message when a problem is found in the Runtime()
       module of the control file for example


2002 JUN 08
   * changed the default output to the Post() module, in src/post.c
     - more friendly to a new user

     
2002 JUN 05
   * got rid of iteration reinitialization by the marching-window and
     the sweeping-window in the cycle/*/cycle.c files
     - added a flag in src/main.c called "-reset", to reset the iteration
       count to zero after the data file is read: only to be used in
       UNSTEADY mode when starting a new time step


2002 JUN 04
   * in src/main.c, added a line for UNSTEADY flag (yes or no) when
     calling warp with the -v flag
   * checked the fusina bug concerning -i -im1 and -im2 : couldn't reproduce it.
     - probably a fusina manipulation ``error''
     - let's forget about it..
   * in prim/_prim.h added two new functions called
     - WriteBdryTypes()
     - WriteInitTypes()
     which are called from the src/bdry.c and src/init.c modules
     respectively
     - makes the default WARP control file much prettier, more organized
   * moved the sigma declaration from the Prim() module to the Cycle->Runtime()
     module in the control file
     - this is done so that sigma and CFL are declared at a similar spot
     - sigma should not have been located in the Prim() module since it
       does not affect the residual
     - gives the user the possibility to vary sigma as a function of the
       iteration count
     - modified src/data.c so that sigma is saved in the data files,
       in DATAFORMAT 005
     - if a datafile of DATAFORMAT  004 (or previous) is read, then sigma
       is given a default value of 0.5
   * greatly improved the default control-modules by the cycle/*/cycle.c
     files
     - documents what phi1, phi2, phi3 do, and what xiverge, and varphiverge
       stand for
   * fixed the behaviour of the entrance variable in the marching window
     and sweeping window modules;
     - now, the upstream boundary of the window is such that it is at least
       equal or greater than the entrance
   * in src/post.c, changed all the calls to fatalerror to SOAP_fatalerror,
     so that the line number where the error occurs is outputted


2002 JUN 03
   * in prim/_FANS_kpsi/, made the necessary changes so that in the control
     file, instead of reading in EPSILON=TRUE or FALSE, now it reads in
     the variable PSI which can be set to either PSI_OMEGA or PSI_EPSILON
   * documented the multiple variables in the module PrimFANSkpsi()
   * took away as options for now the new metrics 2ndorder scheme
     and the new YeeRoe scheme. Simplifies the make config process
     greatly


2002 MAY 28
   * added the possibility of not outputting to a file using fprintf
     in lib/soap/soap.c
     - this way, when using MPI, only one process outputs to the file
   * fixed a bug in src/control.c: renamed the function _x() to
     _x_DISTMPI_compatible() which takes into account DISTMPI
     - also affects src/post.c
   * fixed a couple of bugs in the subroutines BA_printf
     and BA_fprintf part of lib/soap/soap.c concerning the screen output:
     basically, all the arguments of printf or fprintf were not being processed
     if not outputting to the screen of to files. This created hang ups
     when using DISTMPI
   * added a flag for SYSTEMCALL in lib/soap/soap.h
     - WARNING: do not use the system() action if using MPI


2002 MAY 27
   * the WriteBodyForcesToFile() action in src/post.c is now MPI
     compatible
   * fixed a bug in FindBodyForces subroutine part of src/post.c
     concerning thetasgn (this affects both the viscous shear and
     the body force)
   * included the parameter q_min when calling Fpot or Pback from
     within the post module of the control file -> set to 1.0 by default
   * fixed a bug in src/post.c where the domain_post was not reset
     properly when the action ResetPostDomain() was called


2002 MAY 26
   * added the include() action in lib/soap/soap.c
     - jasone has waited long enough ;-)


2002 MAY 24
   * cleaned up prim/_FANS_kpsi/prim_post.c
   * added some new mass flux averaged functions in src/post.c, including
     the mass flux averaged density, pressure, temperature, and speed
   * in lib/soap/soap.c, added the ``system'' action
   * added the action ``fprintf'' to lib/soap/soap.c
   * added some documentation in lib/soap/doc for string handling in SOAP


2002 MAY 23
   * modified src/post.c so that the functions _x(), _y(), and _z() called
     from within the Post() module in the control file apply to the post
     domain, and not to the entire domain as it was done previously
   * fixed a bug in the subroutine SOAP_NumArgum() in lib/soap/soap.c:
     used to return 1 when number of arguments is zero
   * fixed a bug in subroutine _Fpot in src/post.c (did not divide by
     the mass flow rate)
   * changed the call to the function POST_ReversiblyExpandSpeedAndDensityToPressure()
     in prim/_FANS_kpsi/prim_post.c
   * changed the rank of the species in the subroutine _mdotreacting
     part of src/post.c
     - starts counting from 1 instead of 0


2002 MAY 19
   * NOTE: DO NOT USE WARP VERSIONS MAY 12, MAY 13, or MAY 15: BIG BUG
   * inserted a new function ZoneIntersectionOld in src/common.c
     - renamed the calls to ZoneIntersection() to ZoneIntersectionOld
     - ZoneIntersectionOld() corresponds to the old ZoneIntersection()


2002 MAY 15
   * included the additions by Jason Etele in prim/_FANS_kpsi/prim_bdry.c
     concerning the Reservoir2 boundary condition


2002 MAY 13
   * almost finished the implementation of the Post(); module functions
     - need to test
     - same note: give access to the postvars defined in prim/_prim.h


2002 MAY 12
   * continued the implementation of the Post(); module functions
     in src/post.c
     - only the mixing efficiency missing
     - note: give access to the postvars defined in prim/_prim.h
   * fixed a bug in src/common.c in function ZoneIntersection()
     - NOTE: this was badly fixed!!, altered again on MAY 19


2002 MAY 02
   * started the necessary modifications to src/post.c to include
     a function calling the thrust potential
     

2002 APR 21
   * fixed a bug in lib/gridg/share.c where the error was not
     returned properly for a FindSegment4 call


2002 APR 14
   * added flag -nox in src/main.c, which also affects
     src/common.c
     - its purpose is to prevent the code from exiting when a fatal
       error is encountered in the subroutine fatalerror(); in
       src/common.c


2002 APR 06
   * in src/test.c, added a new flag to test, i.e. lambdafind,
     which scans through a range of eigenvalues and determines
     the determinant. Very useful to make sure that all eigenvalues
     have been included in the eigenvalue matrix (lambda).


2002 APR 04
   * added the node type check exchange in src/bdry.c, so that the MPI exchange
     will not hang
   * added the broadcasting of SOAP variables in src/control.c


2002 APR 04
   * fixed a bug in src/control.c concerning DISTMPI not reading
     the Grid module (except for process 0).


2002 MAR 22
   * small change to lib/soap/soap.c, where the error message for
     SOAP mentions that the problem is in the vicinity of the line number


2002 MAR 17
   * src/test.c has changed slightly to test the Roe scheme


2002 MAR 14
   * some changes to Vigneron scheme


2002 MAR 10
   * added first-order Roe scheme in cycle/res/conv
   * a few bug fixes to the Vigneron scheme


2002 MAR 07
   * bug fixes to Vigneron scheme..
   

2002 MAR 06
   * added REACTING flag in PrimKpsi() module of the control file
   * added the function ROE_FindQAtNode in prim/ modules.
     - altered the convres modules to use this function
     - makes everything much prettier in cycle/res/conv
   * changed the module name in the control file from PrimKpsi()
     to PrimFANSkpsi()


2002 MAR 05
   * small changes to vigneron scheme (added artificial diffusion)
   * modified the roe related subroutines in prim/
     - altered convres schemes YeeRoe, YeeRoe_old and StegerWarming_3rdorder
     - altered Roe convts scheme
     - altered also src/test.c which made some calls to the roe subroutines
     - WARNING needs checking (checked O.K.)


2002 MAR 02
   * started implementation of the vigneron
     finite difference splitting scheme in prim/_FANS_kpsi
     and cycle/res/conv
   * the constant br_conv has been added to all schemes in
     cycle/res/conv


2002 MAR 01
   * finished implementation of string arithmetic in lib/soap/soap.c


2002 FEB 28
   * in lib/soap/soap.c, fixed the if() command to accept a third
     argument which gets executed if the condition is false
     (i.e. if-then-else now works).
   * in lib/soap/soap.c, fixed the for() command to accept a decreasing
     loop
   * in lib/soap/soap.c, started to implement string arithmetic.
     so far, the operators == and != seem to work. Needs more checking


2002 FEB 26
   * got rid of numclip in the control file modules of cycle/
     also got rid of the ugly function _NumClip in prim/
   * fixed a bug when sending strings as arguments to SOAP_printf function:
     the quotes had to be taken away.
   * fixed a bug in lib/soap concerning strings not being taken into
     account when scanning for the action or function arguments in
     ProcessCode(); function.
   * fixed a bug in prim/_FANS_kpsi/prim.c in subroutine FindClipInfo()
     where a string of 2 bytes was given to strcpy instead of an empty
     string of 1 byte (spotted by valgrind)
   * included FindClipInfo() subroutine in prim/_Euler_entropic,
     prim/_Euler and prim/_Euler_p
   * updated the documentation in cycle/doc for the different cycles


2002 FEB 25
   * in GRIDG library, the error handling should now be complete
     Hurray!!
   * in cycle, changed the variables gl.CFL to CFL, gl.is to window.is,
     etc. Control file is cleaner, easier to read. The gl. used to
     be an indication that the variable ``belonged'' to warp, but
     was confusing to the user.
   * in cycle (all different modules there) changed the call to printf
     in the control file to include clipinfo, and get rid of the
     very ugly PrintClip();
     - still need to change prim/_Euler, prim/_Euler_s and prim/_Euler_P
   * in lib/soap, changed the way SubExprWithStrings was written,
     got rid of many bugs, and can now do some string arithmetic
     kind of..
   * in lib/soap, got rid of a little bug in CleanCode which replaced
     the operators even when inside a string (!=, ==, etc).


2002 FEB 24
   * fixed Runtime() module choking due to line numbering
   * changed some function calls in GRIDG library to return
     and error when error is encountered, instead of just exiting.
     - needs a little bit more work..


2002 FEB 22
   * in the src/post.c file, the WritePrimPostFile() action is altered
     so that when only the name of the post file is given as an argument
     without any xcuts, the domain sent to the WritePrimPost subroutine
     is the entire domain, not a domain of xcuts.
   * in the SOAP library, added line number output when error is encountered
     - still not all finished
     - chokes on Runtime() module
     - in GRIDG library, need to pass the line number to the findsegment 
       subroutine
     - check in src/post.c src/control.c etc. for all calls to fatalerror
       if line number could be outputted for clarity


2002 FEB 21
   * fixed a bug concerning the nodes reallocated in the domain for
     the standard, marchingwindow, sweepingwindow cycles. Used to
     be zone expanded by (bb+br) instead of just (br).
   * in the src/control.c file, made changes to check if
     all the modules are present (and in the correct order) in the
     control file. Finally!


2002 FEB 20
   * reorganized the cycles, in the same order as in the revised
     version of the JCP article


2002 FEB 17
   * okay, the Post() module in the control file seems fully
     operational; who said post-processing was hard?
   * changed the calls to the Scale() action part of gridg
     to have a different scaleing factor along x,y, and x


2002 FEB 11
   * added tom's subsonic outflow boundary condition with constant
     Mach number
     

2002 FEB 08
   * fixed a couple of bugs still in cycle/_activedomain/cycle.c
   * fixed a bug in cycle/_standard/cycle.c concerning #endif DISTMPI
   

2002 FEB 07
   * added Ouflow Mach number boundary condition, BC number 15
     affected files prim/_FANS_kpsi/prim.c and prim/_FANS_kpsi/prim_bdry.c
   * took away the post file module from being written to the
     control file in src/post.c
   * made the size of the marching window domain, active domain and
     sweeping window domain bigger when resuming nodes.
   * fixed a bug in the sweeping window. Basically, the boundary
     nodes (and residual) on the right of the sweeping window were not updated
     correctly.
   * altered quite a bit the active domain algorithm in cycle/_activedomain
     - is almost exactly as specified in AIAA Journal Article by Nakahashi
     - needs testing: do it tomorrow
   * took away subroutine CreateDomainOfCutsAlongx_old in src/post.c
   * added body forces to post module in src/post.c


2002 FEB 06
   * fixed a bug in lib/soap/soap.c concerning substituting
     expressions intertwined between strings
   * continued implementation of the post control file module
     - still need to put in the body forces
     - still need to put in the prim_post integration


2002 FEB 05
   * renamed SOAP_GetArgumStr to SOAP_GetArgumStraight
   * renamed SOAP_GetArgumInt to SOAP_GetArgumLong
   * added SOAP_GetArgumString to the lib/soap library
   * modified src/bdry.c and src/init.c to call SOAP_GetArgumLong
     instead of doing a round(SOAP_GetArgumDouble).
   * further modifications to src/control.c to accept post module
   * modifications to src/post.c for ReadPost subroutine: seems to work


2002 FEB 04
   * in lib/soap/soap.c, changed the way arguments are substituted
     to include the possible substitutions of expressions intertwined
     between strings in one argument


2002 FEB 02
   * started to code up the control fiel post module in
     src/post.c. Now that will make things prettier!
     - still doesn't work though. don't try it.

2002 JAN 31
   * added _Pstag() and _Tstag functions in prim/_FANS_kpsi/prim.c,
     and took away _Pstag() in prim/_FANS_kpsi/prim_post_thrustpotential.c
   * added cycle/_activedomain from Nakahashi
   

2002 JAN 29
   * Added contribution to the turbulence production term Pk
     for axisymmetric flow from Etele in prim/_FANS_kpsi/prim_source.c


2002 JAN 28
   * fixed another bug in prim/_FANS_kpsi/prim_source.c
     for axisymmetric source term. Used to be written 4/3 instead
     of 4.0/3.0
   * added the polynomials for the kerosene species in
     prim/thermo/_hightemp/thermo.c from Jason Etele
   * added subroutine dTskdT_from_T() from Jason Etele in
     prim/thermo/_hightemp/thermo.c and prim/thermo/_thermo.h
   * fixed a bug in subroutine dTskdT_from_T() from Jason Etele
     where it was written 1 instead of 1.0
   * update tools/rocket_v2/c to tools/rocket_v4/c from Etele
   * fixed bug in prim/_FANS_kpsi/prim_source.c: used to be
     a call to QUASI1D instead of gl->prim.QUASI1D.
     - also affected prim/_Euler_P/prim_source.c


2002 JAN 26
   * fixed a bug in prim/_FANS_kpsi/prim_init.c concerning a typo
     #endif#
   * fixed a problem in cycle/_marching/cycle.c that had been introduced
     in WARP version 02jan19: i.e. only the inner nodes must be changed to
     outflow at the window right boundary. The only problem with this
     strategy is that psimin ends up being clipped a lot at the marching
     window right boundary due to a bad wall distance. This does not
     affect the final answer.
     - WARNING: DO NOT USE ANY WARP VERSION FROM 02JAN19 to 02JAN25
   * added Mirror action in the GRIDG library
   * added Scale action in the GRIDG library
   * added ReverseIndex action in the GRIDG library


2002 JAN 25
   * fixed two bugs in src/post.c in subroutine CreateDomainOfCuts
     due to the new standard gl->prim


2002 JAN 24
   * updated prim/_Euler_entropic to the new gl->prim standard
   * updated prim/_Euler_P to the new gl->prim standard
     - finally!!
      

2002 JAN 23
   * got rid of global variables in prim/_Euler and prim/_FANS_kpsi;
     hurray!! they are now all in gl->prim
     - still need to do it in prim/_Euler_P and prim/_Euler_entropic
   * fixed a bug in prim/_FANS_kpsi/prim_source.c concerning axisymmetric
     source terms: used to be 2/3, changed to 2.0/3.0. oh no jason!!
     you have to rerun everything..
   * fixed bugs in prim/_FANS_kpsi/prim_source.c concerning the jacobians
     and source terms with AXISYMMETRIC and QUASI1D flags in them:
     the flags were evaluated for all dimensions, which shouldn't be,
     as they have not been initialized for all dimensions. Luckily,
     this hasn't influenced the behaviour of the code so far..
   * got rid of prim/chem/_generic. Too old and confusing.
   * update prim/chem/ subdirectories for new calls to prim subroutines
     - jachimowski done
     - lutz done
     - none done
     - singh done
   * updated tools/rocket_v2.c from Jason Eteles



2002 JAN 20
   * added some documentation to src/bdry.h
   * got rid of OUTER NODETYPE in src/common.h, this means binary datafiles
     with format 002 cannot be read in anymore. This hasn't been used in more
     than 16 months, so it shouldn't be an issue.
   * changed the protocols for a few functions in src/bdry.h. Affects
     the UpdateNodeType functions which used to specify a zone explicitly,
     with is,ie,js,je,ks,ke. Now, a zone_t variable is used. Much prettier.
   * modified cycle/_marching/cycle.c to work in conjunction with the
     node protocols of src/bdry.h
   * in prim/_FANS_kpsi/prim_bdry.c, moved FindPrim(); to a more
     global location in UpdateBdryPrim();
   * in all cycle/_?/cycle.c, made the control file variables specified
     by the user part of gl. No more global static variables part of
     cycle.c. Much better!
   * fixed a possible bug in cycle/_marching/cycle.c and cycle/_sweeping/cycle.c
     concerning the user-defined entrance variable not being rounded off
     when inputted from the control file.
   * renamed AF_for_HPACF to AF and the old AF to AF_fast which is being put
     as an experimental module.
     - _AF_for_HPACF is now adopted as the default method: it's a bit slower
       on the x86, but simpifies the configuration..


2002 JAN 19
   * fixed small bug in prim/_FANS_kpsi/prim_post_thrustpotential.c
     concerning an assertion to gl->DISTDOMAIN (took it away)
   * small modification to cycle/_marching/cycle.c: instead of updating
     only the inner nodes to outflow condition at the right end of
     the marching window, now both the inner and bdry nodes are updated
     to being outflow.


2002 JAN 18
   * took away pentiumpro option in config/config.c
   * finished up implementation of prim/_FANS_kpsi/prim_post.c to
     integrate viscous stresses: seems to work well, but requires
     a bit of testing


2002 JAN 17
   * added -ieee flag to ccc compiler by default, in config/config.c
   * removed the dependence on -px of -p2 flag in src/main.c
   * changed the copyright years in src/main.c and LICENSE
   * moved prim/_FANS_kpsi/prim_post.c and started a new prim_post
     to integrate viscous stresses at the walls (still not finished)


2002 JAN 15
   * further modifications to prim/Euler_P/prim_source.c


2001 DEC 19
   * added LUTZ chemical solver from Tim Huy


2001 DEC 14
   * added prim/_Euler_P and seems to work well


2001 DEC 10
   * fixed bug in prim/_Euler_entropic/prim_conv.c in FindFProe
   * altered FindRoeAverage in prim/_Euler_entropic/prim_conv.c to
     a simple arithmetic average. Needs work.


2001 DEC 09
   * further improvements to prim/_Euler_entropic
     - still a bug: uniform flow creates a residual


2001 DEC 07
   * further improvements to prim/_Euler_entropic


2001 DEC 05
   * added module prim/_Euler_entropic


2001 DEC 04
   * added module prim/_Euler: constant gamma, inviscid flow


2001 NOV 27
   * added rocket_v2.c in tools/
   * added documentation of rocket_v2 in tools/doc/Rocket_v2
   * added a short README file in tools/ summarizing each tool
     in that directory


2001 NOV 19
   * improved tools/prandtlmeyer.c 


2001 NOV 17
   * added the program prandtlmeyer.c in tools directory to compute
     the geometry of a concave isentropic compression fan


2001 NOV 16
   * improved the performance of CreateDomainOfCutsAlongx() algorithm
     by 100 times or so when doing DISTMPI
   * fixed bug in src/main.c concerning not writing to data file
     when quick (-q) flag is specified
   * altered the output to the screen in src/main.c using block ascii
     characters


2001 NOV 15
   * All calls to MPI_Send have been renamed to
     MPI_IBsend, a built-in function that calls either a non-blocking
     or a blocking sending function (the latter called every 200 calls
     or so)
     - affects src/data.c src/post.c src/common.c src/bdry.c src/init.c
       and src/control.c
   * modified cycle/_multizone/cycle.c and cycle/_sweeping/cycle.c to
     be usable with DISTMPI
   * modified cycle/_standard/cycle.c to report an error when compiled
     with DISTMPI
   * fixed a bug in cycle/_marching/cycle.c concerning the UpdateBdryNodes
     part of ResizeMarchingWindow
   * fixed a bug in cycle/share/cycle_share.c concerning ResumeNodesInZone
     and not enough memory allocated to noderes and bdryres
   * fixed a bug in src/post.c in CreateDomainOfCutsAlongx()


2001 NOV 14
   * moved subroutine CreateDomainOfCutsAlongx from src/common.c to
     src/post.c where it belongs (it is used only for post-processing
     purposes)
   * modified cycle/share/cycle_share.c so that the number of effective
     iterations in each process is taken as the maximum effective iterations
     spent in any process: afterall, the effective iterations is a number
     supposed to represent the total work accomplished, which in the
     case of an MPI formulation is really the maximum between each
     process.
   * modified CreateDomainOfCutsAlongx() subroutine to be usable with MPI
   * included the flag DISTDOMAIN in gl_t, that is TRUE for the normal
     nodes, but FALSE for the domain of x-cuts
   * changed the output to the screen (warp -v) in src/main.c


2001 NOV 13
   * altered src/bdry.c to make ShowNodeType DISTMPI compatible
   * fixed bug in src/common.c regarding subroutine NodeRank
   * in src/control.c, took away the local np and gl data initialization
     after the grid generation. Rather, it now calls InitDataStructure
     part of src/common.c, which is also used by CreateDomainOfCutsAlongx
     in src/common.c
   * fixed bugs in src/common.c for CreateDomainOfCutsAlongx, now
     seems to work fine but not with DISTMPI yet.


2001 NOV 12
   * altered src/post.c to make it compatible with distributed memory
     MPI
   * changed the calls from MPI_Send to MPI_Ssend in src/data.c
     and src/post.c when writing to data files. This creates a blocking
     which speeds up considerably writing to the data file
   * modified the transfer of the grid to be faster in src/control.c


2001 NOV 10
   * fixed 2 bugs in prim/_kpsi/prim_post.c that would have appeared
     only in 1D anyway
   * included #include <src/bdry.h> in cycle/share/cycle_share.c
   * improved efficiency of grid broadcasting and reading data file
   * altered reading and writing ascii data files subroutines
     for DISTMPI use
   * modified src/control.c to call DomainNeededFromDomain() and
     DomainFromRank() in src/common.c, related to DISTMPI


2001 NOV 09
   * modified src/control.c so that only process 0 generates the
     grid and broadcasts it to the other processes. A bit slow though..


2001 NOV 08
   * changed domain_needed to bb+br+2 from bb+br+1 in src/control.c
     (possibility of memory corruption there I think)
   * modified src/control.c to forbid the gridg library from
     outputting to the screen when rank!=0


2001 NOV 07
   * changed prim/_kpsi/prim_post.c for the inlet config


2001 NOV 06
   * fixed several bugs in cycle/_marching/cycle.c and
     cycle/share/cycle_share.c for DISTMPI implementation. It seems
     to be working great now in 2D at least.


2001 NOV 05
   * modified src/data.c to read and write binary files in MPI mode;
     - still needs some modifications for ascii read and write though
     - could need some cleaning up
   * fixed bug in SweepWith1DSegments in cycle/share/cycle_share.c
   * fixed several bugs in cycle/_marching/cycle.c


2001 NOV 04
   * limit the nodes being adjusted in AdjustNodeType part of
     src/bdry.c so that no violation of memory occurs
   * fixed bug in cycle/share/cycle_share.c concerning DISTMPI
     in SolveMultizone
   * took away the DISTMPI from FindXimax in cycle/share/cycle_share.c
     and put it in cycle/_marching/cycle.c
   * modified src/data.c for MPI read, not FINISHED


2001 NOV 03
   * transfered the subroutines affecting the positions of the boundary
     nodes in src/bdry.c from src/common.c
   * modified the calls to AdjustNodeType in cycle/_marching/cycle.c
     and in src/control.c
   * modified config/config.c and added the choices between distributed
     and non-distributed MPI strategies
   * renamed the non-distributed MPI flag to SHAREDMPI flag
   * added MPI commands for DISTMPI
   * when DISTMPI flag is set, the domain is automatically split into
     the number of processes in src/control.c


2001 NOV 02
   * made several changes to the subroutines in src to make it possible
     to run a case with the domain js set to 10. Works well in 2D
     - Need to test more, especially a cut.
     - altered cycle/_marching/cycle.c in ResizeMarchingWindow
     - NOTE: check the sweeping cycle, standard, and multizone cycle.c
       files for the same changes


2001 NOV 01
   * NOTE: officially started the distributed memory coding. All subsequent
     versions must be taken with a grain of salt until further notice.
   * moved the FindxyzBdry subroutine to the gridg library, where
     it belongs
     - needs some testing.
     - need to modify the FindCutAlongx subroutine in src/common.c
       and InitDataStruct subroutine as well
   * got rid of numxnodes, and replaced with the gl->domain_needed
     - also introduced here gl->domain_whole, to be used later on
       for distributed memory MPI


2001 OCT 31
   * added the revised prim/chem/_jachimowsky/chem.c file from
     Tim Huy: includes the analytical jacobian that works
   * added the lutz chemical model, at this stage, perfectly
     equal to the jachimowsky model
   * added dskdT_from_T function in prim/thermo/_hightemp


2001 OCT 29
   * added a modification to the Approximate factorization time
     stepping to reduce the mallocs made: called it _AF_for_HPACF


2001 OCT 25
   * increased the precision of the double precision numbers in src/post.c
     outputted to the grid file: fixes an issue in tecplot.
     Purely affects the post-processing file though, not the data files.


2001 OCT 23
   * added an example for prim_post.c (easier to read and understand
     than the original). the example is named
     prim/_kpsi/prim_post_example.c


2001 OCT 11
   * fixed bug in cycle/share/cycle_share.c concerning the residual
     not broadcasted after the SHAREDMPI loop


2001 OCT 08
   * fixed in common.c CreateDomainOfCuts to allow it to tackle
     only one cut. Very handy!
   * renamed functions in common.c _ValidNode to NodeValid,
     _ResumedNode to NodeResumed, etc: clearer.

   * modified prim/_kpsi/prim_post.c so that the integration
     goes through the entire domain, including the is and ie
     boundaries


2001 OCT 07
   * implemented the -px flag in main.c: works great!, and enables
     the user to cut the domain at certain x stations, which are
     afterwards outputted to the postfile
     - only an xstation which cuts through all i lines is valid
     - a minimum of 3 xstations is necessary
   * modified prim/metrics/_2ndOrder/metrics.c to revert to a
     first order accurate backward stencil to find dxdX when
     the second order accurate stencil induces a negative Jinv


2001 OCT 06
   * made the NODETYPE_ flags in src/common.h: makes many things
     much more readable
   * modified prim/_kpsi/prim_post.c perform some cuts along x
     prior to finding the integrated properties.
     o needs some more work.
     o -p2 flag is unusable with this version


2001 OCT 05
   * reverted to old convection ts method _Roe as the default and
     renamed the new one _Roe_new, as experimental


2001 OCT 04
   * added new convection ts method _Roe, and renamed the previous
     _Roe to _Roe_old for backward compatibility
   * moved subroutine AddConvJac from cycle/ts/share/ts_share.c to
     cycle/ts/conv/_Roe/convts.c
   * fixed bug in src/post.c, which did not bound the post region
     within the domain limits correctly
   * bugs in cycle/ts/_MAF and cycle/ts/_MAFk, where TYPELEVEL
     was wrongly typed in as NODETYPE.


2001 OCT 03
   * fixed a bug in lib/gridg/share.c, concerning exiting GRIDG
     when eps is not finite
   * fixed a bug in prim/metrics/_2ndOrder/metrics.c, concerning
     the determination of Jinv in 3D
   * in lib/gridg/2Dbase.c and lib/gridg/3Dbase.c, modified the Block
     subroutine in such a way that the NO segments do not need to
     be specified anymore: by setting i1=i2, it is implicit that
     no segment is desired along i, and hence no segment needs to
     be listed in the arguments.
     - needs further testing, but seems bug free for now
     - grid generation is much prettier now


2001 OCT 02
   * some changes to tools/injector.c
   * modified all files that included a function calling for a
     node type BASE, being TRUE or FALSE; this is now changed
     to specifying either TYPELEVEL_BASE or TYPELEVEL_WORK.
   * in prim/_kpsi/prim.c, in the function FindQtilde, FindQtilde2,
     etc, now checks whether the node is resumed before writing
     to wk->.


2001 OCT 01
   * fixed a bug in the prim/metrics/Makefile: the directory
     _2ndOrder was not included in the make cleanall
   * in lib/exm/exm.h, took away the #ifndef TRUE line:
     created a problem when compiling on a TRU64 OS with
     the default cc compiler.
     - removed the definition of mod and bool in soap.h
       and soap.c
     - the ifndef was needed if one wished to use both
       the soap and exm libraries at the same time,
       each of them declaring the bool type.
   * changed prim/metrics/_2ndOrder/metrics.c so that WARP
     exits ONLY when Jinv is negative AND the node is valid
     (with _ValidNode). It used to be set up so that WARP
     exits every time Jinv is negative.
     - this change should not be necessary however..
   * fixed a bug in lib/gridg/share.c which created the infamous
     'problem finding root'. Grid generation should be much easier
     on the end-user now..
   * in lib/gridg/xDbase, altered the size command to initialize
     the grid to a unit cube after it has been malloc'ed.
   * put tools/scripts and tools/predictions into one single
     directory (tools)
   * changed the behaviour of the -v flag in main.c: it is now
     only used to print out the version of the code along with
     some other info.


2001 SEP 30
   * included the tarwarp bash script in the directory tools/scripts


2001 SEP 26
   * fixed a small but in cycle/share/cycle_share.c concerning SHAREDMPI:
     - related to the changes in cycle with the zone struct replacing
       is,js,ks, ie,je,ke
   * added the compilation date, and version number in src/main.c
   * renamed SymTVDYee to YeeRoe_old in cycle/res/conv
   * created two directories for documentation in prim/metrics/doc
     and cycle/res/conv/doc, and altered appropriate Makefiles
   * implemented prim/metrics/_2ndOrder, with the old metrics
     renamed to prim/metrics/_2ndOrder_old
     - the YeeRoe scheme now works super on the boundaries.
     - still needs to be tested in 3D though
   * fixed a bug in src/post.c, in tecplot module in 3D


2001 SEP 25
   * changed some code in tools/predictions/inletgeom.c: works great
     now
   * fixed bug in src/main.c, converning post region command in 2D
   * modified slightly src/post.c, made it more elegant with zone
     and subzone


2001 SEP 24
   * moved lib/propulsion/propulsion.c and lib/propulsion/propulsion.h
     to tools/predictions/share.c and tools/predictions/share.h


2001 SEP 23
   * incorporated the zone concept in cycle/share
     - much cleaner interface to most subroutines in cycle_share
     - gl now has a 'domain' zone and a 'window' zone that replace
       gl.ais and gl.is respectively
     - since this affects a LOT of files, needs further testing


2001 SEP 08
   * in cycle/_marching/cycle.c and cycle/_sweeping/cycle.c,
     initialized wk->Res[flux] to 0.0e0, at the same time
     as wk->xi. Otherwise, this might give a problem on
     the alpha platform.


2001 SEP 07
   * in src/data.c, in the subroutine WriteDataFile, added
     a rename file before writing to data file.
     - just in case the job gets killed while writing..
   * commented out in cycle/share/cycle_share.c SMALLTHREADS:
     - it's necessary for stability on hpacf
   * added the function "defined" in lib/soap/soap.c


2001 SEP 06
   * some changes to cycle/share/cycle_share.c to speed up the SHAREDMPI,
     by threading the updateQtildeFromQ but not UpdateBdry


2001 SEP 05
   * fixed bug concerning xi. It originated from the marching
     cycle and sweeping cycle files, and were due to an initialization
     of Res[flux] instead of xi to zero, in the subroutine
     ResizeMarchingWindow.
   * fixed SHAREDMPI bug in cycle/share/cycle_share.c, concerning xi,
     which is not broadcasted along with the residual
     - maybe the residual does not need to be broadcasted. Only
       xi really matters. Needs some research, but is minor.
   * reset maxzonethread to 16 from 32 in cycle/share/cycle_share.c
     - this might improve the stability of the threads
   * in cycle/share/cycle_share.c, added the condition SMALLTHREADS
     if turned on, the boundary nodes and UpdateDQtilde.. will be
     threaded. Turned off by default.


2001 SEP 04
   * initialize xi to -10e99 when resuming nodes: this clears a problem
     appearing on the alpha chip in cycle_share.c, when comparing
     xi (which could be not a finite quantity) to a finite quantity.
     - note that this is NOT a bug fix, just a workaround, the
       xi bug needs to be figured out (only appears in the marching
       cycle)


2001 AUG 29
   * Implemented the YeeRoe scheme in cycle/res/conv.
     - differs from the previous Roe-symmetTVD-Yee scheme by respecting
       the characteristics at the boundaries
     - needs to be tested more, check if it conserves freestream,
       and adjust the metrics at the boundaries
     - can be made 2 times faster by storing in RAM Fint


2001 AUG 27
   * The species ordering is now defined at compile time
     - the ordering cannot be changed in the control file anymore
     - no more DefineSpecies in control file, and in thermo module
     - the config.c config file generator has been changed and
       asks the user for the species should no chemical model be
       used (chem=null)
     - upon executing warp -v, the user is given the species ordering,
       as it has been specified at compile time
     - upon executing warp -w control.file, at the top of the control
       file, the species ordering (as specified at compile time) is
       listed.


2001 AUG 10
   * implementation of IMPLICITBC part of ts.c. Affects all ts.c
     and ts_share.c
   * _xi is now called part of the residual. This should speed
     things up in a parallel environment (either threads or SHAREDMPI)
     and also in the situations where only a few zones are computed
   * the species ordering is now fixed at compile time, ordered
     by the chemistry modules (makes more sense from a chemistry
     point of view)
     - need to change the _null module to ask the user at compile
       time for some species


2001 AUG 09
   * implementation of PRECONDITIONING flag in control file, affects
     all cycle.c modules and ts.c modules


2001 AUG 02
   * further improvements to prim/_kpsi/doc/Performance


2001 JUL 31
   * further improvements to the doc prim/_kpsi/doc/Performance


2001 JUL 27
   * put prim/_kpsi/prim_post.c back to how it was before, with
     the correct constants for the injectors2 flowfield
   * got rid of MLOCK and TEST questions in config/config.c
   * changed name of gl->nn_lock to gl->lock
   * zone threads now support UpdateQtildeFromDQtilde and
     UpdateBdryNodes in cycle/share/cycle_share.c
     - NOTE: I wonder if these threads are too short, which
       might bug the kernel 2.4 on fe02. Needs testing.
   * got rid of M_PI in lib/exm and lib/soap, since it is not
     ANSI C compliant


2001 JUL 26
   * changed config/config.c: it now prompts for a choice of compiler,
     and the interface has been cleaned up a bit
   * all the fatal errors are now through the fatalerror() function
     in src/common.c. No more exit() anywhere in WARP, except for
     the libraries
   * added a fflush(stdout); at the end of the SOAP_printf command
     in lib/soap/printf.c


2001 JUl 25
   * improved the calling syntax for SweepWith1DSegments: much MUCH
     cleaner now. This affects several files in cycle/res and cycle/ts.


2001 JUL 20
   * got rid of SweepWith1DSegments_old everywhere. Hurray!


2001 JUL 19
   * copied SweepWith1DSegments to SweepWith1DSegments_old
     everywhere
   * changed SweepWith1DSegments in cycle/share/cycle_share.c
     so that the segments to be altered are now from is to ie
     inclusive as opposed to is to ie non-inclusive, which
     created some confusion
   * altered all files in cycle/ts which called SweepWith1DSegments
     - NOTE: this must be done for all files in the cycle/res as well
   * fixed bugs in cycle/ts/_MAF and cycle/ts/_MAFk which prevented
     them from being used in a multizone environment


2001 JUL 18
   * got rid of extstdio library and all the hassle it represented
   * made config/config.c completely independant of the libraries


2001 JUL 17
   * addition of SHAREDMPI command in cycle/share/cycle_share.c,
     src/main.c and src/common.h
   * addition of SHAREDMPI commands in src/data.c and src/post.c
     to prevent all processes from writing to the outfile/postfile
     at once.
   * addition of wfprintf function in src/common.c, which is called
     instead of the fprintf function everywhere in WARP


2001 JUL 13
   * fixed another misunderstanding in prim/_kpsi/prim_post.c, where
     the thrust potential is not evaluated if the stagnation pressure
     is lower than the pressure at the exit (Pstarc).
   * changed the system call to printf by including a printf.c
     module in lib/soap. The module is based on the code by the FSF
     for the system call printf. The system call from within WARP
     is not compatible with SHAREDMPI and should be avoided.


2001 JUL 12
   * changed the name to WARP, Window Allocatable Resolver for Propulsion
   * fixed a misunderstanding in prim/_kpsi/prim_post.c: when integrating
     Fpot along a streamline, if the speed drops below zero, better
     to just ignore that streamline
   * changed string THREADED to THREADS everywhere
   * fixed a bug for 1D formulation in src/control.c, and
     another one in prim/_kpsi/prim_conv.c


2001 JUL 11
   * amelioration of module prim/_kpsi/prim_post.c


2001 JUL 10
   * implementation of new high-temp stagnation pressure and thrust
     potential in prim/_kpsi/prim_post.c


2001 JUL 05
   * little enhancements to performance parameters document in 
     prim/_kpsi/doc/Performance


2001 JUN 29
   * Added EXM_NumInteg and EXM_NumDiff subroutines to the exm library


2001 JUN 28
   * Added a zone trimmer, for the determination of the residual. Results
     in reduced CPU time and much better zone threading.
   * zone threading works well now.
   * added a numthread optimizer in cycle/share/cycle_share.c


2001 JUN 26
   * Incorporated the SetupZones and SolveZones subroutines in 
     cycle/share/cycle_share.c, and called those from cycle.c in all
     cycle modules using multizone
   * Moved UpdateBdryNodes, SweepWith1DSegments to cycle/share/cycle_share.c
   * all the loop threading is now in cycle/share/cycle_share.c
   * got rid of the UpdateBdryNodes call from src/post.c and 
     prim/_kpsi/prim_post.c. Not needed anymore.
   * got rid of function ClockSpeed in common.c
   * modified config/config.c exchanging THREADED flag to ZONETHREADS
     and LOOPTHREADS flags


2001 JUN 25
   * cleaned up the documentation in cycle/doc to include only the
     domain decomposition algorithms and not the full article sent
     to the jcp.
   * renamed extmaths library to exm library
   * changed the names of the functions and data types in exm library
     to be preceded by EXM_ string. 
   * renamed gridgen library to gridg and added the prefix GRIDG_
     to all its external functions
   * added prefix SOAP_ to all external functions of the soap library


2001 JUN 23
   * moved the -f flag (frequency of WriteDataFile call) to being
     handled by the Runtime() module inside the control file.
     - altered cycle/_marching/cycle.c, cycle/_sweeping/cycle.c,
       cycle/_standard/cycle.c and cycle/_multizone/cycle.c
     - altered cycle/share/cycle_share.c
     - modified main.c extensively. A bit more readable now.
   * some further modifications to prim/_kpsi/doc/Performance
     document.


2001 JUN 22
   * added some error handling screen outputs in case
     a malloc call returns NULL in common.c


2001 JUN 21
   * included a document related to performance in
     prim/_kpsi/doc/performance


2001 JUN 14
   * removed the individual documentation of each cycle strategy
     and replaced by the article submitted to the JCP in cycle/doc


2001 JUN 13
   * finished implementing MAFk: works great
     - k is set to 2 permanently: the source must be modified to
       change it
   * combined all the docs in cycle/ts and made one document
     which is put in cycle/ts/doc
   * changed the global variables in prim/_kpsi to include the
     prefix extern


2001 JUN 11
   * changed the way the stagnation pressure is determined in 
     prim/_kpsi/prim_post.c to include the effect of a varying gamma
   * added bibliography databases in form nasa.bib, aiaa.bib, etc.
     in /lib/latex
 

2001 JUN 10
   * completed the documentation of MAF and MAF(k) methods in
     cycle/ts/_MAFk/doc


2001 JUN 06
   * added the psi variable in the initvars, part of prim/_kpsi/prim_init.c
     - the control file changes, in the init module. 
     - note that psi used to be automatically determined from the flow speed
       as psi=10*q


2001 JUN 03
   * fixed a bug in prim/_kpsi/prim_bdry.c in FindDwall: loop went to
     ns instead of nf.
   * incorporated PrintClip(FILE) function in prim/_kpsi/prim.c to print
     to FILE the properties clipped (like kmin, kmax, etc)
   * altered cycle/_marching/cycle.c, cycle/_multizone/cycle.c,
     cycle/_standard/cycle.c and cycle/_sweeping/cycle.c, changing
     the template written to the control file to take into account
     PrintClip();. Also got rid of some initialization to *codex,
     which is put in cycle/share/cycle_share.c 
   * in cycle/share/cycle_share.c, reset the number of clips after
     each time Runtime is called. Some will like this one!
   * included a new directory cycle/ts/share, with the linearization
     jacobians in there
 


2001 JUN 02
   * stabilized MAF: simply changing the convection linearization from
     the one proposed by MacCormack to the one used previously fixed
     the problem
     - fixed a bug in ts.c concerning the (wrong) non-update
       of dQtilde at the boundary nodes.
   * fixed a bug in cycle/ts/_approxfact/ts.c concerning the 
     non-update of dQtilde at the boundary nodes: only affects if
     BCs are implicit.
   * fixed a bug in lib/extmaths/extmaths.c


2001 JUN 01
   * continued implementation of MAF: still not very stable at CFL>1;
     strange.
   * implemented SolveTDMABlockAndCheck in lib/extmaths/extmaths.c
     to verify the exactness of the TDMA solver.
   * added third order terms to flux discretization in
     cycle/res/conv/_StegerWarming-FVS/convres.c
    

2001 MAY 31
   * fixed a bug in cycle/_sweeping/cycle.c, cycle/_standard/cycle.c
     and cycle/_multizone/cycle.c concerning copung codexcontrol
     to codex after the init module is called.
   * took away Vbig and omega post-processing variables (the last
     two) in prim/_kpsi/prim.c and prim/_kpsi/prim.hh


2001 MAY 28
   * changed the way the control file is read: everything now
     is read sequentially, one module after the other, as opposed
     to the previous ugly RXread functions (beurk!)
     - note that this affects the control file slightly, i.e.
          no more -initu flag and 'Unconditional' section. Simply
          insert the portion of the initial conditions after
          the ReadDatafile(); command for these to take effect
          after the data files have been read
   * implemented the _x, _y and _z global functions that
     can be used in all modules (except Runtime). Very handy
     for setting up fancy initial conditions.
   * changed the screen output of control.c
   * started implementation of MAF: still unstable


2001 MAY 17
   * fixed a small error in cH2S, the stoichiometric
     mass fraction of H2, part of prim/_kpsi/prim_post.c


2001 MAY 15
   * fixed a bug in prim/_kpsi/prim_bdry.c that affects the metrics
     computed for boundary node #9 (symmetrical first-order,
     momentum preserved)
   * added two new boundary conditions in prim/_kpsi/prim_bdry.c
     i.e. Euler slip wall first and second order
   * altered src/common.c in ShowNodeType subroutine to enable
     the correct printout of boundary nodes numbered higher
     than 9 as A, B, C, etc..
   * added the 3-part segment type in the lib/gridgen library and
     documented it in lib/gridgen/doc


2001 MAY 13
   * took away momentum contribution in _xi part of 
     prim/_kpsi/prim.c
   * split the prim.c file into several files in prim/_kpsi
   * added a minmod in cycle/res/conv/_generic: doesn't work
     too well: needs work


2001 MAY 12
   * in the marching and sweeping cycles, fixed bug concerning
     the entrance parameter (i.e. the window would not advance
     past the entrance point).


2001 MAY 06
   * included the momentum residual contribution in _xi part
     of prim/_kpsi/prim.c
   * included FindFinterface and _phi in prim/_kpsi/prim.c
   * included the generic convective flux solver in
     cycle/res/conv/_generic
   * renamed symmetTVD to Roe-symmetTVD and symmetTVD-Yee
     to Roe-symmetTVD-Yee in cycle/res/conv
   * added the directory prim/_kpsi_tmp to test eigenvalues


2001 APR 10
   * fixed bug in lib/extmaths/extmaths.c
     - the array *TMP size was determined by the function calling
       solve_TDMA_block and solve_PDMA_block
     - The size of *TMP is now fixed to 6 and declared locally.
     - affected the multizone decomposition when very small loops
       were used (ie-is<3).


2001 APR 09
   * fixed bug in cycle/*/cycle.c related to codex.FUNCTION=FALSE,
     codex.ACTION=FALSE, etc..
     - NJAMD doesn't complain anymore.


2001 APR 08
   * fixed warnings given by ccc (compaq c compiler)
     - included the inclusion of #include <string.h> in extstdio.h
   * fixed warnings given by AIX cc
     - use of // for a comment in extmaths.c
   * from the electric fence utility, malloc read/write over/underaccess
     were fixed
     - in cycle/ts/_approxfact/ts.c, maxnumb is taken from
       le minus ls as opposed to from gl.is, gl.js, etc.
     - in soap.c, at two places, the algorithm was trying to illegally
       read from ram not allocated (underread)
   * lib/memwatch has been taken away permanently
   * all libraries and common.h now include the file lib/include/memdebug.h
     - to be used in conjunction with the memwatch or MSS packages
     - just add the proper lines in there that you wish are included in
       all files of the project


2001 APR 04
   * incorporated a nan check in prim/hightemp/thermo.c


2001 APR 03
   * changed the default optimization level to 2 instead of 4
     - level 4 creates some problems with gcc (sometimes):
       use it at your own risk!!
     - optimization level 4 results in an executable which
       goes 2 times faster than level 2 though: but it affects
       mostly lib/extmaths/extmaths.c; therefore, just compiling
       extmaths.c with -O4 will give excellent results
   * all output to the screen (from the cycle.c files) is now
     the responsibility of the user in the control file
     - access to the necessary variables (like the number of zones,
       ximax, etc) is now possible for all cycles.


2001 MAR 28
   * addition of printf command in libsoap
     - same syntax as in C or the system printf command
       except for the \" command which is not supported in soap (yet).

